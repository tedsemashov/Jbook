{"ast":null,"code":"import{useEffect,useRef}from'react';import'./preview.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var html=\" \\n        <html>\\n            <head>\\n                <style>html { background-color: white }</style>\\n            </head>\\n            <body>\\n                <div id=\\\"root\\\"></div>\\n                <script>\\n                    const handleError = (err) => {\\n                        const root = document.querySelector('#root');\\n                         root.innerHTML = '<div style=\\\"color: red;\\\"><h4>Runtime Error</h4>' + err + '</div>';\\n                         console.error(err);\\n                    };\\n                    \\n                    window.addEventListener('error', event => {\\n                        event.preventDefault();\\n                        handleError(event.error);\\n                    });\\n                    \\n                    window.addEventListener('message', event => {\\n                        try {\\n                          eval(event.data);\\n                        } catch (err) {\\n                          handleError(err);\\n                        }\\n                    }, false);\\n                </script>\\n            </body>\\n        </html>\\n    \";var Preview=function Preview(_ref){var code=_ref.code,err=_ref.err;var iframe=useRef();useEffect(function(){iframe.current.srcdoc=html;setTimeout(function(){iframe.current.contentWindow.postMessage(code,'*');},50);},[code]);return/*#__PURE__*/_jsxs(\"div\",{className:\"preview-wrapper\",children:[/*#__PURE__*/_jsx(\"iframe\",{title:\"preview\",ref:iframe,sandbox:\"allow-scripts\",srcDoc:html}),err&&/*#__PURE__*/_jsx(\"div\",{className:\"preview-error\",children:err})]});};export default Preview;","map":{"version":3,"sources":["/Users/ted/Desktop/jbook/packages/local-client/src/components/preview.tsx"],"names":["useEffect","useRef","html","Preview","code","err","iframe","current","srcdoc","setTimeout","contentWindow","postMessage"],"mappings":"AAAA,OAASA,SAAT,CAAoBC,MAApB,KAAkC,OAAlC,CACA,MAAO,eAAP,C,wFAOA,GAAMC,CAAAA,IAAI,wlCAAV,CA+BA,GAAMC,CAAAA,OAA+B,CAAG,QAAlCA,CAAAA,OAAkC,MAAmB,IAAhBC,CAAAA,IAAgB,MAAhBA,IAAgB,CAAVC,GAAU,MAAVA,GAAU,CACvD,GAAMC,CAAAA,MAAM,CAAGL,MAAM,EAArB,CAEAD,SAAS,CAAC,UAAM,CACZM,MAAM,CAACC,OAAP,CAAeC,MAAf,CAAwBN,IAAxB,CACAO,UAAU,CAAC,UAAM,CACbH,MAAM,CAACC,OAAP,CAAeG,aAAf,CAA6BC,WAA7B,CAAyCP,IAAzC,CAA+C,GAA/C,EACH,CAFS,CAEP,EAFO,CAAV,CAGH,CALQ,CAKN,CAACA,IAAD,CALM,CAAT,CAOA,mBACI,aAAK,SAAS,CAAC,iBAAf,wBACI,eACI,KAAK,CAAC,SADV,CAEI,GAAG,CAAEE,MAFT,CAGI,OAAO,CAAC,eAHZ,CAII,MAAM,CAAEJ,IAJZ,EADJ,CAOKG,GAAG,eAAI,YAAK,SAAS,CAAC,eAAf,UAAgCA,GAAhC,EAPZ,GADJ,CAWH,CArBD,CAuBA,cAAeF,CAAAA,OAAf","sourcesContent":["import { useEffect, useRef } from 'react';\nimport './preview.css';\n\ninterface PreviewProps {\n    code: string;\n    err: string;\n}\n\nconst html = ` \n        <html>\n            <head>\n                <style>html { background-color: white }</style>\n            </head>\n            <body>\n                <div id=\"root\"></div>\n                <script>\n                    const handleError = (err) => {\n                        const root = document.querySelector('#root');\n                         root.innerHTML = '<div style=\"color: red;\"><h4>Runtime Error</h4>' + err + '</div>';\n                         console.error(err);\n                    };\n                    \n                    window.addEventListener('error', event => {\n                        event.preventDefault();\n                        handleError(event.error);\n                    });\n                    \n                    window.addEventListener('message', event => {\n                        try {\n                          eval(event.data);\n                        } catch (err) {\n                          handleError(err);\n                        }\n                    }, false);\n                </script>\n            </body>\n        </html>\n    `;\n\nconst Preview: React.FC<PreviewProps> = ({ code, err }) => {\n    const iframe = useRef<any>();\n\n    useEffect(() => {\n        iframe.current.srcdoc = html;\n        setTimeout(() => {\n            iframe.current.contentWindow.postMessage(code, '*');\n        }, 50)\n    }, [code]);\n\n    return (\n        <div className=\"preview-wrapper\">\n            <iframe\n                title=\"preview\"\n                ref={iframe}\n                sandbox=\"allow-scripts\"\n                srcDoc={html}\n            />\n            {err && <div className=\"preview-error\">{err}</div>}\n        </div>\n    )\n};\n\nexport default Preview;\n"]},"metadata":{},"sourceType":"module"}