{"ast":null,"code":"var _jsxFileName = \"/Users/ted/Desktop/code-editor/src/components/cell-list-item.tsx\";\nimport CodeCell from './code-cell';\nimport TextEditor from './text-editor';\nimport ActionBar from './action-bar';\nimport './cell-list-item.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CellListItem = _ref => {\n  let {\n    cell\n  } = _ref;\n  let child;\n\n  if (cell.type === 'code') {\n    child = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-bar-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(ActionBar, {\n          id: cell.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CodeCell, {\n        cell: cell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  } else {\n    child = /*#__PURE__*/_jsxDEV(TextEditor, {\n      cell: cell\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cell-list-item\",\n    children: [child, /*#__PURE__*/_jsxDEV(ActionBar, {\n      id: cell.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_c = CellListItem;\nexport default CellListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"CellListItem\");","map":{"version":3,"sources":["/Users/ted/Desktop/code-editor/src/components/cell-list-item.tsx"],"names":["CodeCell","TextEditor","ActionBar","CellListItem","cell","child","type","id"],"mappings":";AACA,OAAOA,QAAP,MAAqB,aAArB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAO,sBAAP;;;;AAMA,MAAMC,YAAyC,GAAG,QAAc;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AAC5D,MAAIC,KAAJ;;AAEA,MAAGD,IAAI,CAACE,IAAL,KAAc,MAAjB,EAAyB;AACvBD,IAAAA,KAAK,gBAAG;AAAA,8BACJ;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,+BACE,QAAC,SAAD;AAAW,UAAA,EAAE,EAAED,IAAI,CAACG;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADI,eAIJ,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEH;AAAhB;AAAA;AAAA;AAAA;AAAA,cAJI;AAAA,oBAAR;AAMD,GAPD,MAOO;AACHC,IAAAA,KAAK,gBAAG,QAAC,UAAD;AAAY,MAAA,IAAI,EAAED;AAAlB;AAAA;AAAA;AAAA;AAAA,YAAR;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,eACKC,KADL,eAEI,QAAC,SAAD;AAAW,MAAA,EAAE,EAAED,IAAI,CAACG;AAApB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CApBD;;KAAMJ,Y;AAsBN,eAAeA,YAAf","sourcesContent":["import { Cell } from '../state';\nimport CodeCell from './code-cell';\nimport TextEditor from './text-editor';\nimport ActionBar from './action-bar';\nimport './cell-list-item.css';\n\ninterface CellListItemProps {\n    cell: Cell\n}\n\nconst CellListItem: React.FC<CellListItemProps> = ({ cell }) => {\n    let child: JSX.Element;\n\n    if(cell.type === 'code') {\n      child = <>\n          <div className=\"action-bar-wrapper\">\n            <ActionBar id={cell.id} />\n          </div>\n          <CodeCell cell={cell} />\n      </>\n    } else {\n        child = <TextEditor cell={cell} />\n    }\n\n    return (\n        <div className=\"cell-list-item\">\n            {child}\n            <ActionBar id={cell.id}/>\n        </div>\n    )\n}\n\nexport default CellListItem;\n"]},"metadata":{},"sourceType":"module"}