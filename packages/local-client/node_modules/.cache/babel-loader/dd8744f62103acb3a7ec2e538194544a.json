{"ast":null,"code":"var _jsxFileName = \"/Users/ted/Desktop/code-editor/src/components/preview.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst html = ` \n        <html>\n        <head></head>\n        <body>\n            <div id=\"root\"></div>\n            <script>\n                window.addEventListener('message', event => {\n                    try {\n                      eval(event.data);\n                    } catch (err) {\n                      const root = document.querySelector('#root');\n                      \n                      root.innerHTML = '<div style=\"color: red;\"><h4>Runtime Error</h4>' + err + '</div>';\n                      console.error(err);\n                    }\n                }, false)\n            </script>\n        </body>\n        </html>\n    `;\n\nconst Preview = _ref => {\n  _s();\n\n  let {\n    code\n  } = _ref;\n  const iframe = useRef();\n  useEffect(() => {\n    iframe.current.srcdoc = html;\n    iframe.current.contentWindow.postMessage(code, '*');\n  }, [code]);\n  return /*#__PURE__*/_jsxDEV(\"iframe\", {\n    style: {\n      backgroundColor: \"white\"\n    },\n    title: \"preview\",\n    ref: iframe,\n    sandbox: \"allow-scripts\",\n    srcDoc: html\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Preview, \"GAFleWBZ6O+8Op7dBuDH6PzOglQ=\");\n\n_c = Preview;\nexport default Preview;\n\nvar _c;\n\n$RefreshReg$(_c, \"Preview\");","map":{"version":3,"sources":["/Users/ted/Desktop/code-editor/src/components/preview.tsx"],"names":["useEffect","useRef","html","Preview","code","iframe","current","srcdoc","contentWindow","postMessage","backgroundColor"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;;AAMA,MAAMC,IAAI,GAAI;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAnBA;;AAqBA,MAAMC,OAA+B,GAAG,QAAa;AAAA;;AAAA,MAAZ;AAAEC,IAAAA;AAAF,GAAY;AACjD,QAAMC,MAAM,GAAGJ,MAAM,EAArB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,MAAM,CAACC,OAAP,CAAeC,MAAf,GAAwBL,IAAxB;AACAG,IAAAA,MAAM,CAACC,OAAP,CAAeE,aAAf,CAA6BC,WAA7B,CAAyCL,IAAzC,EAA+C,GAA/C;AACH,GAHQ,EAGN,CAACA,IAAD,CAHM,CAAT;AAKA,sBAAO;AACH,IAAA,KAAK,EAAE;AAAEM,MAAAA,eAAe,EAAE;AAAnB,KADJ;AAEH,IAAA,KAAK,EAAC,SAFH;AAGH,IAAA,GAAG,EAAEL,MAHF;AAIH,IAAA,OAAO,EAAC,eAJL;AAKH,IAAA,MAAM,EAAEH;AALL;AAAA;AAAA;AAAA;AAAA,UAAP;AAMH,CAdD;;GAAMC,O;;KAAAA,O;AAgBN,eAAeA,OAAf","sourcesContent":["import { useEffect, useRef } from 'react';\n\ninterface PreviewProps {\n    code: string;\n}\n\nconst html = ` \n        <html>\n        <head></head>\n        <body>\n            <div id=\"root\"></div>\n            <script>\n                window.addEventListener('message', event => {\n                    try {\n                      eval(event.data);\n                    } catch (err) {\n                      const root = document.querySelector('#root');\n                      \n                      root.innerHTML = '<div style=\"color: red;\"><h4>Runtime Error</h4>' + err + '</div>';\n                      console.error(err);\n                    }\n                }, false)\n            </script>\n        </body>\n        </html>\n    `;\n\nconst Preview: React.FC<PreviewProps> = ({ code}) => {\n    const iframe = useRef<any>();\n\n    useEffect(() => {\n        iframe.current.srcdoc = html;\n        iframe.current.contentWindow.postMessage(code, '*');\n    }, [code]);\n\n    return <iframe\n        style={{ backgroundColor: \"white\" }}\n        title=\"preview\"\n        ref={iframe}\n        sandbox=\"allow-scripts\"\n        srcDoc={html} />\n};\n\nexport default Preview;\n"]},"metadata":{},"sourceType":"module"}