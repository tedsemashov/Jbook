{"ast":null,"code":"import _asyncToGenerator from\"/Users/ted/Desktop/jbook/packages/local-client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/Users/ted/Desktop/jbook/packages/local-client/node_modules/@babel/runtime/regenerator/index.js\";// Type TS\nimport{ActionType}from\"../action-types\";import bundle from\"../../bundler\";export var updateCell=function updateCell(id,content){return{type:ActionType.UPDATE_CELL,payload:{id:id,content:content}};};export var deleteCell=function deleteCell(id){return{type:ActionType.DELETE_CELL,payload:id};};export var moveCell=function moveCell(id,direction){return{type:ActionType.MOVE_CELL,payload:{id:id,direction:direction}};};export var insertCellAfter=function insertCellAfter(id,cellType){return{type:ActionType.INSERT_CELL_AFTER,payload:{id:id,type:cellType}};};export var createBundle=function createBundle(cellId,input){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch({type:ActionType.BUNDLE_START,payload:{cellId:cellId}});_context.next=3;return bundle(input);case 3:result=_context.sent;dispatch({type:ActionType.BUNDLE_COMPLETE,payload:{cellId:cellId,bundle:result}});case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/ted/Desktop/jbook/packages/local-client/src/state/action-creators/index.ts"],"names":["ActionType","bundle","updateCell","id","content","type","UPDATE_CELL","payload","deleteCell","DELETE_CELL","moveCell","direction","MOVE_CELL","insertCellAfter","cellType","INSERT_CELL_AFTER","createBundle","cellId","input","dispatch","BUNDLE_START","result","BUNDLE_COMPLETE"],"mappings":"2QAAgC;AAChC,OAAQA,UAAR,KAAyB,iBAAzB,CAUA,MAAOC,CAAAA,MAAP,KAAmB,eAAnB,CAEA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,EAAD,CAAaC,OAAb,CAAmD,CACzE,MAAO,CACHC,IAAI,CAAEL,UAAU,CAACM,WADd,CAEHC,OAAO,CAAE,CACLJ,EAAE,CAAFA,EADK,CAELC,OAAO,CAAPA,OAFK,CAFN,CAAP,CAOH,CARM,CAUP,MAAO,IAAMI,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACL,EAAD,CAAkC,CACxD,MAAO,CACHE,IAAI,CAAEL,UAAU,CAACS,WADd,CAEHF,OAAO,CAAEJ,EAFN,CAAP,CAIH,CALM,CAOP,MAAO,IAAMO,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACP,EAAD,CAAaQ,SAAb,CAAsD,CAC1E,MAAO,CACHN,IAAI,CAAEL,UAAU,CAACY,SADd,CAEHL,OAAO,CAAE,CACLJ,EAAE,CAAFA,EADK,CAELQ,SAAS,CAATA,SAFK,CAFN,CAAP,CAOH,CARM,CAUP,MAAO,IAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACV,EAAD,CAAoBW,QAApB,CAAoE,CAC/F,MAAO,CACHT,IAAI,CAAEL,UAAU,CAACe,iBADd,CAEHR,OAAO,CAAE,CACLJ,EAAE,CAAFA,EADK,CAELE,IAAI,CAAES,QAFD,CAFN,CAAP,CAOH,CARM,CAUP,MAAO,IAAME,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,MAAD,CAAiBC,KAAjB,CAAmC,CAC3D,+FAAO,iBAAOC,QAAP,6HACHA,QAAQ,CAAC,CACLd,IAAI,CAAEL,UAAU,CAACoB,YADZ,CAELb,OAAO,CAAE,CACLU,MAAM,CAANA,MADK,CAFJ,CAAD,CAAR,CADG,sBAQkBhB,CAAAA,MAAM,CAACiB,KAAD,CARxB,QAQGG,MARH,eAUHF,QAAQ,CAAC,CACLd,IAAI,CAAEL,UAAU,CAACsB,eADZ,CAELf,OAAO,CAAE,CACLU,MAAM,CAANA,MADK,CAELhB,MAAM,CAAEoB,MAFH,CAFJ,CAAD,CAAR,CAVG,sDAAP,+DAkBH,CAnBM","sourcesContent":["import {Dispatch} from \"redux\"; // Type TS\nimport {ActionType} from \"../action-types\";\nimport {\n    Action,\n    DeleteCellAction,\n    Direction,\n    InsertCellAfterAction,\n    MoveCellAction,\n    UpdateCellAction,\n} from \"../actions\";\nimport {CellTypes} from \"../cell\";\nimport bundle from \"../../bundler\";\n\nexport const updateCell = (id: string, content: string): UpdateCellAction => {\n    return {\n        type: ActionType.UPDATE_CELL,\n        payload: {\n            id,\n            content\n        }\n    }\n};\n\nexport const deleteCell = (id: string): DeleteCellAction => {\n    return {\n        type: ActionType.DELETE_CELL,\n        payload: id,\n    }\n};\n\nexport const moveCell = (id: string, direction: Direction): MoveCellAction => {\n    return {\n        type: ActionType.MOVE_CELL,\n        payload: {\n            id,\n            direction\n        }\n    }\n};\n\nexport const insertCellAfter = (id: string | null, cellType: CellTypes ): InsertCellAfterAction => {\n    return {\n        type: ActionType.INSERT_CELL_AFTER,\n        payload: {\n            id,\n            type: cellType\n        }\n    }\n};\n\nexport const createBundle = (cellId: string, input: string) => {\n    return async (dispatch: Dispatch<Action>) => {\n        dispatch({\n            type: ActionType.BUNDLE_START,\n            payload: {\n                cellId\n            }\n        });\n\n        const result = await bundle(input);\n\n        dispatch({\n            type: ActionType.BUNDLE_COMPLETE,\n            payload: {\n                cellId,\n                bundle: result\n            }\n        })\n    }\n};\n"]},"metadata":{},"sourceType":"module"}