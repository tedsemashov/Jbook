{"ast":null,"code":"var _jsxFileName = \"/Users/ted/Desktop/code-editor/src/components/preview.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef } from 'react';\nimport './preview.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst html = ` \n        <html>\n            <head>\n            <style></style>\n</head>\n            <body>\n                <div id=\"root\"></div>\n                <script>\n                    window.addEventListener('message', event => {\n                        try {\n                          eval(event.data);\n                        } catch (err) {\n                          const root = document.querySelector('#root');\n                          \n                          root.innerHTML = '<div style=\"color: red;\"><h4>Runtime Error</h4>' + err + '</div>';\n                          console.error(err);\n                        }\n                    }, false)\n                </script>\n            </body>\n        </html>\n    `;\n\nconst Preview = _ref => {\n  _s();\n\n  let {\n    code\n  } = _ref;\n  const iframe = useRef();\n  useEffect(() => {\n    iframe.current.srcdoc = html;\n    iframe.current.contentWindow.postMessage(code, '*');\n  }, [code]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"preview-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n      title: \"preview\",\n      ref: iframe,\n      sandbox: \"allow-scripts\",\n      srcDoc: html\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Preview, \"GAFleWBZ6O+8Op7dBuDH6PzOglQ=\");\n\n_c = Preview;\nexport default Preview;\n\nvar _c;\n\n$RefreshReg$(_c, \"Preview\");","map":{"version":3,"sources":["/Users/ted/Desktop/code-editor/src/components/preview.tsx"],"names":["useEffect","useRef","html","Preview","code","iframe","current","srcdoc","contentWindow","postMessage"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AACA,OAAO,eAAP;;AAMA,MAAMC,IAAI,GAAI;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KArBA;;AAuBA,MAAMC,OAA+B,GAAG,QAAa;AAAA;;AAAA,MAAZ;AAAEC,IAAAA;AAAF,GAAY;AACjD,QAAMC,MAAM,GAAGJ,MAAM,EAArB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,MAAM,CAACC,OAAP,CAAeC,MAAf,GAAwBL,IAAxB;AACAG,IAAAA,MAAM,CAACC,OAAP,CAAeE,aAAf,CAA6BC,WAA7B,CAAyCL,IAAzC,EAA+C,GAA/C;AACH,GAHQ,EAGN,CAACA,IAAD,CAHM,CAAT;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,2BACI;AACI,MAAA,KAAK,EAAC,SADV;AAEI,MAAA,GAAG,EAAEC,MAFT;AAGI,MAAA,OAAO,EAAC,eAHZ;AAII,MAAA,MAAM,EAAEH;AAJZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAlBD;;GAAMC,O;;KAAAA,O;AAoBN,eAAeA,OAAf","sourcesContent":["import { useEffect, useRef } from 'react';\nimport './preview.css';\n\ninterface PreviewProps {\n    code: string;\n}\n\nconst html = ` \n        <html>\n            <head>\n            <style></style>\n</head>\n            <body>\n                <div id=\"root\"></div>\n                <script>\n                    window.addEventListener('message', event => {\n                        try {\n                          eval(event.data);\n                        } catch (err) {\n                          const root = document.querySelector('#root');\n                          \n                          root.innerHTML = '<div style=\"color: red;\"><h4>Runtime Error</h4>' + err + '</div>';\n                          console.error(err);\n                        }\n                    }, false)\n                </script>\n            </body>\n        </html>\n    `;\n\nconst Preview: React.FC<PreviewProps> = ({ code}) => {\n    const iframe = useRef<any>();\n\n    useEffect(() => {\n        iframe.current.srcdoc = html;\n        iframe.current.contentWindow.postMessage(code, '*');\n    }, [code]);\n\n    return (\n        <div className=\"preview-wrapper\">\n            <iframe\n                title=\"preview\"\n                ref={iframe}\n                sandbox=\"allow-scripts\"\n                srcDoc={html}\n            />\n        </div>\n    )\n};\n\nexport default Preview;\n"]},"metadata":{},"sourceType":"module"}