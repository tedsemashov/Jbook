{"ast":null,"code":"import produce from \"immer\";\nimport { ActionType } from \"../action-types\";\nconst initialState = {};\nconst reducer = produce(function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ActionType.BUNDLE_START:\n      state[action.payload.cellId] = {\n        loading: true,\n        code: '',\n        err: ''\n      };\n      return state;\n\n    case ActionType.BUNDLE_COMPLETE:\n      state[action.payload.cellId] = {\n        loading: false,\n        code: action.payload.bundle.code,\n        err: action.payload.bundle.err\n      };\n      return state;\n\n    default:\n      return state;\n  }\n});\nexport default reducer;","map":{"version":3,"sources":["/Users/ted/Desktop/code-editor/src/state/reducers/bundlesReducer.ts"],"names":["produce","ActionType","initialState","reducer","state","action","type","BUNDLE_START","payload","cellId","loading","code","err","BUNDLE_COMPLETE","bundle"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AACA,SAAQC,UAAR,QAAyB,iBAAzB;AAWA,MAAMC,YAA0B,GAAG,EAAnC;AAEA,MAAMC,OAAO,GAAGH,OAAO,CAAC,YAAsE;AAAA,MAArEI,KAAqE,uEAA/CF,YAA+C;AAAA,MAAjCG,MAAiC;;AAC1F,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKL,UAAU,CAACM,YAAhB;AACIH,MAAAA,KAAK,CAACC,MAAM,CAACG,OAAP,CAAeC,MAAhB,CAAL,GAA+B;AAC7BC,QAAAA,OAAO,EAAE,IADoB;AAE7BC,QAAAA,IAAI,EAAE,EAFuB;AAG7BC,QAAAA,GAAG,EAAE;AAHwB,OAA/B;AAKA,aAAOR,KAAP;;AACJ,SAAKH,UAAU,CAACY,eAAhB;AACIT,MAAAA,KAAK,CAACC,MAAM,CAACG,OAAP,CAAeC,MAAhB,CAAL,GAA+B;AAC3BC,QAAAA,OAAO,EAAE,KADkB;AAE3BC,QAAAA,IAAI,EAAEN,MAAM,CAACG,OAAP,CAAeM,MAAf,CAAsBH,IAFD;AAG3BC,QAAAA,GAAG,EAAEP,MAAM,CAACG,OAAP,CAAeM,MAAf,CAAsBF;AAHA,OAA/B;AAKA,aAAOR,KAAP;;AACJ;AACI,aAAOA,KAAP;AAhBR;AAkBH,CAnBsB,CAAvB;AAqBA,eAAeD,OAAf","sourcesContent":["import produce from \"immer\";\nimport {ActionType} from \"../action-types\";\nimport {Action} from \"../actions\";\n\ninterface BundlesState {\n    [key: string]: {\n        loading: boolean;\n        code: string;\n        err: string;\n    }\n}\n\nconst initialState: BundlesState = {};\n\nconst reducer = produce((state: BundlesState = initialState, action: Action): BundlesState => {\n    switch (action.type) {\n        case ActionType.BUNDLE_START:\n            state[action.payload.cellId] = {\n              loading: true,\n              code: '',\n              err: '',\n            };\n            return state;\n        case ActionType.BUNDLE_COMPLETE:\n            state[action.payload.cellId] = {\n                loading: false,\n                code: action.payload.bundle.code,\n                err: action.payload.bundle.err,\n            };\n            return state;\n        default:\n            return state\n    }\n})\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}