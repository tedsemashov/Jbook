{"ast":null,"code":"var _jsxFileName = \"/Users/ted/Desktop/code-editor/src/components/cell-list.tsx\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from \"react\";\nimport { useTypedSelector } from \"../hooks/use-typed-selector\";\nimport CellListItem from \"./cell-list-item\";\nimport AddCell from './add-cell';\nimport './cell-list.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CellList = () => {\n  _s();\n\n  const cells = useTypedSelector(_ref => {\n    let {\n      cells: {\n        order,\n        data\n      }\n    } = _ref;\n    return order.map(id => data[id]);\n  });\n  const renderedCells = cells.map(cell => /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CellListItem, {\n      cell: cell\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddCell, {\n      previousCellId: cell.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, cell.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: cells.length === 0 ? 'force-visible' : '',\n      children: /*#__PURE__*/_jsxDEV(AddCell, {\n        previousCellId: null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), renderedCells]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CellList, \"ij3ho+NMbIxaBKnXgl+evU0tiZI=\", false, function () {\n  return [useTypedSelector];\n});\n\n_c = CellList;\nexport default CellList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CellList\");","map":{"version":3,"sources":["/Users/ted/Desktop/code-editor/src/components/cell-list.tsx"],"names":["Fragment","useTypedSelector","CellListItem","AddCell","CellList","cells","order","data","map","id","renderedCells","cell","length"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,gBAAT,QAAiC,6BAAjC;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAO,iBAAP;;;AAEA,MAAMC,QAAkB,GAAG,MAAM;AAAA;;AAC7B,QAAMC,KAAK,GAAGJ,gBAAgB,CAAC;AAAA,QAAC;AAACI,MAAAA,KAAK,EAAE;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT;AAAR,KAAD;AAAA,WAA8BD,KAAK,CAACE,GAAN,CAAWC,EAAD,IAAQF,IAAI,CAACE,EAAD,CAAtB,CAA9B;AAAA,GAAD,CAA9B;AAEA,QAAMC,aAAa,GAAGL,KAAK,CAACG,GAAN,CAAUG,IAAI,iBAChC,QAAC,QAAD;AAAA,4BACI,QAAC,YAAD;AAAc,MAAA,IAAI,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,OAAD;AAAS,MAAA,cAAc,EAAEA,IAAI,CAACF;AAA9B;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,KAAeE,IAAI,CAACF,EAApB;AAAA;AAAA;AAAA;AAAA,UADkB,CAAtB;AAOA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEJ,KAAK,CAACO,MAAN,KAAiB,CAAjB,GAAqB,eAArB,GAAuC,EAAvD;AAAA,6BACI,QAAC,OAAD;AAAS,QAAA,cAAc,EAAE;AAAzB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,EAIKF,aAJL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAlBD;;GAAMN,Q;UACYH,gB;;;KADZG,Q;AAoBN,eAAeA,QAAf","sourcesContent":["import { Fragment } from \"react\";\nimport { useTypedSelector } from \"../hooks/use-typed-selector\";\nimport CellListItem from \"./cell-list-item\";\nimport AddCell from './add-cell';\nimport './cell-list.css';\n\nconst CellList: React.FC = () => {\n    const cells = useTypedSelector(({cells: { order, data }}) => order.map((id) => data[id]));\n\n    const renderedCells = cells.map(cell => (\n        <Fragment key={cell.id}>\n            <CellListItem cell={cell} />\n            <AddCell previousCellId={cell.id} />\n        </Fragment>\n    ))\n\n    return (\n        <div>\n            <div className={cells.length === 0 ? 'force-visible' : ''}>\n                <AddCell previousCellId={null}/>\n            </div>\n            {renderedCells}\n        </div>\n    )\n};\n\nexport default CellList;\n"]},"metadata":{},"sourceType":"module"}