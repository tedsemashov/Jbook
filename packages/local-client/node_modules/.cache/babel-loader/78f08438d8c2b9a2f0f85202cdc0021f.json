{"ast":null,"code":"var _jsxFileName = \"/Users/ted/Desktop/code-editor/src/components/resizable.tsx\",\n    _s = $RefreshSig$();\n\nimport './resizable.css';\nimport { useEffect } from 'react';\nimport { ResizableBox } from 'react-resizable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Resizable = _ref => {\n  _s();\n\n  let {\n    direction,\n    children\n  } = _ref;\n  let resizableProps;\n  useEffect(() => {\n    const listener = () => {\n      console.log();\n    };\n  }, []);\n\n  if (direction === 'horizontal') {\n    resizableProps = {\n      className: 'resize-horizontal',\n      minConstraints: [window.innerWidth * 0.2, Infinity],\n      maxConstraints: [window.innerWidth * 0.75, Infinity],\n      height: Infinity,\n      width: window.innerWidth * 0.75,\n      resizeHandles: ['e']\n    };\n  } else {\n    resizableProps = {\n      minConstraints: [Infinity, 24],\n      maxConstraints: [Infinity, window.innerHeight * 0.9],\n      height: 300,\n      width: Infinity,\n      resizeHandles: ['s']\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(ResizableBox, { ...resizableProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Resizable, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Resizable;\nexport default Resizable;\n\nvar _c;\n\n$RefreshReg$(_c, \"Resizable\");","map":{"version":3,"sources":["/Users/ted/Desktop/code-editor/src/components/resizable.tsx"],"names":["useEffect","ResizableBox","Resizable","direction","children","resizableProps","listener","console","log","className","minConstraints","window","innerWidth","Infinity","maxConstraints","height","width","resizeHandles","innerHeight"],"mappings":";;;AAAA,OAAO,iBAAP;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,YAAT,QAAgD,iBAAhD;;;AAMA,MAAMC,SAAmC,GAAG,QAA6B;AAAA;;AAAA,MAA5B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAA4B;AACvE,MAAIC,cAAJ;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,QAAQ,GAAG,MAAM;AACrBC,MAAAA,OAAO,CAACC,GAAR;AACD,KAFD;AAGD,GAJQ,EAIP,EAJO,CAAT;;AAMA,MAAIL,SAAS,KAAK,YAAlB,EAAgC;AAC9BE,IAAAA,cAAc,GAAG;AACfI,MAAAA,SAAS,EAAE,mBADI;AAEfC,MAAAA,cAAc,EAAE,CAACC,MAAM,CAACC,UAAP,GAAoB,GAArB,EAA0BC,QAA1B,CAFD;AAGfC,MAAAA,cAAc,EAAE,CAACH,MAAM,CAACC,UAAP,GAAoB,IAArB,EAA2BC,QAA3B,CAHD;AAIfE,MAAAA,MAAM,EAAEF,QAJO;AAKfG,MAAAA,KAAK,EAAEL,MAAM,CAACC,UAAP,GAAoB,IALZ;AAMfK,MAAAA,aAAa,EAAE,CAAC,GAAD;AANA,KAAjB;AAQD,GATD,MASO;AACLZ,IAAAA,cAAc,GAAG;AACfK,MAAAA,cAAc,EAAE,CAACG,QAAD,EAAW,EAAX,CADD;AAEfC,MAAAA,cAAc,EAAE,CAACD,QAAD,EAAWF,MAAM,CAACO,WAAP,GAAqB,GAAhC,CAFD;AAGfH,MAAAA,MAAM,EAAE,GAHO;AAIfC,MAAAA,KAAK,EAAEH,QAJQ;AAKfI,MAAAA,aAAa,EAAE,CAAC,GAAD;AALA,KAAjB;AAOD;;AAED,sBAAO,QAAC,YAAD,OAAkBZ,cAAlB;AAAA,cAAmCD;AAAnC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA7BD;;GAAMF,S;;KAAAA,S;AA+BN,eAAeA,SAAf","sourcesContent":["import './resizable.css';\nimport { useEffect } from 'react';\nimport { ResizableBox, ResizableBoxProps } from 'react-resizable';\n\ninterface ResizableProps {\n  direction: 'horizontal' | 'vertical';\n}\n\nconst Resizable: React.FC<ResizableProps> = ({ direction, children }) => {\n  let resizableProps: ResizableBoxProps;\n\n  useEffect(() => {\n    const listener = () => {\n      console.log()\n    }\n  },[])\n\n  if (direction === 'horizontal') {\n    resizableProps = {\n      className: 'resize-horizontal',\n      minConstraints: [window.innerWidth * 0.2, Infinity],\n      maxConstraints: [window.innerWidth * 0.75, Infinity],\n      height: Infinity,\n      width: window.innerWidth * 0.75,\n      resizeHandles: ['e'],\n    };\n  } else {\n    resizableProps = {\n      minConstraints: [Infinity, 24],\n      maxConstraints: [Infinity, window.innerHeight * 0.9],\n      height: 300,\n      width: Infinity,\n      resizeHandles: ['s'],\n    };\n  }\n\n  return <ResizableBox {...resizableProps}>{children}</ResizableBox>;\n};\n\nexport default Resizable;\n"]},"metadata":{},"sourceType":"module"}