{"ast":null,"code":"import _slicedToArray from\"/Users/ted/Desktop/jbook/packages/local-client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect,useRef}from'react';import MDEditor from'@uiw/react-md-editor';import'./text-editor.css';import{useActions}from'../hooks/use-actions';import{jsx as _jsx}from\"react/jsx-runtime\";var TextEditor=function TextEditor(_ref){var cell=_ref.cell;var ref=useRef(null);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),editing=_useState2[0],setEditing=_useState2[1];var _useActions=useActions(),updateCell=_useActions.updateCell;useEffect(function(){var listener=function listener(event){if(ref.current&&event.target&&ref.current.contains(event.target)){return;}setEditing(false);};document.addEventListener('click',listener,{capture:true});return function(){document.removeEventListener('click',listener,{capture:true});};},[]);if(editing){return/*#__PURE__*/_jsx(\"div\",{className:\"text-editor card\",ref:ref,children:/*#__PURE__*/_jsx(\"div\",{className:\"card-content\",children:/*#__PURE__*/_jsx(MDEditor,{value:cell.content,onChange:function onChange(v){return updateCell(cell.id,v||'');}})})});}return/*#__PURE__*/_jsx(\"div\",{className:\"text-editor\",onClick:function onClick(){return setEditing(true);},children:/*#__PURE__*/_jsx(MDEditor.Markdown,{source:cell.content||'Click to edit'})});};export default TextEditor;","map":{"version":3,"sources":["/Users/ted/Desktop/jbook/packages/local-client/src/components/text-editor.tsx"],"names":["useState","useEffect","useRef","MDEditor","useActions","TextEditor","cell","ref","editing","setEditing","updateCell","listener","event","current","target","contains","document","addEventListener","capture","removeEventListener","content","v","id"],"mappings":"oIAAA,OAASA,QAAT,CAAmBC,SAAnB,CAA8BC,MAA9B,KAA4C,OAA5C,CACA,MAAOC,CAAAA,QAAP,KAAqB,sBAArB,CACA,MAAO,mBAAP,CAEA,OAASC,UAAT,KAA2B,sBAA3B,C,2CAMA,GAAMC,CAAAA,UAAqC,CAAG,QAAxCA,CAAAA,UAAwC,MAAc,IAAXC,CAAAA,IAAW,MAAXA,IAAW,CACxD,GAAMC,CAAAA,GAAG,CAAGL,MAAM,CAAwB,IAAxB,CAAlB,CACA,cAA8BF,QAAQ,CAAC,KAAD,CAAtC,wCAAOQ,OAAP,eAAgBC,UAAhB,eACA,gBAAuBL,UAAU,EAAjC,CAAQM,UAAR,aAAQA,UAAR,CAEAT,SAAS,CAAC,UAAM,CACZ,GAAMU,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAuB,CACpC,GAAGL,GAAG,CAACM,OAAJ,EAAeD,KAAK,CAACE,MAArB,EAA+BP,GAAG,CAACM,OAAJ,CAAYE,QAAZ,CAAqBH,KAAK,CAACE,MAA3B,CAAlC,CAA8E,CAC1E,OACH,CAEDL,UAAU,CAAC,KAAD,CAAV,CACH,CAND,CAOAO,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,CAAmCN,QAAnC,CAA6C,CAAEO,OAAO,CAAE,IAAX,CAA7C,EAEA,MAAO,WAAM,CACTF,QAAQ,CAACG,mBAAT,CAA6B,OAA7B,CAAsCR,QAAtC,CAAgD,CAAEO,OAAO,CAAE,IAAX,CAAhD,EACH,CAFD,CAGH,CAbQ,CAaN,EAbM,CAAT,CAeA,GAAGV,OAAH,CAAY,CACR,mBACI,YAAK,SAAS,CAAC,kBAAf,CAAkC,GAAG,CAAED,GAAvC,uBACI,YAAK,SAAS,CAAC,cAAf,uBACI,KAAC,QAAD,EAAU,KAAK,CAAED,IAAI,CAACc,OAAtB,CAA+B,QAAQ,CAAE,kBAACC,CAAD,QAAOX,CAAAA,UAAU,CAACJ,IAAI,CAACgB,EAAN,CAAUD,CAAC,EAAI,EAAf,CAAjB,EAAzC,EADJ,EADJ,EADJ,CAOH,CAED,mBACI,YAAK,SAAS,CAAC,aAAf,CAA6B,OAAO,CAAE,yBAAMZ,CAAAA,UAAU,CAAC,IAAD,CAAhB,EAAtC,uBACI,KAAC,QAAD,CAAU,QAAV,EAAmB,MAAM,CAAEH,IAAI,CAACc,OAAL,EAAgB,eAA3C,EADJ,EADJ,CAKH,CAnCD,CAqCA,cAAef,CAAAA,UAAf","sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport MDEditor from '@uiw/react-md-editor';\nimport './text-editor.css';\nimport { Cell } from '../state';\nimport { useActions } from '../hooks/use-actions';\n\ninterface TextEditorProps {\n    cell: Cell\n}\n\nconst TextEditor: React.FC<TextEditorProps> = ({ cell }) => {\n    const ref = useRef<HTMLDivElement | null>(null);\n    const [editing, setEditing] = useState(false);\n    const { updateCell } = useActions();\n\n    useEffect(() => {\n        const listener = (event: MouseEvent) => {\n            if(ref.current && event.target && ref.current.contains(event.target as Node)) {\n                return;\n            }\n\n            setEditing(false);\n        }\n        document.addEventListener('click', listener, { capture: true });\n\n        return () => {\n            document.removeEventListener('click', listener, { capture: true })\n        }\n    }, []);\n\n    if(editing) {\n        return (\n            <div className=\"text-editor card\" ref={ref}>\n                <div className=\"card-content\">\n                    <MDEditor value={cell.content} onChange={(v) => updateCell(cell.id, v || '')}/>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"text-editor\" onClick={() => setEditing(true)}>\n            <MDEditor.Markdown source={cell.content || 'Click to edit'} />\n        </div>\n    )\n}\n\nexport default TextEditor;\n"]},"metadata":{},"sourceType":"module"}