{"ast":null,"code":"'use strict';\n\nvar _createForOfIteratorHelper = require(\"/Users/ted/Desktop/jbook/packages/local-client/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _get = require(\"/Users/ted/Desktop/jbook/packages/local-client/node_modules/@babel/runtime/helpers/get.js\").default;\n\nvar _getPrototypeOf = require(\"/Users/ted/Desktop/jbook/packages/local-client/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\n\nvar _inherits = require(\"/Users/ted/Desktop/jbook/packages/local-client/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/Users/ted/Desktop/jbook/packages/local-client/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar _toConsumableArray = require(\"/Users/ted/Desktop/jbook/packages/local-client/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\n\nvar _slicedToArray = require(\"/Users/ted/Desktop/jbook/packages/local-client/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\n\nvar _createClass = require(\"/Users/ted/Desktop/jbook/packages/local-client/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _classCallCheck = require(\"/Users/ted/Desktop/jbook/packages/local-client/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nvar lineBreakG = new RegExp(lineBreak.source, \"g\");\n\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nvar skipWhiteSpaceInLine = new RegExp(\"(?:[^\\\\S\\\\n\\\\r\\\\u2028\\\\u2029]|\\\\/\\\\/.*|\\\\/\\\\*.*?\\\\*\\\\/)*\", \"y\");\nvar skipWhiteSpaceToLineBreak = new RegExp(\"(?=(\" + skipWhiteSpaceInLine.source + \"))\\\\1\" + /(?=[\\n\\r\\u2028\\u2029]|\\/\\*(?!.*?\\*\\/)|$)/.source, \"y\");\n\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nvar Position = /*#__PURE__*/_createClass(function Position(line, col) {\n  _classCallCheck(this, Position);\n\n  this.line = void 0;\n  this.column = void 0;\n  this.line = line;\n  this.column = col;\n});\n\nvar SourceLocation = /*#__PURE__*/_createClass(function SourceLocation(start, end) {\n  _classCallCheck(this, SourceLocation);\n\n  this.start = void 0;\n  this.end = void 0;\n  this.filename = void 0;\n  this.identifierName = void 0;\n  this.start = start;\n  this.end = end;\n});\n\nfunction getLineInfo(input, offset) {\n  var line = 1;\n  var lineStart = 0;\n  var match;\n  lineBreakG.lastIndex = 0;\n\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n\nfunction createPositionWithColumnOffset(position, columnOffset) {\n  var line = position.line,\n      column = position.column;\n  return new Position(line, column + columnOffset);\n}\n\nvar BaseParser = /*#__PURE__*/function () {\n  function BaseParser() {\n    _classCallCheck(this, BaseParser);\n\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n\n  _createClass(BaseParser, [{\n    key: \"hasPlugin\",\n    value: function hasPlugin(pluginConfig) {\n      if (typeof pluginConfig === \"string\") {\n        return this.plugins.has(pluginConfig);\n      } else {\n        var _pluginConfig = _slicedToArray(pluginConfig, 2),\n            pluginName = _pluginConfig[0],\n            pluginOptions = _pluginConfig[1];\n\n        if (!this.hasPlugin(pluginName)) {\n          return false;\n        }\n\n        var actualOptions = this.plugins.get(pluginName);\n\n        for (var _i = 0, _Object$keys = Object.keys(pluginOptions); _i < _Object$keys.length; _i++) {\n          var key = _Object$keys[_i];\n\n          if ((actualOptions == null ? void 0 : actualOptions[key]) !== pluginOptions[key]) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n    }\n  }, {\n    key: \"getPluginOption\",\n    value: function getPluginOption(plugin, name) {\n      var _this$plugins$get;\n\n      return (_this$plugins$get = this.plugins.get(plugin)) == null ? void 0 : _this$plugins$get[name];\n    }\n  }]);\n\n  return BaseParser;\n}();\n\nfunction setTrailingComments(node, comments) {\n  if (node.trailingComments === undefined) {\n    node.trailingComments = comments;\n  } else {\n    var _node$trailingComment;\n\n    (_node$trailingComment = node.trailingComments).unshift.apply(_node$trailingComment, _toConsumableArray(comments));\n  }\n}\n\nfunction setLeadingComments(node, comments) {\n  if (node.leadingComments === undefined) {\n    node.leadingComments = comments;\n  } else {\n    var _node$leadingComments;\n\n    (_node$leadingComments = node.leadingComments).unshift.apply(_node$leadingComments, _toConsumableArray(comments));\n  }\n}\n\nfunction setInnerComments(node, comments) {\n  if (node.innerComments === undefined) {\n    node.innerComments = comments;\n  } else {\n    var _node$innerComments;\n\n    (_node$innerComments = node.innerComments).unshift.apply(_node$innerComments, _toConsumableArray(comments));\n  }\n}\n\nfunction adjustInnerComments(node, elements, commentWS) {\n  var lastElement = null;\n  var i = elements.length;\n\n  while (lastElement === null && i > 0) {\n    lastElement = elements[--i];\n  }\n\n  if (lastElement === null || lastElement.start > commentWS.start) {\n    setInnerComments(node, commentWS.comments);\n  } else {\n    setTrailingComments(lastElement, commentWS.comments);\n  }\n}\n\nvar CommentsParser = /*#__PURE__*/function (_BaseParser) {\n  _inherits(CommentsParser, _BaseParser);\n\n  var _super = _createSuper(CommentsParser);\n\n  function CommentsParser() {\n    _classCallCheck(this, CommentsParser);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CommentsParser, [{\n    key: \"addComment\",\n    value: function addComment(comment) {\n      if (this.filename) comment.loc.filename = this.filename;\n      this.state.comments.push(comment);\n    }\n  }, {\n    key: \"processComment\",\n    value: function processComment(node) {\n      var commentStack = this.state.commentStack;\n      var commentStackLength = commentStack.length;\n      if (commentStackLength === 0) return;\n      var i = commentStackLength - 1;\n      var lastCommentWS = commentStack[i];\n\n      if (lastCommentWS.start === node.end) {\n        lastCommentWS.leadingNode = node;\n        i--;\n      }\n\n      var nodeStart = node.start;\n\n      for (; i >= 0; i--) {\n        var commentWS = commentStack[i];\n        var commentEnd = commentWS.end;\n\n        if (commentEnd > nodeStart) {\n          commentWS.containingNode = node;\n          this.finalizeComment(commentWS);\n          commentStack.splice(i, 1);\n        } else {\n          if (commentEnd === nodeStart) {\n            commentWS.trailingNode = node;\n          }\n\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"finalizeComment\",\n    value: function finalizeComment(commentWS) {\n      var comments = commentWS.comments;\n\n      if (commentWS.leadingNode !== null || commentWS.trailingNode !== null) {\n        if (commentWS.leadingNode !== null) {\n          setTrailingComments(commentWS.leadingNode, comments);\n        }\n\n        if (commentWS.trailingNode !== null) {\n          setLeadingComments(commentWS.trailingNode, comments);\n        }\n      } else {\n        var node = commentWS.containingNode,\n            commentStart = commentWS.start;\n\n        if (this.input.charCodeAt(commentStart - 1) === 44) {\n          switch (node.type) {\n            case \"ObjectExpression\":\n            case \"ObjectPattern\":\n            case \"RecordExpression\":\n              adjustInnerComments(node, node.properties, commentWS);\n              break;\n\n            case \"CallExpression\":\n            case \"OptionalCallExpression\":\n              adjustInnerComments(node, node.arguments, commentWS);\n              break;\n\n            case \"FunctionDeclaration\":\n            case \"FunctionExpression\":\n            case \"ArrowFunctionExpression\":\n            case \"ObjectMethod\":\n            case \"ClassMethod\":\n            case \"ClassPrivateMethod\":\n              adjustInnerComments(node, node.params, commentWS);\n              break;\n\n            case \"ArrayExpression\":\n            case \"ArrayPattern\":\n            case \"TupleExpression\":\n              adjustInnerComments(node, node.elements, commentWS);\n              break;\n\n            case \"ExportNamedDeclaration\":\n            case \"ImportDeclaration\":\n              adjustInnerComments(node, node.specifiers, commentWS);\n              break;\n\n            default:\n              {\n                setInnerComments(node, comments);\n              }\n          }\n        } else {\n          setInnerComments(node, comments);\n        }\n      }\n    }\n  }, {\n    key: \"finalizeRemainingComments\",\n    value: function finalizeRemainingComments() {\n      var commentStack = this.state.commentStack;\n\n      for (var i = commentStack.length - 1; i >= 0; i--) {\n        this.finalizeComment(commentStack[i]);\n      }\n\n      this.state.commentStack = [];\n    }\n  }, {\n    key: \"resetPreviousNodeTrailingComments\",\n    value: function resetPreviousNodeTrailingComments(node) {\n      var commentStack = this.state.commentStack;\n      var length = commentStack.length;\n      if (length === 0) return;\n      var commentWS = commentStack[length - 1];\n\n      if (commentWS.leadingNode === node) {\n        commentWS.leadingNode = null;\n      }\n    }\n  }, {\n    key: \"takeSurroundingComments\",\n    value: function takeSurroundingComments(node, start, end) {\n      var commentStack = this.state.commentStack;\n      var commentStackLength = commentStack.length;\n      if (commentStackLength === 0) return;\n      var i = commentStackLength - 1;\n\n      for (; i >= 0; i--) {\n        var commentWS = commentStack[i];\n        var commentEnd = commentWS.end;\n        var commentStart = commentWS.start;\n\n        if (commentStart === end) {\n          commentWS.leadingNode = node;\n        } else if (commentEnd === start) {\n          commentWS.trailingNode = node;\n        } else if (commentEnd < start) {\n          break;\n        }\n      }\n    }\n  }]);\n\n  return CommentsParser;\n}(BaseParser);\n\nvar ErrorCodes = Object.freeze({\n  SyntaxError: \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n});\nvar ErrorMessages = makeErrorTemplates({\n  AccessorIsGenerator: \"A %0ter cannot be a generator.\",\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter: \"'await' is not allowed in async function parameters.\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n  BadGetterArity: \"A 'get' accesor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accesor must have exactly one formal parameter.\",\n  BadSetterRestParameter: \"A 'set' accesor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: \"'%0' require an initialization value.\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'.\",\n  ForInOfLoopInitializer: \"'%0' loop variable declaration may not have an initializer.\",\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block.\",\n  IllegalBreakContinue: \"Unsyntactic %0.\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments.\",\n  ImportCallArity: \"`import()` requires exactly %0.\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidCoverInitializedName: \"Invalid shorthand property initializer.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: \"Expected number in radix %0.\",\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0.\",\n  InvalidIdentifier: \"Invalid identifier %0.\",\n  InvalidLhs: \"Invalid left-hand side in %0.\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0.\",\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'.\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined.\",\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: \"Label '%0' is already declared.\",\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes.',\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'.\",\n  ModuleExportUndefined: \"Export '%0' is not defined.\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar: \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor: \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PipeBodyIsTighter: \"Unexpected %0 after pipeline body; any %0 expression acting as Hack-style pipe body must be parenthesized due to its loose operator precedence.\",\n  PipeTopicRequiresHackPipes: 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PipeTopicUnbound: \"Topic reference is unbound; it must be inside a pipe body.\",\n  PipeTopicUnconfiguredToken: 'Invalid topic token %0. In order to use %0 as a topic reference, the pipelineOperator plugin must be configured with { \"proposal\": \"hack\", \"topicToken\": \"%0\" }.',\n  PipeTopicUnused: \"Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.\",\n  PipeUnparenthesizedBody: \"Hack-style pipe body cannot be an unparenthesized %0 expression; please wrap it in parentheses.\",\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression.\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression.\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference.\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding.\",\n  PrimaryTopicRequiresSmartPipeline: 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`).\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0.\",\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  StrictDelete: \"Deleting local variable in strict mode.\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode.\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode.\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block.\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n  StrictWith: \"'with' in strict mode.\",\n  SuperNotAllowed: \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'.\",\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget: \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Unexpected private name.\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'.\",\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: \"Unexpected token '%0'.\",\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1.\",\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper: \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  VarRedeclaration: \"Identifier '%0' has already been declared.\",\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0.\"\n}, ErrorCodes.SyntaxError);\nvar SourceTypeModuleErrorMessages = makeErrorTemplates({\n  ImportMetaOutsideModule: \"import.meta may appear only with 'sourceType: \\\"module\\\"'\",\n  ImportOutsideModule: \"'import' and 'export' may appear only with 'sourceType: \\\"module\\\"'\"\n}, ErrorCodes.SourceTypeModuleError);\n\nfunction keepReasonCodeCompat(reasonCode, syntaxPlugin) {\n  {\n    if (syntaxPlugin === \"flow\" && reasonCode === \"PatternIsOptional\") {\n      return \"OptionalBindingPattern\";\n    }\n  }\n  return reasonCode;\n}\n\nfunction makeErrorTemplates(messages, code, syntaxPlugin) {\n  var templates = {};\n  Object.keys(messages).forEach(function (reasonCode) {\n    templates[reasonCode] = Object.freeze({\n      code: code,\n      reasonCode: keepReasonCodeCompat(reasonCode, syntaxPlugin),\n      template: messages[reasonCode]\n    });\n  });\n  return Object.freeze(templates);\n}\n\nvar ParserError = /*#__PURE__*/function (_CommentsParser) {\n  _inherits(ParserError, _CommentsParser);\n\n  var _super2 = _createSuper(ParserError);\n\n  function ParserError() {\n    _classCallCheck(this, ParserError);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(ParserError, [{\n    key: \"getLocationForPosition\",\n    value: function getLocationForPosition(pos) {\n      var loc;\n      if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\n      return loc;\n    }\n  }, {\n    key: \"raise\",\n    value: function raise(pos, _ref) {\n      var code = _ref.code,\n          reasonCode = _ref.reasonCode,\n          template = _ref.template;\n\n      for (var _len = arguments.length, params = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        params[_key - 2] = arguments[_key];\n      }\n\n      return this.raiseWithData.apply(this, [pos, {\n        code: code,\n        reasonCode: reasonCode\n      }, template].concat(params));\n    }\n  }, {\n    key: \"raiseOverwrite\",\n    value: function raiseOverwrite(pos, _ref2) {\n      var code = _ref2.code,\n          template = _ref2.template;\n\n      for (var _len2 = arguments.length, params = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        params[_key2 - 2] = arguments[_key2];\n      }\n\n      var loc = this.getLocationForPosition(pos);\n      var message = template.replace(/%(\\d+)/g, function (_, i) {\n        return params[i];\n      }) + \" (\".concat(loc.line, \":\").concat(loc.column, \")\");\n\n      if (this.options.errorRecovery) {\n        var errors = this.state.errors;\n\n        for (var i = errors.length - 1; i >= 0; i--) {\n          var error = errors[i];\n\n          if (error.pos === pos) {\n            return Object.assign(error, {\n              message: message\n            });\n          } else if (error.pos < pos) {\n            break;\n          }\n        }\n      }\n\n      return this._raise({\n        code: code,\n        loc: loc,\n        pos: pos\n      }, message);\n    }\n  }, {\n    key: \"raiseWithData\",\n    value: function raiseWithData(pos, data, errorTemplate) {\n      for (var _len3 = arguments.length, params = new Array(_len3 > 3 ? _len3 - 3 : 0), _key3 = 3; _key3 < _len3; _key3++) {\n        params[_key3 - 3] = arguments[_key3];\n      }\n\n      var loc = this.getLocationForPosition(pos);\n      var message = errorTemplate.replace(/%(\\d+)/g, function (_, i) {\n        return params[i];\n      }) + \" (\".concat(loc.line, \":\").concat(loc.column, \")\");\n      return this._raise(Object.assign({\n        loc: loc,\n        pos: pos\n      }, data), message);\n    }\n  }, {\n    key: \"_raise\",\n    value: function _raise(errorContext, message) {\n      var err = new SyntaxError(message);\n      Object.assign(err, errorContext);\n\n      if (this.options.errorRecovery) {\n        if (!this.isLookahead) this.state.errors.push(err);\n        return err;\n      } else {\n        throw err;\n      }\n    }\n  }]);\n\n  return ParserError;\n}(CommentsParser);\n\nvar estree = function estree(superClass) {\n  return /*#__PURE__*/function (_superClass) {\n    _inherits(_class, _superClass);\n\n    var _super3 = _createSuper(_class);\n\n    function _class() {\n      _classCallCheck(this, _class);\n\n      return _super3.apply(this, arguments);\n    }\n\n    _createClass(_class, [{\n      key: \"parseRegExpLiteral\",\n      value: function parseRegExpLiteral(_ref3) {\n        var pattern = _ref3.pattern,\n            flags = _ref3.flags;\n        var regex = null;\n\n        try {\n          regex = new RegExp(pattern, flags);\n        } catch (e) {}\n\n        var node = this.estreeParseLiteral(regex);\n        node.regex = {\n          pattern: pattern,\n          flags: flags\n        };\n        return node;\n      }\n    }, {\n      key: \"parseBigIntLiteral\",\n      value: function parseBigIntLiteral(value) {\n        var bigInt;\n\n        try {\n          bigInt = BigInt(value);\n        } catch (_unused) {\n          bigInt = null;\n        }\n\n        var node = this.estreeParseLiteral(bigInt);\n        node.bigint = String(node.value || value);\n        return node;\n      }\n    }, {\n      key: \"parseDecimalLiteral\",\n      value: function parseDecimalLiteral(value) {\n        var decimal = null;\n        var node = this.estreeParseLiteral(decimal);\n        node.decimal = String(node.value || value);\n        return node;\n      }\n    }, {\n      key: \"estreeParseLiteral\",\n      value: function estreeParseLiteral(value) {\n        return this.parseLiteral(value, \"Literal\");\n      }\n    }, {\n      key: \"parseStringLiteral\",\n      value: function parseStringLiteral(value) {\n        return this.estreeParseLiteral(value);\n      }\n    }, {\n      key: \"parseNumericLiteral\",\n      value: function parseNumericLiteral(value) {\n        return this.estreeParseLiteral(value);\n      }\n    }, {\n      key: \"parseNullLiteral\",\n      value: function parseNullLiteral() {\n        return this.estreeParseLiteral(null);\n      }\n    }, {\n      key: \"parseBooleanLiteral\",\n      value: function parseBooleanLiteral(value) {\n        return this.estreeParseLiteral(value);\n      }\n    }, {\n      key: \"directiveToStmt\",\n      value: function directiveToStmt(directive) {\n        var directiveLiteral = directive.value;\n        var stmt = this.startNodeAt(directive.start, directive.loc.start);\n        var expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n        expression.value = directiveLiteral.extra.expressionValue;\n        expression.raw = directiveLiteral.extra.raw;\n        stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n        stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n        return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n      }\n    }, {\n      key: \"initFunction\",\n      value: function initFunction(node, isAsync) {\n        _get(_getPrototypeOf(_class.prototype), \"initFunction\", this).call(this, node, isAsync);\n\n        node.expression = false;\n      }\n    }, {\n      key: \"checkDeclaration\",\n      value: function checkDeclaration(node) {\n        if (node != null && this.isObjectProperty(node)) {\n          this.checkDeclaration(node.value);\n        } else {\n          _get(_getPrototypeOf(_class.prototype), \"checkDeclaration\", this).call(this, node);\n        }\n      }\n    }, {\n      key: \"getObjectOrClassMethodParams\",\n      value: function getObjectOrClassMethodParams(method) {\n        return method.value.params;\n      }\n    }, {\n      key: \"isValidDirective\",\n      value: function isValidDirective(stmt) {\n        var _stmt$expression$extr;\n\n        return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) != null && _stmt$expression$extr.parenthesized);\n      }\n    }, {\n      key: \"parseBlockBody\",\n      value: function parseBlockBody(node) {\n        var _get2,\n            _this2 = this;\n\n        for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n          args[_key4 - 1] = arguments[_key4];\n        }\n\n        (_get2 = _get(_getPrototypeOf(_class.prototype), \"parseBlockBody\", this)).call.apply(_get2, [this, node].concat(args));\n\n        var directiveStatements = node.directives.map(function (d) {\n          return _this2.directiveToStmt(d);\n        });\n        node.body = directiveStatements.concat(node.body);\n        delete node.directives;\n      }\n    }, {\n      key: \"pushClassMethod\",\n      value: function pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n        this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n        if (method.typeParameters) {\n          method.value.typeParameters = method.typeParameters;\n          delete method.typeParameters;\n        }\n\n        classBody.body.push(method);\n      }\n    }, {\n      key: \"parsePrivateName\",\n      value: function parsePrivateName() {\n        var node = _get(_getPrototypeOf(_class.prototype), \"parsePrivateName\", this).call(this);\n\n        {\n          if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n            return node;\n          }\n        }\n        return this.convertPrivateNameToPrivateIdentifier(node);\n      }\n    }, {\n      key: \"convertPrivateNameToPrivateIdentifier\",\n      value: function convertPrivateNameToPrivateIdentifier(node) {\n        var name = _get(_getPrototypeOf(_class.prototype), \"getPrivateNameSV\", this).call(this, node);\n\n        node = node;\n        delete node.id;\n        node.name = name;\n        node.type = \"PrivateIdentifier\";\n        return node;\n      }\n    }, {\n      key: \"isPrivateName\",\n      value: function isPrivateName(node) {\n        {\n          if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n            return _get(_getPrototypeOf(_class.prototype), \"isPrivateName\", this).call(this, node);\n          }\n        }\n        return node.type === \"PrivateIdentifier\";\n      }\n    }, {\n      key: \"getPrivateNameSV\",\n      value: function getPrivateNameSV(node) {\n        {\n          if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n            return _get(_getPrototypeOf(_class.prototype), \"getPrivateNameSV\", this).call(this, node);\n          }\n        }\n        return node.name;\n      }\n    }, {\n      key: \"parseLiteral\",\n      value: function parseLiteral(value, type) {\n        var node = _get(_getPrototypeOf(_class.prototype), \"parseLiteral\", this).call(this, value, type);\n\n        node.raw = node.extra.raw;\n        delete node.extra;\n        return node;\n      }\n    }, {\n      key: \"parseFunctionBody\",\n      value: function parseFunctionBody(node, allowExpression) {\n        var isMethod = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n        _get(_getPrototypeOf(_class.prototype), \"parseFunctionBody\", this).call(this, node, allowExpression, isMethod);\n\n        node.expression = node.body.type !== \"BlockStatement\";\n      }\n    }, {\n      key: \"parseMethod\",\n      value: function parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type) {\n        var inClassScope = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n        var funcNode = this.startNode();\n        funcNode.kind = node.kind;\n        funcNode = _get(_getPrototypeOf(_class.prototype), \"parseMethod\", this).call(this, funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n        funcNode.type = \"FunctionExpression\";\n        delete funcNode.kind;\n        node.value = funcNode;\n\n        if (type === \"ClassPrivateMethod\") {\n          node.computed = false;\n        }\n\n        type = \"MethodDefinition\";\n        return this.finishNode(node, type);\n      }\n    }, {\n      key: \"parseClassProperty\",\n      value: function parseClassProperty() {\n        var _get3;\n\n        for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n          args[_key5] = arguments[_key5];\n        }\n\n        var propertyNode = (_get3 = _get(_getPrototypeOf(_class.prototype), \"parseClassProperty\", this)).call.apply(_get3, [this].concat(args));\n\n        {\n          if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n            return propertyNode;\n          }\n        }\n        propertyNode.type = \"PropertyDefinition\";\n        return propertyNode;\n      }\n    }, {\n      key: \"parseClassPrivateProperty\",\n      value: function parseClassPrivateProperty() {\n        var _get4;\n\n        for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n          args[_key6] = arguments[_key6];\n        }\n\n        var propertyNode = (_get4 = _get(_getPrototypeOf(_class.prototype), \"parseClassPrivateProperty\", this)).call.apply(_get4, [this].concat(args));\n\n        {\n          if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n            return propertyNode;\n          }\n        }\n        propertyNode.type = \"PropertyDefinition\";\n        propertyNode.computed = false;\n        return propertyNode;\n      }\n    }, {\n      key: \"parseObjectMethod\",\n      value: function parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n        var node = _get(_getPrototypeOf(_class.prototype), \"parseObjectMethod\", this).call(this, prop, isGenerator, isAsync, isPattern, isAccessor);\n\n        if (node) {\n          node.type = \"Property\";\n          if (node.kind === \"method\") node.kind = \"init\";\n          node.shorthand = false;\n        }\n\n        return node;\n      }\n    }, {\n      key: \"parseObjectProperty\",\n      value: function parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n        var node = _get(_getPrototypeOf(_class.prototype), \"parseObjectProperty\", this).call(this, prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n        if (node) {\n          node.kind = \"init\";\n          node.type = \"Property\";\n        }\n\n        return node;\n      }\n    }, {\n      key: \"isAssignable\",\n      value: function isAssignable(node, isBinding) {\n        if (node != null && this.isObjectProperty(node)) {\n          return this.isAssignable(node.value, isBinding);\n        }\n\n        return _get(_getPrototypeOf(_class.prototype), \"isAssignable\", this).call(this, node, isBinding);\n      }\n    }, {\n      key: \"toAssignable\",\n      value: function toAssignable(node) {\n        var isLHS = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n        if (node != null && this.isObjectProperty(node)) {\n          this.toAssignable(node.value, isLHS);\n          return node;\n        }\n\n        return _get(_getPrototypeOf(_class.prototype), \"toAssignable\", this).call(this, node, isLHS);\n      }\n    }, {\n      key: \"toAssignableObjectExpressionProp\",\n      value: function toAssignableObjectExpressionProp(prop) {\n        if (prop.kind === \"get\" || prop.kind === \"set\") {\n          this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\n        } else if (prop.method) {\n          this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\n        } else {\n          var _get5;\n\n          for (var _len7 = arguments.length, args = new Array(_len7 > 1 ? _len7 - 1 : 0), _key7 = 1; _key7 < _len7; _key7++) {\n            args[_key7 - 1] = arguments[_key7];\n          }\n\n          (_get5 = _get(_getPrototypeOf(_class.prototype), \"toAssignableObjectExpressionProp\", this)).call.apply(_get5, [this, prop].concat(args));\n        }\n      }\n    }, {\n      key: \"finishCallExpression\",\n      value: function finishCallExpression(node, optional) {\n        _get(_getPrototypeOf(_class.prototype), \"finishCallExpression\", this).call(this, node, optional);\n\n        if (node.callee.type === \"Import\") {\n          node.type = \"ImportExpression\";\n          node.source = node.arguments[0];\n\n          if (this.hasPlugin(\"importAssertions\")) {\n            var _node$arguments$;\n\n            node.attributes = (_node$arguments$ = node.arguments[1]) != null ? _node$arguments$ : null;\n          }\n\n          delete node.arguments;\n          delete node.callee;\n        }\n\n        return node;\n      }\n    }, {\n      key: \"toReferencedArguments\",\n      value: function toReferencedArguments(node) {\n        if (node.type === \"ImportExpression\") {\n          return;\n        }\n\n        _get(_getPrototypeOf(_class.prototype), \"toReferencedArguments\", this).call(this, node);\n      }\n    }, {\n      key: \"parseExport\",\n      value: function parseExport(node) {\n        _get(_getPrototypeOf(_class.prototype), \"parseExport\", this).call(this, node);\n\n        switch (node.type) {\n          case \"ExportAllDeclaration\":\n            node.exported = null;\n            break;\n\n          case \"ExportNamedDeclaration\":\n            if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n              node.type = \"ExportAllDeclaration\";\n              node.exported = node.specifiers[0].exported;\n              delete node.specifiers;\n            }\n\n            break;\n        }\n\n        return node;\n      }\n    }, {\n      key: \"parseSubscript\",\n      value: function parseSubscript(base, startPos, startLoc, noCalls, state) {\n        var node = _get(_getPrototypeOf(_class.prototype), \"parseSubscript\", this).call(this, base, startPos, startLoc, noCalls, state);\n\n        if (state.optionalChainMember) {\n          if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n            node.type = node.type.substring(8);\n          }\n\n          if (state.stop) {\n            var chain = this.startNodeAtNode(node);\n            chain.expression = node;\n            return this.finishNode(chain, \"ChainExpression\");\n          }\n        } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n          node.optional = false;\n        }\n\n        return node;\n      }\n    }, {\n      key: \"hasPropertyAsPrivateName\",\n      value: function hasPropertyAsPrivateName(node) {\n        if (node.type === \"ChainExpression\") {\n          node = node.expression;\n        }\n\n        return _get(_getPrototypeOf(_class.prototype), \"hasPropertyAsPrivateName\", this).call(this, node);\n      }\n    }, {\n      key: \"isOptionalChain\",\n      value: function isOptionalChain(node) {\n        return node.type === \"ChainExpression\";\n      }\n    }, {\n      key: \"isObjectProperty\",\n      value: function isObjectProperty(node) {\n        return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n      }\n    }, {\n      key: \"isObjectMethod\",\n      value: function isObjectMethod(node) {\n        return node.method || node.kind === \"get\" || node.kind === \"set\";\n      }\n    }]);\n\n    return _class;\n  }(superClass);\n};\n\nvar TokContext = /*#__PURE__*/_createClass(function TokContext(token, preserveSpace) {\n  _classCallCheck(this, TokContext);\n\n  this.token = void 0;\n  this.preserveSpace = void 0;\n  this.token = token;\n  this.preserveSpace = !!preserveSpace;\n});\n\nvar types = {\n  brace: new TokContext(\"{\"),\n  j_oTag: new TokContext(\"<tag\"),\n  j_cTag: new TokContext(\"</tag\"),\n  j_expr: new TokContext(\"<tag>...</tag>\", true)\n};\n{\n  types.template = new TokContext(\"`\", true);\n}\nvar beforeExpr = true;\nvar startsExpr = true;\nvar isLoop = true;\nvar isAssign = true;\nvar prefix = true;\nvar postfix = true;\n\nvar ExportedTokenType = /*#__PURE__*/_createClass(function ExportedTokenType(label) {\n  var conf = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  _classCallCheck(this, ExportedTokenType);\n\n  this.label = void 0;\n  this.keyword = void 0;\n  this.beforeExpr = void 0;\n  this.startsExpr = void 0;\n  this.rightAssociative = void 0;\n  this.isLoop = void 0;\n  this.isAssign = void 0;\n  this.prefix = void 0;\n  this.postfix = void 0;\n  this.binop = void 0;\n  this.label = label;\n  this.keyword = conf.keyword;\n  this.beforeExpr = !!conf.beforeExpr;\n  this.startsExpr = !!conf.startsExpr;\n  this.rightAssociative = !!conf.rightAssociative;\n  this.isLoop = !!conf.isLoop;\n  this.isAssign = !!conf.isAssign;\n  this.prefix = !!conf.prefix;\n  this.postfix = !!conf.postfix;\n  this.binop = conf.binop != null ? conf.binop : null;\n  {\n    this.updateContext = null;\n  }\n});\n\nvar keywords$1 = new Map();\n\nfunction createKeyword(name) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  options.keyword = name;\n  var token = createToken(name, options);\n  keywords$1.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return createToken(name, {\n    beforeExpr: beforeExpr,\n    binop: binop\n  });\n}\n\nvar tokenTypeCounter = -1;\nvar tokenTypes = [];\nvar tokenLabels = [];\nvar tokenBinops = [];\nvar tokenBeforeExprs = [];\nvar tokenStartsExprs = [];\nvar tokenPrefixes = [];\n\nfunction createToken(name) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var _options$binop, _options$beforeExpr, _options$startsExpr, _options$prefix;\n\n  ++tokenTypeCounter;\n  tokenLabels.push(name);\n  tokenBinops.push((_options$binop = options.binop) != null ? _options$binop : -1);\n  tokenBeforeExprs.push((_options$beforeExpr = options.beforeExpr) != null ? _options$beforeExpr : false);\n  tokenStartsExprs.push((_options$startsExpr = options.startsExpr) != null ? _options$startsExpr : false);\n  tokenPrefixes.push((_options$prefix = options.prefix) != null ? _options$prefix : false);\n  tokenTypes.push(new ExportedTokenType(name, options));\n  return tokenTypeCounter;\n}\n\nfunction createKeywordLike(name) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var _options$binop2, _options$beforeExpr2, _options$startsExpr2, _options$prefix2;\n\n  ++tokenTypeCounter;\n  keywords$1.set(name, tokenTypeCounter);\n  tokenLabels.push(name);\n  tokenBinops.push((_options$binop2 = options.binop) != null ? _options$binop2 : -1);\n  tokenBeforeExprs.push((_options$beforeExpr2 = options.beforeExpr) != null ? _options$beforeExpr2 : false);\n  tokenStartsExprs.push((_options$startsExpr2 = options.startsExpr) != null ? _options$startsExpr2 : false);\n  tokenPrefixes.push((_options$prefix2 = options.prefix) != null ? _options$prefix2 : false);\n  tokenTypes.push(new ExportedTokenType(\"name\", options));\n  return tokenTypeCounter;\n}\n\nvar tt = {\n  bracketL: createToken(\"[\", {\n    beforeExpr: beforeExpr,\n    startsExpr: startsExpr\n  }),\n  bracketHashL: createToken(\"#[\", {\n    beforeExpr: beforeExpr,\n    startsExpr: startsExpr\n  }),\n  bracketBarL: createToken(\"[|\", {\n    beforeExpr: beforeExpr,\n    startsExpr: startsExpr\n  }),\n  bracketR: createToken(\"]\"),\n  bracketBarR: createToken(\"|]\"),\n  braceL: createToken(\"{\", {\n    beforeExpr: beforeExpr,\n    startsExpr: startsExpr\n  }),\n  braceBarL: createToken(\"{|\", {\n    beforeExpr: beforeExpr,\n    startsExpr: startsExpr\n  }),\n  braceHashL: createToken(\"#{\", {\n    beforeExpr: beforeExpr,\n    startsExpr: startsExpr\n  }),\n  braceR: createToken(\"}\", {\n    beforeExpr: beforeExpr\n  }),\n  braceBarR: createToken(\"|}\"),\n  parenL: createToken(\"(\", {\n    beforeExpr: beforeExpr,\n    startsExpr: startsExpr\n  }),\n  parenR: createToken(\")\"),\n  comma: createToken(\",\", {\n    beforeExpr: beforeExpr\n  }),\n  semi: createToken(\";\", {\n    beforeExpr: beforeExpr\n  }),\n  colon: createToken(\":\", {\n    beforeExpr: beforeExpr\n  }),\n  doubleColon: createToken(\"::\", {\n    beforeExpr: beforeExpr\n  }),\n  dot: createToken(\".\"),\n  question: createToken(\"?\", {\n    beforeExpr: beforeExpr\n  }),\n  questionDot: createToken(\"?.\"),\n  arrow: createToken(\"=>\", {\n    beforeExpr: beforeExpr\n  }),\n  template: createToken(\"template\"),\n  ellipsis: createToken(\"...\", {\n    beforeExpr: beforeExpr\n  }),\n  backQuote: createToken(\"`\", {\n    startsExpr: startsExpr\n  }),\n  dollarBraceL: createToken(\"${\", {\n    beforeExpr: beforeExpr,\n    startsExpr: startsExpr\n  }),\n  templateTail: createToken(\"...`\", {\n    startsExpr: startsExpr\n  }),\n  templateNonTail: createToken(\"...${\", {\n    beforeExpr: beforeExpr,\n    startsExpr: startsExpr\n  }),\n  at: createToken(\"@\"),\n  hash: createToken(\"#\", {\n    startsExpr: startsExpr\n  }),\n  interpreterDirective: createToken(\"#!...\"),\n  eq: createToken(\"=\", {\n    beforeExpr: beforeExpr,\n    isAssign: isAssign\n  }),\n  assign: createToken(\"_=\", {\n    beforeExpr: beforeExpr,\n    isAssign: isAssign\n  }),\n  slashAssign: createToken(\"_=\", {\n    beforeExpr: beforeExpr,\n    isAssign: isAssign\n  }),\n  xorAssign: createToken(\"_=\", {\n    beforeExpr: beforeExpr,\n    isAssign: isAssign\n  }),\n  moduloAssign: createToken(\"_=\", {\n    beforeExpr: beforeExpr,\n    isAssign: isAssign\n  }),\n  incDec: createToken(\"++/--\", {\n    prefix: prefix,\n    postfix: postfix,\n    startsExpr: startsExpr\n  }),\n  bang: createToken(\"!\", {\n    beforeExpr: beforeExpr,\n    prefix: prefix,\n    startsExpr: startsExpr\n  }),\n  tilde: createToken(\"~\", {\n    beforeExpr: beforeExpr,\n    prefix: prefix,\n    startsExpr: startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  lt: createBinop(\"</>/<=/>=\", 7),\n  gt: createBinop(\"</>/<=/>=\", 7),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: createToken(\"+/-\", {\n    beforeExpr: beforeExpr,\n    binop: 9,\n    prefix: prefix,\n    startsExpr: startsExpr\n  }),\n  modulo: createToken(\"%\", {\n    binop: 10,\n    startsExpr: startsExpr\n  }),\n  star: createToken(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: createToken(\"**\", {\n    beforeExpr: beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr: beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr: beforeExpr,\n    binop: 7\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr: beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr: beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr: beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _function: createKeyword(\"function\", {\n    startsExpr: startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr: beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr: beforeExpr,\n    prefix: prefix,\n    startsExpr: startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr: beforeExpr,\n    startsExpr: startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr: startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr: startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr: startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr: beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr: startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr: startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr: startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr: startsExpr\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr: beforeExpr,\n    prefix: prefix,\n    startsExpr: startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr: beforeExpr,\n    prefix: prefix,\n    startsExpr: startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr: beforeExpr,\n    prefix: prefix,\n    startsExpr: startsExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop: isLoop,\n    beforeExpr: beforeExpr\n  }),\n  _for: createKeyword(\"for\", {\n    isLoop: isLoop\n  }),\n  _while: createKeyword(\"while\", {\n    isLoop: isLoop\n  }),\n  _as: createKeywordLike(\"as\", {\n    startsExpr: startsExpr\n  }),\n  _assert: createKeywordLike(\"assert\", {\n    startsExpr: startsExpr\n  }),\n  _async: createKeywordLike(\"async\", {\n    startsExpr: startsExpr\n  }),\n  _await: createKeywordLike(\"await\", {\n    startsExpr: startsExpr\n  }),\n  _from: createKeywordLike(\"from\", {\n    startsExpr: startsExpr\n  }),\n  _get: createKeywordLike(\"get\", {\n    startsExpr: startsExpr\n  }),\n  _let: createKeywordLike(\"let\", {\n    startsExpr: startsExpr\n  }),\n  _meta: createKeywordLike(\"meta\", {\n    startsExpr: startsExpr\n  }),\n  _of: createKeywordLike(\"of\", {\n    startsExpr: startsExpr\n  }),\n  _sent: createKeywordLike(\"sent\", {\n    startsExpr: startsExpr\n  }),\n  _set: createKeywordLike(\"set\", {\n    startsExpr: startsExpr\n  }),\n  _static: createKeywordLike(\"static\", {\n    startsExpr: startsExpr\n  }),\n  _yield: createKeywordLike(\"yield\", {\n    startsExpr: startsExpr\n  }),\n  _asserts: createKeywordLike(\"asserts\", {\n    startsExpr: startsExpr\n  }),\n  _checks: createKeywordLike(\"checks\", {\n    startsExpr: startsExpr\n  }),\n  _exports: createKeywordLike(\"exports\", {\n    startsExpr: startsExpr\n  }),\n  _global: createKeywordLike(\"global\", {\n    startsExpr: startsExpr\n  }),\n  _implements: createKeywordLike(\"implements\", {\n    startsExpr: startsExpr\n  }),\n  _intrinsic: createKeywordLike(\"intrinsic\", {\n    startsExpr: startsExpr\n  }),\n  _infer: createKeywordLike(\"infer\", {\n    startsExpr: startsExpr\n  }),\n  _is: createKeywordLike(\"is\", {\n    startsExpr: startsExpr\n  }),\n  _mixins: createKeywordLike(\"mixins\", {\n    startsExpr: startsExpr\n  }),\n  _proto: createKeywordLike(\"proto\", {\n    startsExpr: startsExpr\n  }),\n  _require: createKeywordLike(\"require\", {\n    startsExpr: startsExpr\n  }),\n  _keyof: createKeywordLike(\"keyof\", {\n    startsExpr: startsExpr\n  }),\n  _readonly: createKeywordLike(\"readonly\", {\n    startsExpr: startsExpr\n  }),\n  _unique: createKeywordLike(\"unique\", {\n    startsExpr: startsExpr\n  }),\n  _abstract: createKeywordLike(\"abstract\", {\n    startsExpr: startsExpr\n  }),\n  _declare: createKeywordLike(\"declare\", {\n    startsExpr: startsExpr\n  }),\n  _enum: createKeywordLike(\"enum\", {\n    startsExpr: startsExpr\n  }),\n  _module: createKeywordLike(\"module\", {\n    startsExpr: startsExpr\n  }),\n  _namespace: createKeywordLike(\"namespace\", {\n    startsExpr: startsExpr\n  }),\n  _interface: createKeywordLike(\"interface\", {\n    startsExpr: startsExpr\n  }),\n  _type: createKeywordLike(\"type\", {\n    startsExpr: startsExpr\n  }),\n  _opaque: createKeywordLike(\"opaque\", {\n    startsExpr: startsExpr\n  }),\n  name: createToken(\"name\", {\n    startsExpr: startsExpr\n  }),\n  string: createToken(\"string\", {\n    startsExpr: startsExpr\n  }),\n  num: createToken(\"num\", {\n    startsExpr: startsExpr\n  }),\n  bigint: createToken(\"bigint\", {\n    startsExpr: startsExpr\n  }),\n  decimal: createToken(\"decimal\", {\n    startsExpr: startsExpr\n  }),\n  regexp: createToken(\"regexp\", {\n    startsExpr: startsExpr\n  }),\n  privateName: createToken(\"#name\", {\n    startsExpr: startsExpr\n  }),\n  eof: createToken(\"eof\"),\n  jsxName: createToken(\"jsxName\"),\n  jsxText: createToken(\"jsxText\", {\n    beforeExpr: true\n  }),\n  jsxTagStart: createToken(\"jsxTagStart\", {\n    startsExpr: true\n  }),\n  jsxTagEnd: createToken(\"jsxTagEnd\"),\n  placeholder: createToken(\"%%\", {\n    startsExpr: true\n  })\n};\n\nfunction tokenIsIdentifier(token) {\n  return token >= 89 && token <= 124;\n}\n\nfunction tokenKeywordOrIdentifierIsKeyword(token) {\n  return token <= 88;\n}\n\nfunction tokenIsKeywordOrIdentifier(token) {\n  return token >= 54 && token <= 124;\n}\n\nfunction tokenIsLiteralPropertyName(token) {\n  return token >= 54 && token <= 128;\n}\n\nfunction tokenComesBeforeExpression(token) {\n  return tokenBeforeExprs[token];\n}\n\nfunction tokenCanStartExpression(token) {\n  return tokenStartsExprs[token];\n}\n\nfunction tokenIsAssignment(token) {\n  return token >= 29 && token <= 33;\n}\n\nfunction tokenIsFlowInterfaceOrTypeOrOpaque(token) {\n  return token >= 121 && token <= 123;\n}\n\nfunction tokenIsLoop(token) {\n  return token >= 86 && token <= 88;\n}\n\nfunction tokenIsKeyword(token) {\n  return token >= 54 && token <= 88;\n}\n\nfunction tokenIsOperator(token) {\n  return token >= 37 && token <= 55;\n}\n\nfunction tokenIsPostfix(token) {\n  return token === 34;\n}\n\nfunction tokenIsPrefix(token) {\n  return tokenPrefixes[token];\n}\n\nfunction tokenIsTSTypeOperator(token) {\n  return token >= 113 && token <= 115;\n}\n\nfunction tokenIsTSDeclarationStart(token) {\n  return token >= 116 && token <= 122;\n}\n\nfunction tokenLabelName(token) {\n  return tokenLabels[token];\n}\n\nfunction tokenOperatorPrecedence(token) {\n  return tokenBinops[token];\n}\n\nfunction tokenIsRightAssociative(token) {\n  return token === 53;\n}\n\nfunction tokenIsTemplate(token) {\n  return token >= 24 && token <= 25;\n}\n\nfunction getExportedToken(token) {\n  return tokenTypes[token];\n}\n\nfunction isTokenType(obj) {\n  return typeof obj === \"number\";\n}\n\n{\n  tokenTypes[8].updateContext = function (context) {\n    context.pop();\n  };\n\n  tokenTypes[5].updateContext = tokenTypes[7].updateContext = tokenTypes[23].updateContext = function (context) {\n    context.push(types.brace);\n  };\n\n  tokenTypes[22].updateContext = function (context) {\n    if (context[context.length - 1] === types.template) {\n      context.pop();\n    } else {\n      context.push(types.template);\n    }\n  };\n\n  tokenTypes[134].updateContext = function (context) {\n    context.push(types.j_expr, types.j_oTag);\n  };\n}\nvar nonASCIIidentifierStartChars = \"\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u08A0-\\u08C9\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u1711\\u171F-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4C\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\";\nvar nonASCIIidentifierChars = \"\\u200C\\u200D\\xB7\\u0300-\\u036F\\u0387\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u0669\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u06F0-\\u06F9\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07C0-\\u07C9\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0898-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096F\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u09E6-\\u09EF\\u09FE\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A66-\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0AE6-\\u0AEF\\u0AFA-\\u0AFF\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B55-\\u0B57\\u0B62\\u0B63\\u0B66-\\u0B6F\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C04\\u0C3C\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0CE6-\\u0CEF\\u0D00-\\u0D03\\u0D3B\\u0D3C\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D66-\\u0D6F\\u0D81-\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0E50-\\u0E59\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1040-\\u1049\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F-\\u109D\\u135D-\\u135F\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u180F-\\u1819\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u194F\\u19D0-\\u19DA\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AB0-\\u1ABD\\u1ABF-\\u1ACE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BB0-\\u1BB9\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1C40-\\u1C49\\u1C50-\\u1C59\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF4\\u1CF7-\\u1CF9\\u1DC0-\\u1DFF\\u203F\\u2040\\u2054\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA620-\\uA629\\uA66F\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA82C\\uA880\\uA881\\uA8B4-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F1\\uA8FF-\\uA909\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9D0-\\uA9D9\\uA9E5\\uA9F0-\\uA9F9\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA50-\\uAA59\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFF10-\\uFF19\\uFF3F\";\nvar nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nvar nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nvar astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 68, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1070, 4050, 582, 8634, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8936, 3, 2, 6, 2, 1, 2, 290, 46, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 482, 44, 11, 6, 17, 0, 322, 29, 19, 43, 1269, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4152, 8, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nvar astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 87, 9, 39, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4706, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 357, 0, 62, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  var pos = 0x10000;\n\n  for (var i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nvar reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nvar keywords = new Set(reservedWords.keyword);\nvar reservedWordsStrictSet = new Set(reservedWords.strict);\nvar reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\n\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\n\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\n\nfunction isKeyword(word) {\n  return keywords.has(word);\n}\n\nfunction isIteratorStart(current, next) {\n  return current === 64 && next === 64;\n}\n\nvar reservedWordLikeSet = new Set([\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\", \"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\", \"eval\", \"arguments\", \"enum\", \"await\"]);\n\nfunction canBeReservedWord(word) {\n  return reservedWordLikeSet.has(word);\n}\n\nvar SCOPE_OTHER = 0,\n    SCOPE_PROGRAM = 1,\n    SCOPE_FUNCTION = 2,\n    SCOPE_ARROW = 4,\n    SCOPE_SIMPLE_CATCH = 8,\n    SCOPE_SUPER = 16,\n    SCOPE_DIRECT_SUPER = 32,\n    SCOPE_CLASS = 64,\n    SCOPE_STATIC_BLOCK = 128,\n    SCOPE_TS_MODULE = 256,\n    SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nvar BIND_KIND_VALUE = 1,\n    BIND_KIND_TYPE = 2,\n    BIND_SCOPE_VAR = 4,\n    BIND_SCOPE_LEXICAL = 8,\n    BIND_SCOPE_FUNCTION = 16,\n    BIND_FLAGS_NONE = 64,\n    BIND_FLAGS_CLASS = 128,\n    BIND_FLAGS_TS_ENUM = 256,\n    BIND_FLAGS_TS_CONST_ENUM = 512,\n    BIND_FLAGS_TS_EXPORT_ONLY = 1024,\n    BIND_FLAGS_FLOW_DECLARE_FN = 2048;\nvar BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n    BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n    BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n    BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n    BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n    BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n    BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n    BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n    BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n    BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n    BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n    BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n    BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\nvar CLASS_ELEMENT_FLAG_STATIC = 4,\n    CLASS_ELEMENT_KIND_GETTER = 2,\n    CLASS_ELEMENT_KIND_SETTER = 1,\n    CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nvar CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n    CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n    CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n    CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n    CLASS_ELEMENT_OTHER = 0;\n\nvar Scope = /*#__PURE__*/_createClass(function Scope(flags) {\n  _classCallCheck(this, Scope);\n\n  this.var = new Set();\n  this.lexical = new Set();\n  this.functions = new Set();\n  this.flags = flags;\n});\n\nvar ScopeHandler = /*#__PURE__*/function () {\n  function ScopeHandler(raise, inModule) {\n    _classCallCheck(this, ScopeHandler);\n\n    this.scopeStack = [];\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  _createClass(ScopeHandler, [{\n    key: \"inFunction\",\n    get: function get() {\n      return (this.currentVarScopeFlags() & SCOPE_FUNCTION) > 0;\n    }\n  }, {\n    key: \"allowSuper\",\n    get: function get() {\n      return (this.currentThisScopeFlags() & SCOPE_SUPER) > 0;\n    }\n  }, {\n    key: \"allowDirectSuper\",\n    get: function get() {\n      return (this.currentThisScopeFlags() & SCOPE_DIRECT_SUPER) > 0;\n    }\n  }, {\n    key: \"inClass\",\n    get: function get() {\n      return (this.currentThisScopeFlags() & SCOPE_CLASS) > 0;\n    }\n  }, {\n    key: \"inClassAndNotInNonArrowFunction\",\n    get: function get() {\n      var flags = this.currentThisScopeFlags();\n      return (flags & SCOPE_CLASS) > 0 && (flags & SCOPE_FUNCTION) === 0;\n    }\n  }, {\n    key: \"inStaticBlock\",\n    get: function get() {\n      for (var i = this.scopeStack.length - 1;; i--) {\n        var flags = this.scopeStack[i].flags;\n\n        if (flags & SCOPE_STATIC_BLOCK) {\n          return true;\n        }\n\n        if (flags & (SCOPE_VAR | SCOPE_CLASS)) {\n          return false;\n        }\n      }\n    }\n  }, {\n    key: \"inNonArrowFunction\",\n    get: function get() {\n      return (this.currentThisScopeFlags() & SCOPE_FUNCTION) > 0;\n    }\n  }, {\n    key: \"treatFunctionsAsVar\",\n    get: function get() {\n      return this.treatFunctionsAsVarInScope(this.currentScope());\n    }\n  }, {\n    key: \"createScope\",\n    value: function createScope(flags) {\n      return new Scope(flags);\n    }\n  }, {\n    key: \"enter\",\n    value: function enter(flags) {\n      this.scopeStack.push(this.createScope(flags));\n    }\n  }, {\n    key: \"exit\",\n    value: function exit() {\n      this.scopeStack.pop();\n    }\n  }, {\n    key: \"treatFunctionsAsVarInScope\",\n    value: function treatFunctionsAsVarInScope(scope) {\n      return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n    }\n  }, {\n    key: \"declareName\",\n    value: function declareName(name, bindingType, pos) {\n      var scope = this.currentScope();\n\n      if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n        if (bindingType & BIND_SCOPE_FUNCTION) {\n          scope.functions.add(name);\n        } else {\n          scope.lexical.add(name);\n        }\n\n        if (bindingType & BIND_SCOPE_LEXICAL) {\n          this.maybeExportDefined(scope, name);\n        }\n      } else if (bindingType & BIND_SCOPE_VAR) {\n        for (var i = this.scopeStack.length - 1; i >= 0; --i) {\n          scope = this.scopeStack[i];\n          this.checkRedeclarationInScope(scope, name, bindingType, pos);\n          scope.var.add(name);\n          this.maybeExportDefined(scope, name);\n          if (scope.flags & SCOPE_VAR) break;\n        }\n      }\n\n      if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n        this.undefinedExports.delete(name);\n      }\n    }\n  }, {\n    key: \"maybeExportDefined\",\n    value: function maybeExportDefined(scope, name) {\n      if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n        this.undefinedExports.delete(name);\n      }\n    }\n  }, {\n    key: \"checkRedeclarationInScope\",\n    value: function checkRedeclarationInScope(scope, name, bindingType, pos) {\n      if (this.isRedeclaredInScope(scope, name, bindingType)) {\n        this.raise(pos, ErrorMessages.VarRedeclaration, name);\n      }\n    }\n  }, {\n    key: \"isRedeclaredInScope\",\n    value: function isRedeclaredInScope(scope, name, bindingType) {\n      if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        return scope.lexical.has(name) || scope.functions.has(name) || scope.var.has(name);\n      }\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        return scope.lexical.has(name) || !this.treatFunctionsAsVarInScope(scope) && scope.var.has(name);\n      }\n\n      return scope.lexical.has(name) && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical.values().next().value === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.has(name);\n    }\n  }, {\n    key: \"checkLocalExport\",\n    value: function checkLocalExport(id) {\n      var name = id.name;\n      var topLevelScope = this.scopeStack[0];\n\n      if (!topLevelScope.lexical.has(name) && !topLevelScope.var.has(name) && !topLevelScope.functions.has(name)) {\n        this.undefinedExports.set(name, id.start);\n      }\n    }\n  }, {\n    key: \"currentScope\",\n    value: function currentScope() {\n      return this.scopeStack[this.scopeStack.length - 1];\n    }\n  }, {\n    key: \"currentVarScopeFlags\",\n    value: function currentVarScopeFlags() {\n      for (var i = this.scopeStack.length - 1;; i--) {\n        var flags = this.scopeStack[i].flags;\n\n        if (flags & SCOPE_VAR) {\n          return flags;\n        }\n      }\n    }\n  }, {\n    key: \"currentThisScopeFlags\",\n    value: function currentThisScopeFlags() {\n      for (var i = this.scopeStack.length - 1;; i--) {\n        var flags = this.scopeStack[i].flags;\n\n        if (flags & (SCOPE_VAR | SCOPE_CLASS) && !(flags & SCOPE_ARROW)) {\n          return flags;\n        }\n      }\n    }\n  }]);\n\n  return ScopeHandler;\n}();\n\nvar FlowScope = /*#__PURE__*/function (_Scope) {\n  _inherits(FlowScope, _Scope);\n\n  var _super4 = _createSuper(FlowScope);\n\n  function FlowScope() {\n    var _this3;\n\n    _classCallCheck(this, FlowScope);\n\n    for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n      args[_key8] = arguments[_key8];\n    }\n\n    _this3 = _super4.call.apply(_super4, [this].concat(args));\n    _this3.declareFunctions = new Set();\n    return _this3;\n  }\n\n  return _createClass(FlowScope);\n}(Scope);\n\nvar FlowScopeHandler = /*#__PURE__*/function (_ScopeHandler) {\n  _inherits(FlowScopeHandler, _ScopeHandler);\n\n  var _super5 = _createSuper(FlowScopeHandler);\n\n  function FlowScopeHandler() {\n    _classCallCheck(this, FlowScopeHandler);\n\n    return _super5.apply(this, arguments);\n  }\n\n  _createClass(FlowScopeHandler, [{\n    key: \"createScope\",\n    value: function createScope(flags) {\n      return new FlowScope(flags);\n    }\n  }, {\n    key: \"declareName\",\n    value: function declareName(name, bindingType, pos) {\n      var scope = this.currentScope();\n\n      if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n        scope.declareFunctions.add(name);\n        return;\n      }\n\n      _get(_getPrototypeOf(FlowScopeHandler.prototype), \"declareName\", this).apply(this, arguments);\n    }\n  }, {\n    key: \"isRedeclaredInScope\",\n    value: function isRedeclaredInScope(scope, name, bindingType) {\n      if (_get(_getPrototypeOf(FlowScopeHandler.prototype), \"isRedeclaredInScope\", this).apply(this, arguments)) return true;\n\n      if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n        return !scope.declareFunctions.has(name) && (scope.lexical.has(name) || scope.functions.has(name));\n      }\n\n      return false;\n    }\n  }, {\n    key: \"checkLocalExport\",\n    value: function checkLocalExport(id) {\n      if (!this.scopeStack[0].declareFunctions.has(id.name)) {\n        _get(_getPrototypeOf(FlowScopeHandler.prototype), \"checkLocalExport\", this).call(this, id);\n      }\n    }\n  }]);\n\n  return FlowScopeHandler;\n}(ScopeHandler);\n\nvar State = /*#__PURE__*/function () {\n  function State() {\n    _classCallCheck(this, State);\n\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.lineStart = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.hasFlowComment = false;\n    this.isAmbientContext = false;\n    this.inAbstractClass = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.comments = [];\n    this.commentStack = [];\n    this.pos = 0;\n    this.type = 131;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.lastTokEnd = 0;\n    this.context = [types.brace];\n    this.canStartJSXElement = true;\n    this.containsEsc = false;\n    this.strictErrors = new Map();\n    this.tokensLength = 0;\n  }\n\n  _createClass(State, [{\n    key: \"init\",\n    value: function init(_ref4) {\n      var strictMode = _ref4.strictMode,\n          sourceType = _ref4.sourceType,\n          startLine = _ref4.startLine,\n          startColumn = _ref4.startColumn;\n      this.strict = strictMode === false ? false : strictMode === true ? true : sourceType === \"module\";\n      this.curLine = startLine;\n      this.lineStart = -startColumn;\n      this.startLoc = this.endLoc = new Position(startLine, startColumn);\n    }\n  }, {\n    key: \"curPosition\",\n    value: function curPosition() {\n      return new Position(this.curLine, this.pos - this.lineStart);\n    }\n  }, {\n    key: \"clone\",\n    value: function clone(skipArrays) {\n      var state = new State();\n      var keys = Object.keys(this);\n\n      for (var i = 0, length = keys.length; i < length; i++) {\n        var key = keys[i];\n        var val = this[key];\n\n        if (!skipArrays && Array.isArray(val)) {\n          val = val.slice();\n        }\n\n        state[key] = val;\n      }\n\n      return state;\n    }\n  }]);\n\n  return State;\n}();\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\n\nvar VALID_REGEX_FLAGS = new Set([103, 109, 115, 105, 121, 117, 100]);\nvar forbiddenNumericSeparatorSiblings = {\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n  hex: [46, 88, 95, 120]\n};\nvar allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [48, 49];\nallowedNumericSeparatorSiblings.oct = [].concat(_toConsumableArray(allowedNumericSeparatorSiblings.bin), [50, 51, 52, 53, 54, 55]);\nallowedNumericSeparatorSiblings.dec = [].concat(_toConsumableArray(allowedNumericSeparatorSiblings.oct), [56, 57]);\nallowedNumericSeparatorSiblings.hex = [].concat(_toConsumableArray(allowedNumericSeparatorSiblings.dec), [65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102]);\n\nvar Token = /*#__PURE__*/_createClass(function Token(state) {\n  _classCallCheck(this, Token);\n\n  this.type = state.type;\n  this.value = state.value;\n  this.start = state.start;\n  this.end = state.end;\n  this.loc = new SourceLocation(state.startLoc, state.endLoc);\n});\n\nvar Tokenizer = /*#__PURE__*/function (_ParserError) {\n  _inherits(Tokenizer, _ParserError);\n\n  var _super6 = _createSuper(Tokenizer);\n\n  function Tokenizer(options, input) {\n    var _this4;\n\n    _classCallCheck(this, Tokenizer);\n\n    _this4 = _super6.call(this);\n    _this4.isLookahead = void 0;\n    _this4.tokens = [];\n    _this4.state = new State();\n\n    _this4.state.init(options);\n\n    _this4.input = input;\n    _this4.length = input.length;\n    _this4.isLookahead = false;\n    return _this4;\n  }\n\n  _createClass(Tokenizer, [{\n    key: \"pushToken\",\n    value: function pushToken(token) {\n      this.tokens.length = this.state.tokensLength;\n      this.tokens.push(token);\n      ++this.state.tokensLength;\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      this.checkKeywordEscapes();\n\n      if (this.options.tokens) {\n        this.pushToken(new Token(this.state));\n      }\n\n      this.state.lastTokEnd = this.state.end;\n      this.state.lastTokStart = this.state.start;\n      this.state.lastTokEndLoc = this.state.endLoc;\n      this.state.lastTokStartLoc = this.state.startLoc;\n      this.nextToken();\n    }\n  }, {\n    key: \"eat\",\n    value: function eat(type) {\n      if (this.match(type)) {\n        this.next();\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"match\",\n    value: function match(type) {\n      return this.state.type === type;\n    }\n  }, {\n    key: \"createLookaheadState\",\n    value: function createLookaheadState(state) {\n      return {\n        pos: state.pos,\n        value: null,\n        type: state.type,\n        start: state.start,\n        end: state.end,\n        lastTokEnd: state.end,\n        context: [this.curContext()],\n        inType: state.inType\n      };\n    }\n  }, {\n    key: \"lookahead\",\n    value: function lookahead() {\n      var old = this.state;\n      this.state = this.createLookaheadState(old);\n      this.isLookahead = true;\n      this.nextToken();\n      this.isLookahead = false;\n      var curr = this.state;\n      this.state = old;\n      return curr;\n    }\n  }, {\n    key: \"nextTokenStart\",\n    value: function nextTokenStart() {\n      return this.nextTokenStartSince(this.state.pos);\n    }\n  }, {\n    key: \"nextTokenStartSince\",\n    value: function nextTokenStartSince(pos) {\n      skipWhiteSpace.lastIndex = pos;\n      return skipWhiteSpace.test(this.input) ? skipWhiteSpace.lastIndex : pos;\n    }\n  }, {\n    key: \"lookaheadCharCode\",\n    value: function lookaheadCharCode() {\n      return this.input.charCodeAt(this.nextTokenStart());\n    }\n  }, {\n    key: \"codePointAtPos\",\n    value: function codePointAtPos(pos) {\n      var cp = this.input.charCodeAt(pos);\n\n      if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n        var trail = this.input.charCodeAt(pos);\n\n        if ((trail & 0xfc00) === 0xdc00) {\n          cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n        }\n      }\n\n      return cp;\n    }\n  }, {\n    key: \"setStrict\",\n    value: function setStrict(strict) {\n      var _this5 = this;\n\n      this.state.strict = strict;\n\n      if (strict) {\n        this.state.strictErrors.forEach(function (message, pos) {\n          return _this5.raise(pos, message);\n        });\n        this.state.strictErrors.clear();\n      }\n    }\n  }, {\n    key: \"curContext\",\n    value: function curContext() {\n      return this.state.context[this.state.context.length - 1];\n    }\n  }, {\n    key: \"nextToken\",\n    value: function nextToken() {\n      this.skipSpace();\n      this.state.start = this.state.pos;\n      if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n\n      if (this.state.pos >= this.length) {\n        this.finishToken(131);\n        return;\n      }\n\n      this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n    }\n  }, {\n    key: \"skipBlockComment\",\n    value: function skipBlockComment() {\n      var startLoc;\n      if (!this.isLookahead) startLoc = this.state.curPosition();\n      var start = this.state.pos;\n      var end = this.input.indexOf(\"*/\", start + 2);\n      if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\n      this.state.pos = end + 2;\n      lineBreakG.lastIndex = start + 2;\n\n      while (lineBreakG.test(this.input) && lineBreakG.lastIndex <= end) {\n        ++this.state.curLine;\n        this.state.lineStart = lineBreakG.lastIndex;\n      }\n\n      if (this.isLookahead) return;\n      var comment = {\n        type: \"CommentBlock\",\n        value: this.input.slice(start + 2, end),\n        start: start,\n        end: end + 2,\n        loc: new SourceLocation(startLoc, this.state.curPosition())\n      };\n      if (this.options.tokens) this.pushToken(comment);\n      return comment;\n    }\n  }, {\n    key: \"skipLineComment\",\n    value: function skipLineComment(startSkip) {\n      var start = this.state.pos;\n      var startLoc;\n      if (!this.isLookahead) startLoc = this.state.curPosition();\n      var ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n      if (this.state.pos < this.length) {\n        while (!isNewLine(ch) && ++this.state.pos < this.length) {\n          ch = this.input.charCodeAt(this.state.pos);\n        }\n      }\n\n      if (this.isLookahead) return;\n      var end = this.state.pos;\n      var value = this.input.slice(start + startSkip, end);\n      var comment = {\n        type: \"CommentLine\",\n        value: value,\n        start: start,\n        end: end,\n        loc: new SourceLocation(startLoc, this.state.curPosition())\n      };\n      if (this.options.tokens) this.pushToken(comment);\n      return comment;\n    }\n  }, {\n    key: \"skipSpace\",\n    value: function skipSpace() {\n      var spaceStart = this.state.pos;\n      var comments = [];\n\n      loop: while (this.state.pos < this.length) {\n        var ch = this.input.charCodeAt(this.state.pos);\n\n        switch (ch) {\n          case 32:\n          case 160:\n          case 9:\n            ++this.state.pos;\n            break;\n\n          case 13:\n            if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n              ++this.state.pos;\n            }\n\n          case 10:\n          case 8232:\n          case 8233:\n            ++this.state.pos;\n            ++this.state.curLine;\n            this.state.lineStart = this.state.pos;\n            break;\n\n          case 47:\n            switch (this.input.charCodeAt(this.state.pos + 1)) {\n              case 42:\n                {\n                  var comment = this.skipBlockComment();\n\n                  if (comment !== undefined) {\n                    this.addComment(comment);\n                    if (this.options.attachComment) comments.push(comment);\n                  }\n\n                  break;\n                }\n\n              case 47:\n                {\n                  var _comment = this.skipLineComment(2);\n\n                  if (_comment !== undefined) {\n                    this.addComment(_comment);\n                    if (this.options.attachComment) comments.push(_comment);\n                  }\n\n                  break;\n                }\n\n              default:\n                break loop;\n            }\n\n            break;\n\n          default:\n            if (isWhitespace(ch)) {\n              ++this.state.pos;\n            } else if (ch === 45 && !this.inModule) {\n              var pos = this.state.pos;\n\n              if (this.input.charCodeAt(pos + 1) === 45 && this.input.charCodeAt(pos + 2) === 62 && (spaceStart === 0 || this.state.lineStart > spaceStart)) {\n                var _comment2 = this.skipLineComment(3);\n\n                if (_comment2 !== undefined) {\n                  this.addComment(_comment2);\n                  if (this.options.attachComment) comments.push(_comment2);\n                }\n              } else {\n                break loop;\n              }\n            } else if (ch === 60 && !this.inModule) {\n              var _pos = this.state.pos;\n\n              if (this.input.charCodeAt(_pos + 1) === 33 && this.input.charCodeAt(_pos + 2) === 45 && this.input.charCodeAt(_pos + 3) === 45) {\n                var _comment3 = this.skipLineComment(4);\n\n                if (_comment3 !== undefined) {\n                  this.addComment(_comment3);\n                  if (this.options.attachComment) comments.push(_comment3);\n                }\n              } else {\n                break loop;\n              }\n            } else {\n              break loop;\n            }\n\n        }\n      }\n\n      if (comments.length > 0) {\n        var end = this.state.pos;\n        var CommentWhitespace = {\n          start: spaceStart,\n          end: end,\n          comments: comments,\n          leadingNode: null,\n          trailingNode: null,\n          containingNode: null\n        };\n        this.state.commentStack.push(CommentWhitespace);\n      }\n    }\n  }, {\n    key: \"finishToken\",\n    value: function finishToken(type, val) {\n      this.state.end = this.state.pos;\n      var prevType = this.state.type;\n      this.state.type = type;\n      this.state.value = val;\n\n      if (!this.isLookahead) {\n        this.state.endLoc = this.state.curPosition();\n        this.updateContext(prevType);\n      }\n    }\n  }, {\n    key: \"replaceToken\",\n    value: function replaceToken(type) {\n      this.state.type = type;\n      this.updateContext();\n    }\n  }, {\n    key: \"readToken_numberSign\",\n    value: function readToken_numberSign() {\n      if (this.state.pos === 0 && this.readToken_interpreter()) {\n        return;\n      }\n\n      var nextPos = this.state.pos + 1;\n      var next = this.codePointAtPos(nextPos);\n\n      if (next >= 48 && next <= 57) {\n        throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\n      }\n\n      if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n        this.expectPlugin(\"recordAndTuple\");\n\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n          throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\n        }\n\n        this.state.pos += 2;\n\n        if (next === 123) {\n          this.finishToken(7);\n        } else {\n          this.finishToken(1);\n        }\n      } else if (isIdentifierStart(next)) {\n        ++this.state.pos;\n        this.finishToken(130, this.readWord1(next));\n      } else if (next === 92) {\n        ++this.state.pos;\n        this.finishToken(130, this.readWord1());\n      } else {\n        this.finishOp(27, 1);\n      }\n    }\n  }, {\n    key: \"readToken_dot\",\n    value: function readToken_dot() {\n      var next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (next >= 48 && next <= 57) {\n        this.readNumber(true);\n        return;\n      }\n\n      if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n        this.state.pos += 3;\n        this.finishToken(21);\n      } else {\n        ++this.state.pos;\n        this.finishToken(16);\n      }\n    }\n  }, {\n    key: \"readToken_slash\",\n    value: function readToken_slash() {\n      var next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (next === 61) {\n        this.finishOp(31, 2);\n      } else {\n        this.finishOp(52, 1);\n      }\n    }\n  }, {\n    key: \"readToken_interpreter\",\n    value: function readToken_interpreter() {\n      if (this.state.pos !== 0 || this.length < 2) return false;\n      var ch = this.input.charCodeAt(this.state.pos + 1);\n      if (ch !== 33) return false;\n      var start = this.state.pos;\n      this.state.pos += 1;\n\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n\n      var value = this.input.slice(start + 2, this.state.pos);\n      this.finishToken(28, value);\n      return true;\n    }\n  }, {\n    key: \"readToken_mult_modulo\",\n    value: function readToken_mult_modulo(code) {\n      var type = code === 42 ? 51 : 50;\n      var width = 1;\n      var next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (code === 42 && next === 42) {\n        width++;\n        next = this.input.charCodeAt(this.state.pos + 2);\n        type = 53;\n      }\n\n      if (next === 61 && !this.state.inType) {\n        width++;\n        type = code === 37 ? 33 : 30;\n      }\n\n      this.finishOp(type, width);\n    }\n  }, {\n    key: \"readToken_pipe_amp\",\n    value: function readToken_pipe_amp(code) {\n      var next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (next === code) {\n        if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n          this.finishOp(30, 3);\n        } else {\n          this.finishOp(code === 124 ? 39 : 40, 2);\n        }\n\n        return;\n      }\n\n      if (code === 124) {\n        if (next === 62) {\n          this.finishOp(37, 2);\n          return;\n        }\n\n        if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\n          }\n\n          this.state.pos += 2;\n          this.finishToken(9);\n          return;\n        }\n\n        if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\n          }\n\n          this.state.pos += 2;\n          this.finishToken(4);\n          return;\n        }\n      }\n\n      if (next === 61) {\n        this.finishOp(30, 2);\n        return;\n      }\n\n      this.finishOp(code === 124 ? 41 : 43, 1);\n    }\n  }, {\n    key: \"readToken_caret\",\n    value: function readToken_caret() {\n      var next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (next === 61 && !this.state.inType) {\n        this.finishOp(32, 2);\n      } else {\n        this.finishOp(42, 1);\n      }\n    }\n  }, {\n    key: \"readToken_plus_min\",\n    value: function readToken_plus_min(code) {\n      var next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (next === code) {\n        this.finishOp(34, 2);\n        return;\n      }\n\n      if (next === 61) {\n        this.finishOp(30, 2);\n      } else {\n        this.finishOp(49, 1);\n      }\n    }\n  }, {\n    key: \"readToken_lt\",\n    value: function readToken_lt() {\n      var pos = this.state.pos;\n      var next = this.input.charCodeAt(pos + 1);\n\n      if (next === 60) {\n        if (this.input.charCodeAt(pos + 2) === 61) {\n          this.finishOp(30, 3);\n          return;\n        }\n\n        this.finishOp(48, 2);\n        return;\n      }\n\n      if (next === 61) {\n        this.finishOp(47, 2);\n        return;\n      }\n\n      this.finishOp(45, 1);\n    }\n  }, {\n    key: \"readToken_gt\",\n    value: function readToken_gt() {\n      var pos = this.state.pos;\n      var next = this.input.charCodeAt(pos + 1);\n\n      if (next === 62) {\n        var size = this.input.charCodeAt(pos + 2) === 62 ? 3 : 2;\n\n        if (this.input.charCodeAt(pos + size) === 61) {\n          this.finishOp(30, size + 1);\n          return;\n        }\n\n        this.finishOp(48, size);\n        return;\n      }\n\n      if (next === 61) {\n        this.finishOp(47, 2);\n        return;\n      }\n\n      this.finishOp(46, 1);\n    }\n  }, {\n    key: \"readToken_eq_excl\",\n    value: function readToken_eq_excl(code) {\n      var next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (next === 61) {\n        this.finishOp(44, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n        return;\n      }\n\n      if (code === 61 && next === 62) {\n        this.state.pos += 2;\n        this.finishToken(19);\n        return;\n      }\n\n      this.finishOp(code === 61 ? 29 : 35, 1);\n    }\n  }, {\n    key: \"readToken_question\",\n    value: function readToken_question() {\n      var next = this.input.charCodeAt(this.state.pos + 1);\n      var next2 = this.input.charCodeAt(this.state.pos + 2);\n\n      if (next === 63) {\n        if (next2 === 61) {\n          this.finishOp(30, 3);\n        } else {\n          this.finishOp(38, 2);\n        }\n      } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n        this.state.pos += 2;\n        this.finishToken(18);\n      } else {\n        ++this.state.pos;\n        this.finishToken(17);\n      }\n    }\n  }, {\n    key: \"getTokenFromCode\",\n    value: function getTokenFromCode(code) {\n      switch (code) {\n        case 46:\n          this.readToken_dot();\n          return;\n\n        case 40:\n          ++this.state.pos;\n          this.finishToken(10);\n          return;\n\n        case 41:\n          ++this.state.pos;\n          this.finishToken(11);\n          return;\n\n        case 59:\n          ++this.state.pos;\n          this.finishToken(13);\n          return;\n\n        case 44:\n          ++this.state.pos;\n          this.finishToken(12);\n          return;\n\n        case 91:\n          if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n            if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n              throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n            }\n\n            this.state.pos += 2;\n            this.finishToken(2);\n          } else {\n            ++this.state.pos;\n            this.finishToken(0);\n          }\n\n          return;\n\n        case 93:\n          ++this.state.pos;\n          this.finishToken(3);\n          return;\n\n        case 123:\n          if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n            if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n              throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n            }\n\n            this.state.pos += 2;\n            this.finishToken(6);\n          } else {\n            ++this.state.pos;\n            this.finishToken(5);\n          }\n\n          return;\n\n        case 125:\n          ++this.state.pos;\n          this.finishToken(8);\n          return;\n\n        case 58:\n          if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n            this.finishOp(15, 2);\n          } else {\n            ++this.state.pos;\n            this.finishToken(14);\n          }\n\n          return;\n\n        case 63:\n          this.readToken_question();\n          return;\n\n        case 96:\n          this.readTemplateToken();\n          return;\n\n        case 48:\n          {\n            var next = this.input.charCodeAt(this.state.pos + 1);\n\n            if (next === 120 || next === 88) {\n              this.readRadixNumber(16);\n              return;\n            }\n\n            if (next === 111 || next === 79) {\n              this.readRadixNumber(8);\n              return;\n            }\n\n            if (next === 98 || next === 66) {\n              this.readRadixNumber(2);\n              return;\n            }\n          }\n\n        case 49:\n        case 50:\n        case 51:\n        case 52:\n        case 53:\n        case 54:\n        case 55:\n        case 56:\n        case 57:\n          this.readNumber(false);\n          return;\n\n        case 34:\n        case 39:\n          this.readString(code);\n          return;\n\n        case 47:\n          this.readToken_slash();\n          return;\n\n        case 37:\n        case 42:\n          this.readToken_mult_modulo(code);\n          return;\n\n        case 124:\n        case 38:\n          this.readToken_pipe_amp(code);\n          return;\n\n        case 94:\n          this.readToken_caret();\n          return;\n\n        case 43:\n        case 45:\n          this.readToken_plus_min(code);\n          return;\n\n        case 60:\n          this.readToken_lt();\n          return;\n\n        case 62:\n          this.readToken_gt();\n          return;\n\n        case 61:\n        case 33:\n          this.readToken_eq_excl(code);\n          return;\n\n        case 126:\n          this.finishOp(36, 1);\n          return;\n\n        case 64:\n          ++this.state.pos;\n          this.finishToken(26);\n          return;\n\n        case 35:\n          this.readToken_numberSign();\n          return;\n\n        case 92:\n          this.readWord();\n          return;\n\n        default:\n          if (isIdentifierStart(code)) {\n            this.readWord(code);\n            return;\n          }\n\n      }\n\n      throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n    }\n  }, {\n    key: \"finishOp\",\n    value: function finishOp(type, size) {\n      var str = this.input.slice(this.state.pos, this.state.pos + size);\n      this.state.pos += size;\n      this.finishToken(type, str);\n    }\n  }, {\n    key: \"readRegexp\",\n    value: function readRegexp() {\n      var start = this.state.start + 1;\n      var escaped, inClass;\n      var pos = this.state.pos;\n\n      for (;; ++pos) {\n        if (pos >= this.length) {\n          throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n        }\n\n        var ch = this.input.charCodeAt(pos);\n\n        if (isNewLine(ch)) {\n          throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n        }\n\n        if (escaped) {\n          escaped = false;\n        } else {\n          if (ch === 91) {\n            inClass = true;\n          } else if (ch === 93 && inClass) {\n            inClass = false;\n          } else if (ch === 47 && !inClass) {\n            break;\n          }\n\n          escaped = ch === 92;\n        }\n      }\n\n      var content = this.input.slice(start, pos);\n      ++pos;\n      var mods = \"\";\n\n      while (pos < this.length) {\n        var cp = this.codePointAtPos(pos);\n        var char = String.fromCharCode(cp);\n\n        if (VALID_REGEX_FLAGS.has(cp)) {\n          if (mods.includes(char)) {\n            this.raise(pos + 1, ErrorMessages.DuplicateRegExpFlags);\n          }\n        } else if (isIdentifierChar(cp) || cp === 92) {\n          this.raise(pos + 1, ErrorMessages.MalformedRegExpFlags);\n        } else {\n          break;\n        }\n\n        ++pos;\n        mods += char;\n      }\n\n      this.state.pos = pos;\n      this.finishToken(129, {\n        pattern: content,\n        flags: mods\n      });\n    }\n  }, {\n    key: \"readInt\",\n    value: function readInt(radix, len, forceLen) {\n      var allowNumSeparator = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n      var start = this.state.pos;\n      var forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n      var allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n      var invalid = false;\n      var total = 0;\n\n      for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n        var code = this.input.charCodeAt(this.state.pos);\n        var val = void 0;\n\n        if (code === 95) {\n          var prev = this.input.charCodeAt(this.state.pos - 1);\n          var next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (allowedSiblings.indexOf(next) === -1) {\n            this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n          } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n            this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n          }\n\n          if (!allowNumSeparator) {\n            this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n          }\n\n          ++this.state.pos;\n          continue;\n        }\n\n        if (code >= 97) {\n          val = code - 97 + 10;\n        } else if (code >= 65) {\n          val = code - 65 + 10;\n        } else if (_isDigit(code)) {\n          val = code - 48;\n        } else {\n          val = Infinity;\n        }\n\n        if (val >= radix) {\n          if (this.options.errorRecovery && val <= 9) {\n            val = 0;\n            this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n          } else if (forceLen) {\n            val = 0;\n            invalid = true;\n          } else {\n            break;\n          }\n        }\n\n        ++this.state.pos;\n        total = total * radix + val;\n      }\n\n      if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n        return null;\n      }\n\n      return total;\n    }\n  }, {\n    key: \"readRadixNumber\",\n    value: function readRadixNumber(radix) {\n      var start = this.state.pos;\n      var isBigInt = false;\n      this.state.pos += 2;\n      var val = this.readInt(radix);\n\n      if (val == null) {\n        this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\n      }\n\n      var next = this.input.charCodeAt(this.state.pos);\n\n      if (next === 110) {\n        ++this.state.pos;\n        isBigInt = true;\n      } else if (next === 109) {\n        throw this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n        throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n      }\n\n      if (isBigInt) {\n        var str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n        this.finishToken(127, str);\n        return;\n      }\n\n      this.finishToken(126, val);\n    }\n  }, {\n    key: \"readNumber\",\n    value: function readNumber(startsWithDot) {\n      var start = this.state.pos;\n      var isFloat = false;\n      var isBigInt = false;\n      var isDecimal = false;\n      var hasExponent = false;\n      var isOctal = false;\n\n      if (!startsWithDot && this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidNumber);\n      }\n\n      var hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n      if (hasLeadingZero) {\n        var integer = this.input.slice(start, this.state.pos);\n        this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);\n\n        if (!this.state.strict) {\n          var underscorePos = integer.indexOf(\"_\");\n\n          if (underscorePos > 0) {\n            this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n          }\n        }\n\n        isOctal = hasLeadingZero && !/[89]/.test(integer);\n      }\n\n      var next = this.input.charCodeAt(this.state.pos);\n\n      if (next === 46 && !isOctal) {\n        ++this.state.pos;\n        this.readInt(10);\n        isFloat = true;\n        next = this.input.charCodeAt(this.state.pos);\n      }\n\n      if ((next === 69 || next === 101) && !isOctal) {\n        next = this.input.charCodeAt(++this.state.pos);\n\n        if (next === 43 || next === 45) {\n          ++this.state.pos;\n        }\n\n        if (this.readInt(10) === null) {\n          this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n        }\n\n        isFloat = true;\n        hasExponent = true;\n        next = this.input.charCodeAt(this.state.pos);\n      }\n\n      if (next === 110) {\n        if (isFloat || hasLeadingZero) {\n          this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n        }\n\n        ++this.state.pos;\n        isBigInt = true;\n      }\n\n      if (next === 109) {\n        this.expectPlugin(\"decimal\", this.state.pos);\n\n        if (hasExponent || hasLeadingZero) {\n          this.raise(start, ErrorMessages.InvalidDecimal);\n        }\n\n        ++this.state.pos;\n        isDecimal = true;\n      }\n\n      if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n        throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n      }\n\n      var str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n      if (isBigInt) {\n        this.finishToken(127, str);\n        return;\n      }\n\n      if (isDecimal) {\n        this.finishToken(128, str);\n        return;\n      }\n\n      var val = isOctal ? parseInt(str, 8) : parseFloat(str);\n      this.finishToken(126, val);\n    }\n  }, {\n    key: \"readCodePoint\",\n    value: function readCodePoint(throwOnInvalid) {\n      var ch = this.input.charCodeAt(this.state.pos);\n      var code;\n\n      if (ch === 123) {\n        var codePos = ++this.state.pos;\n        code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\n        ++this.state.pos;\n\n        if (code !== null && code > 0x10ffff) {\n          if (throwOnInvalid) {\n            this.raise(codePos, ErrorMessages.InvalidCodePoint);\n          } else {\n            return null;\n          }\n        }\n      } else {\n        code = this.readHexChar(4, false, throwOnInvalid);\n      }\n\n      return code;\n    }\n  }, {\n    key: \"readString\",\n    value: function readString(quote) {\n      var out = \"\",\n          chunkStart = ++this.state.pos;\n\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n        }\n\n        var ch = this.input.charCodeAt(this.state.pos);\n        if (ch === quote) break;\n\n        if (ch === 92) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.readEscapedChar(false);\n          chunkStart = this.state.pos;\n        } else if (ch === 8232 || ch === 8233) {\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n        } else if (isNewLine(ch)) {\n          throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n        } else {\n          ++this.state.pos;\n        }\n      }\n\n      out += this.input.slice(chunkStart, this.state.pos++);\n      this.finishToken(125, out);\n    }\n  }, {\n    key: \"readTemplateContinuation\",\n    value: function readTemplateContinuation() {\n      if (!this.match(8)) {\n        this.unexpected(this.state.start, 8);\n      }\n\n      this.state.pos--;\n      this.readTemplateToken();\n    }\n  }, {\n    key: \"readTemplateToken\",\n    value: function readTemplateToken() {\n      var out = \"\",\n          chunkStart = this.state.pos,\n          containsInvalid = false;\n      ++this.state.pos;\n\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(this.state.start + 1, ErrorMessages.UnterminatedTemplate);\n        }\n\n        var ch = this.input.charCodeAt(this.state.pos);\n\n        if (ch === 96) {\n          ++this.state.pos;\n          out += this.input.slice(chunkStart, this.state.pos);\n          this.finishToken(24, containsInvalid ? null : out);\n          return;\n        }\n\n        if (ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n          this.state.pos += 2;\n          out += this.input.slice(chunkStart, this.state.pos);\n          this.finishToken(25, containsInvalid ? null : out);\n          return;\n        }\n\n        if (ch === 92) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          var escaped = this.readEscapedChar(true);\n\n          if (escaped === null) {\n            containsInvalid = true;\n          } else {\n            out += escaped;\n          }\n\n          chunkStart = this.state.pos;\n        } else if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          ++this.state.pos;\n\n          switch (ch) {\n            case 13:\n              if (this.input.charCodeAt(this.state.pos) === 10) {\n                ++this.state.pos;\n              }\n\n            case 10:\n              out += \"\\n\";\n              break;\n\n            default:\n              out += String.fromCharCode(ch);\n              break;\n          }\n\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          chunkStart = this.state.pos;\n        } else {\n          ++this.state.pos;\n        }\n      }\n    }\n  }, {\n    key: \"recordStrictModeErrors\",\n    value: function recordStrictModeErrors(pos, message) {\n      if (this.state.strict && !this.state.strictErrors.has(pos)) {\n        this.raise(pos, message);\n      } else {\n        this.state.strictErrors.set(pos, message);\n      }\n    }\n  }, {\n    key: \"readEscapedChar\",\n    value: function readEscapedChar(inTemplate) {\n      var throwOnInvalid = !inTemplate;\n      var ch = this.input.charCodeAt(++this.state.pos);\n      ++this.state.pos;\n\n      switch (ch) {\n        case 110:\n          return \"\\n\";\n\n        case 114:\n          return \"\\r\";\n\n        case 120:\n          {\n            var code = this.readHexChar(2, false, throwOnInvalid);\n            return code === null ? null : String.fromCharCode(code);\n          }\n\n        case 117:\n          {\n            var _code = this.readCodePoint(throwOnInvalid);\n\n            return _code === null ? null : String.fromCodePoint(_code);\n          }\n\n        case 116:\n          return \"\\t\";\n\n        case 98:\n          return \"\\b\";\n\n        case 118:\n          return \"\\x0B\";\n\n        case 102:\n          return \"\\f\";\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n          this.state.lineStart = this.state.pos;\n          ++this.state.curLine;\n\n        case 8232:\n        case 8233:\n          return \"\";\n\n        case 56:\n        case 57:\n          if (inTemplate) {\n            return null;\n          } else {\n            this.recordStrictModeErrors(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\n          }\n\n        default:\n          if (ch >= 48 && ch <= 55) {\n            var codePos = this.state.pos - 1;\n            var match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\n            var octalStr = match[0];\n            var octal = parseInt(octalStr, 8);\n\n            if (octal > 255) {\n              octalStr = octalStr.slice(0, -1);\n              octal = parseInt(octalStr, 8);\n            }\n\n            this.state.pos += octalStr.length - 1;\n            var next = this.input.charCodeAt(this.state.pos);\n\n            if (octalStr !== \"0\" || next === 56 || next === 57) {\n              if (inTemplate) {\n                return null;\n              } else {\n                this.recordStrictModeErrors(codePos, ErrorMessages.StrictNumericEscape);\n              }\n            }\n\n            return String.fromCharCode(octal);\n          }\n\n          return String.fromCharCode(ch);\n      }\n    }\n  }, {\n    key: \"readHexChar\",\n    value: function readHexChar(len, forceLen, throwOnInvalid) {\n      var codePos = this.state.pos;\n      var n = this.readInt(16, len, forceLen, false);\n\n      if (n === null) {\n        if (throwOnInvalid) {\n          this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\n        } else {\n          this.state.pos = codePos - 1;\n        }\n      }\n\n      return n;\n    }\n  }, {\n    key: \"readWord1\",\n    value: function readWord1(firstCode) {\n      this.state.containsEsc = false;\n      var word = \"\";\n      var start = this.state.pos;\n      var chunkStart = this.state.pos;\n\n      if (firstCode !== undefined) {\n        this.state.pos += firstCode <= 0xffff ? 1 : 2;\n      }\n\n      while (this.state.pos < this.length) {\n        var ch = this.codePointAtPos(this.state.pos);\n\n        if (isIdentifierChar(ch)) {\n          this.state.pos += ch <= 0xffff ? 1 : 2;\n        } else if (ch === 92) {\n          this.state.containsEsc = true;\n          word += this.input.slice(chunkStart, this.state.pos);\n          var escStart = this.state.pos;\n          var identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n          if (this.input.charCodeAt(++this.state.pos) !== 117) {\n            this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n            chunkStart = this.state.pos - 1;\n            continue;\n          }\n\n          ++this.state.pos;\n          var esc = this.readCodePoint(true);\n\n          if (esc !== null) {\n            if (!identifierCheck(esc)) {\n              this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n            }\n\n            word += String.fromCodePoint(esc);\n          }\n\n          chunkStart = this.state.pos;\n        } else {\n          break;\n        }\n      }\n\n      return word + this.input.slice(chunkStart, this.state.pos);\n    }\n  }, {\n    key: \"readWord\",\n    value: function readWord(firstCode) {\n      var word = this.readWord1(firstCode);\n      var type = keywords$1.get(word);\n\n      if (type !== undefined) {\n        this.finishToken(type, tokenLabelName(type));\n      } else {\n        this.finishToken(124, word);\n      }\n    }\n  }, {\n    key: \"checkKeywordEscapes\",\n    value: function checkKeywordEscapes() {\n      var type = this.state.type;\n\n      if (tokenIsKeyword(type) && this.state.containsEsc) {\n        this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, tokenLabelName(type));\n      }\n    }\n  }, {\n    key: \"updateContext\",\n    value: function updateContext(prevType) {}\n  }]);\n\n  return Tokenizer;\n}(ParserError);\n\nvar ClassScope = /*#__PURE__*/_createClass(function ClassScope() {\n  _classCallCheck(this, ClassScope);\n\n  this.privateNames = new Set();\n  this.loneAccessors = new Map();\n  this.undefinedPrivateNames = new Map();\n});\n\nvar ClassScopeHandler = /*#__PURE__*/function () {\n  function ClassScopeHandler(raise) {\n    _classCallCheck(this, ClassScopeHandler);\n\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n  }\n\n  _createClass(ClassScopeHandler, [{\n    key: \"current\",\n    value: function current() {\n      return this.stack[this.stack.length - 1];\n    }\n  }, {\n    key: \"enter\",\n    value: function enter() {\n      this.stack.push(new ClassScope());\n    }\n  }, {\n    key: \"exit\",\n    value: function exit() {\n      var oldClassScope = this.stack.pop();\n      var current = this.current();\n\n      for (var _i2 = 0, _Array$from = Array.from(oldClassScope.undefinedPrivateNames); _i2 < _Array$from.length; _i2++) {\n        var _Array$from$_i = _slicedToArray(_Array$from[_i2], 2),\n            name = _Array$from$_i[0],\n            pos = _Array$from$_i[1];\n\n        if (current) {\n          if (!current.undefinedPrivateNames.has(name)) {\n            current.undefinedPrivateNames.set(name, pos);\n          }\n        } else {\n          this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n        }\n      }\n    }\n  }, {\n    key: \"declarePrivateName\",\n    value: function declarePrivateName(name, elementType, pos) {\n      var _this$current = this.current(),\n          privateNames = _this$current.privateNames,\n          loneAccessors = _this$current.loneAccessors,\n          undefinedPrivateNames = _this$current.undefinedPrivateNames;\n\n      var redefined = privateNames.has(name);\n\n      if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n        var accessor = redefined && loneAccessors.get(name);\n\n        if (accessor) {\n          var oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n          var newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n          var oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n          var newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n          redefined = oldKind === newKind || oldStatic !== newStatic;\n          if (!redefined) loneAccessors.delete(name);\n        } else if (!redefined) {\n          loneAccessors.set(name, elementType);\n        }\n      }\n\n      if (redefined) {\n        this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\n      }\n\n      privateNames.add(name);\n      undefinedPrivateNames.delete(name);\n    }\n  }, {\n    key: \"usePrivateName\",\n    value: function usePrivateName(name, pos) {\n      var classScope;\n\n      var _iterator = _createForOfIteratorHelper(this.stack),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          classScope = _step.value;\n          if (classScope.privateNames.has(name)) return;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (classScope) {\n        classScope.undefinedPrivateNames.set(name, pos);\n      } else {\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }]);\n\n  return ClassScopeHandler;\n}();\n\nvar kExpression = 0,\n    kMaybeArrowParameterDeclaration = 1,\n    kMaybeAsyncArrowParameterDeclaration = 2,\n    kParameterDeclaration = 3;\n\nvar ExpressionScope = /*#__PURE__*/function () {\n  function ExpressionScope() {\n    var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : kExpression;\n\n    _classCallCheck(this, ExpressionScope);\n\n    this.type = void 0;\n    this.type = type;\n  }\n\n  _createClass(ExpressionScope, [{\n    key: \"canBeArrowParameterDeclaration\",\n    value: function canBeArrowParameterDeclaration() {\n      return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n    }\n  }, {\n    key: \"isCertainlyParameterDeclaration\",\n    value: function isCertainlyParameterDeclaration() {\n      return this.type === kParameterDeclaration;\n    }\n  }]);\n\n  return ExpressionScope;\n}();\n\nvar ArrowHeadParsingScope = /*#__PURE__*/function (_ExpressionScope) {\n  _inherits(ArrowHeadParsingScope, _ExpressionScope);\n\n  var _super7 = _createSuper(ArrowHeadParsingScope);\n\n  function ArrowHeadParsingScope(type) {\n    var _this6;\n\n    _classCallCheck(this, ArrowHeadParsingScope);\n\n    _this6 = _super7.call(this, type);\n    _this6.errors = new Map();\n    return _this6;\n  }\n\n  _createClass(ArrowHeadParsingScope, [{\n    key: \"recordDeclarationError\",\n    value: function recordDeclarationError(pos, template) {\n      this.errors.set(pos, template);\n    }\n  }, {\n    key: \"clearDeclarationError\",\n    value: function clearDeclarationError(pos) {\n      this.errors.delete(pos);\n    }\n  }, {\n    key: \"iterateErrors\",\n    value: function iterateErrors(iterator) {\n      this.errors.forEach(iterator);\n    }\n  }]);\n\n  return ArrowHeadParsingScope;\n}(ExpressionScope);\n\nvar ExpressionScopeHandler = /*#__PURE__*/function () {\n  function ExpressionScopeHandler(raise) {\n    _classCallCheck(this, ExpressionScopeHandler);\n\n    this.stack = [new ExpressionScope()];\n    this.raise = raise;\n  }\n\n  _createClass(ExpressionScopeHandler, [{\n    key: \"enter\",\n    value: function enter(scope) {\n      this.stack.push(scope);\n    }\n  }, {\n    key: \"exit\",\n    value: function exit() {\n      this.stack.pop();\n    }\n  }, {\n    key: \"recordParameterInitializerError\",\n    value: function recordParameterInitializerError(pos, template) {\n      var stack = this.stack;\n      var i = stack.length - 1;\n      var scope = stack[i];\n\n      while (!scope.isCertainlyParameterDeclaration()) {\n        if (scope.canBeArrowParameterDeclaration()) {\n          scope.recordDeclarationError(pos, template);\n        } else {\n          return;\n        }\n\n        scope = stack[--i];\n      }\n\n      this.raise(pos, template);\n    }\n  }, {\n    key: \"recordParenthesizedIdentifierError\",\n    value: function recordParenthesizedIdentifierError(pos, template) {\n      var stack = this.stack;\n      var scope = stack[stack.length - 1];\n\n      if (scope.isCertainlyParameterDeclaration()) {\n        this.raise(pos, template);\n      } else if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(pos, template);\n      } else {\n        return;\n      }\n    }\n  }, {\n    key: \"recordAsyncArrowParametersError\",\n    value: function recordAsyncArrowParametersError(pos, template) {\n      var stack = this.stack;\n      var i = stack.length - 1;\n      var scope = stack[i];\n\n      while (scope.canBeArrowParameterDeclaration()) {\n        if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n          scope.recordDeclarationError(pos, template);\n        }\n\n        scope = stack[--i];\n      }\n    }\n  }, {\n    key: \"validateAsPattern\",\n    value: function validateAsPattern() {\n      var _this7 = this;\n\n      var stack = this.stack;\n      var currentScope = stack[stack.length - 1];\n      if (!currentScope.canBeArrowParameterDeclaration()) return;\n      currentScope.iterateErrors(function (template, pos) {\n        _this7.raise(pos, template);\n\n        var i = stack.length - 2;\n        var scope = stack[i];\n\n        while (scope.canBeArrowParameterDeclaration()) {\n          scope.clearDeclarationError(pos);\n          scope = stack[--i];\n        }\n      });\n    }\n  }]);\n\n  return ExpressionScopeHandler;\n}();\n\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\n\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\n\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\n\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nvar PARAM = 0,\n    PARAM_YIELD = 1,\n    PARAM_AWAIT = 2,\n    PARAM_RETURN = 4,\n    PARAM_IN = 8;\n\nvar ProductionParameterHandler = /*#__PURE__*/function () {\n  function ProductionParameterHandler() {\n    _classCallCheck(this, ProductionParameterHandler);\n\n    this.stacks = [];\n  }\n\n  _createClass(ProductionParameterHandler, [{\n    key: \"enter\",\n    value: function enter(flags) {\n      this.stacks.push(flags);\n    }\n  }, {\n    key: \"exit\",\n    value: function exit() {\n      this.stacks.pop();\n    }\n  }, {\n    key: \"currentFlags\",\n    value: function currentFlags() {\n      return this.stacks[this.stacks.length - 1];\n    }\n  }, {\n    key: \"hasAwait\",\n    get: function get() {\n      return (this.currentFlags() & PARAM_AWAIT) > 0;\n    }\n  }, {\n    key: \"hasYield\",\n    get: function get() {\n      return (this.currentFlags() & PARAM_YIELD) > 0;\n    }\n  }, {\n    key: \"hasReturn\",\n    get: function get() {\n      return (this.currentFlags() & PARAM_RETURN) > 0;\n    }\n  }, {\n    key: \"hasIn\",\n    get: function get() {\n      return (this.currentFlags() & PARAM_IN) > 0;\n    }\n  }]);\n\n  return ProductionParameterHandler;\n}();\n\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nvar UtilParser = /*#__PURE__*/function (_Tokenizer) {\n  _inherits(UtilParser, _Tokenizer);\n\n  var _super8 = _createSuper(UtilParser);\n\n  function UtilParser() {\n    _classCallCheck(this, UtilParser);\n\n    return _super8.apply(this, arguments);\n  }\n\n  _createClass(UtilParser, [{\n    key: \"addExtra\",\n    value: function addExtra(node, key, val) {\n      if (!node) return;\n      var extra = node.extra = node.extra || {};\n      extra[key] = val;\n    }\n  }, {\n    key: \"isContextual\",\n    value: function isContextual(token) {\n      return this.state.type === token && !this.state.containsEsc;\n    }\n  }, {\n    key: \"isUnparsedContextual\",\n    value: function isUnparsedContextual(nameStart, name) {\n      var nameEnd = nameStart + name.length;\n\n      if (this.input.slice(nameStart, nameEnd) === name) {\n        var nextCh = this.input.charCodeAt(nameEnd);\n        return !(isIdentifierChar(nextCh) || (nextCh & 0xfc00) === 0xd800);\n      }\n\n      return false;\n    }\n  }, {\n    key: \"isLookaheadContextual\",\n    value: function isLookaheadContextual(name) {\n      var next = this.nextTokenStart();\n      return this.isUnparsedContextual(next, name);\n    }\n  }, {\n    key: \"eatContextual\",\n    value: function eatContextual(token) {\n      if (this.isContextual(token)) {\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"expectContextual\",\n    value: function expectContextual(token, template) {\n      if (!this.eatContextual(token)) this.unexpected(null, template);\n    }\n  }, {\n    key: \"canInsertSemicolon\",\n    value: function canInsertSemicolon() {\n      return this.match(131) || this.match(8) || this.hasPrecedingLineBreak();\n    }\n  }, {\n    key: \"hasPrecedingLineBreak\",\n    value: function hasPrecedingLineBreak() {\n      return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n    }\n  }, {\n    key: \"hasFollowingLineBreak\",\n    value: function hasFollowingLineBreak() {\n      skipWhiteSpaceToLineBreak.lastIndex = this.state.end;\n      return skipWhiteSpaceToLineBreak.test(this.input);\n    }\n  }, {\n    key: \"isLineTerminator\",\n    value: function isLineTerminator() {\n      return this.eat(13) || this.canInsertSemicolon();\n    }\n  }, {\n    key: \"semicolon\",\n    value: function semicolon() {\n      var allowAsi = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      if (allowAsi ? this.isLineTerminator() : this.eat(13)) return;\n      this.raise(this.state.lastTokEnd, ErrorMessages.MissingSemicolon);\n    }\n  }, {\n    key: \"expect\",\n    value: function expect(type, pos) {\n      this.eat(type) || this.unexpected(pos, type);\n    }\n  }, {\n    key: \"assertNoSpace\",\n    value: function assertNoSpace() {\n      var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"Unexpected space.\";\n\n      if (this.state.start > this.state.lastTokEnd) {\n        this.raise(this.state.lastTokEnd, {\n          code: ErrorCodes.SyntaxError,\n          reasonCode: \"UnexpectedSpace\",\n          template: message\n        });\n      }\n    }\n  }, {\n    key: \"unexpected\",\n    value: function unexpected(pos) {\n      var messageOrType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedToken\",\n        template: \"Unexpected token\"\n      };\n\n      if (isTokenType(messageOrType)) {\n        messageOrType = {\n          code: ErrorCodes.SyntaxError,\n          reasonCode: \"UnexpectedToken\",\n          template: \"Unexpected token, expected \\\"\".concat(tokenLabelName(messageOrType), \"\\\"\")\n        };\n      }\n\n      throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n    }\n  }, {\n    key: \"getPluginNamesFromConfigs\",\n    value: function getPluginNamesFromConfigs(pluginConfigs) {\n      return pluginConfigs.map(function (c) {\n        if (typeof c === \"string\") {\n          return c;\n        } else {\n          return c[0];\n        }\n      });\n    }\n  }, {\n    key: \"expectPlugin\",\n    value: function expectPlugin(pluginConfig, pos) {\n      if (!this.hasPlugin(pluginConfig)) {\n        throw this.raiseWithData(pos != null ? pos : this.state.start, {\n          missingPlugin: this.getPluginNamesFromConfigs([pluginConfig])\n        }, \"This experimental syntax requires enabling the parser plugin: \".concat(JSON.stringify(pluginConfig), \".\"));\n      }\n\n      return true;\n    }\n  }, {\n    key: \"expectOnePlugin\",\n    value: function expectOnePlugin(pluginConfigs, pos) {\n      var _this8 = this;\n\n      if (!pluginConfigs.some(function (c) {\n        return _this8.hasPlugin(c);\n      })) {\n        throw this.raiseWithData(pos != null ? pos : this.state.start, {\n          missingPlugin: this.getPluginNamesFromConfigs(pluginConfigs)\n        }, \"This experimental syntax requires enabling one of the following parser plugin(s): \".concat(pluginConfigs.map(function (c) {\n          return JSON.stringify(c);\n        }).join(\", \"), \".\"));\n      }\n    }\n  }, {\n    key: \"tryParse\",\n    value: function tryParse(fn) {\n      var oldState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state.clone();\n      var abortSignal = {\n        node: null\n      };\n\n      try {\n        var node = fn(function () {\n          var node = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n          abortSignal.node = node;\n          throw abortSignal;\n        });\n\n        if (this.state.errors.length > oldState.errors.length) {\n          var failState = this.state;\n          this.state = oldState;\n          this.state.tokensLength = failState.tokensLength;\n          return {\n            node: node,\n            error: failState.errors[oldState.errors.length],\n            thrown: false,\n            aborted: false,\n            failState: failState\n          };\n        }\n\n        return {\n          node: node,\n          error: null,\n          thrown: false,\n          aborted: false,\n          failState: null\n        };\n      } catch (error) {\n        var _failState = this.state;\n        this.state = oldState;\n\n        if (error instanceof SyntaxError) {\n          return {\n            node: null,\n            error: error,\n            thrown: true,\n            aborted: false,\n            failState: _failState\n          };\n        }\n\n        if (error === abortSignal) {\n          return {\n            node: abortSignal.node,\n            error: null,\n            thrown: false,\n            aborted: true,\n            failState: _failState\n          };\n        }\n\n        throw error;\n      }\n    }\n  }, {\n    key: \"checkExpressionErrors\",\n    value: function checkExpressionErrors(refExpressionErrors, andThrow) {\n      if (!refExpressionErrors) return false;\n      var shorthandAssign = refExpressionErrors.shorthandAssign,\n          doubleProto = refExpressionErrors.doubleProto,\n          optionalParameters = refExpressionErrors.optionalParameters;\n      var hasErrors = shorthandAssign + doubleProto + optionalParameters > -3;\n\n      if (!andThrow) {\n        return hasErrors;\n      } else if (hasErrors) {\n        if (shorthandAssign >= 0) {\n          this.raise(shorthandAssign, ErrorMessages.InvalidCoverInitializedName);\n        }\n\n        if (doubleProto >= 0) {\n          this.raise(doubleProto, ErrorMessages.DuplicateProto);\n        }\n\n        if (optionalParameters >= 0) {\n          this.unexpected(optionalParameters);\n        }\n      }\n    }\n  }, {\n    key: \"isLiteralPropertyName\",\n    value: function isLiteralPropertyName() {\n      return tokenIsLiteralPropertyName(this.state.type);\n    }\n  }, {\n    key: \"isPrivateName\",\n    value: function isPrivateName(node) {\n      return node.type === \"PrivateName\";\n    }\n  }, {\n    key: \"getPrivateNameSV\",\n    value: function getPrivateNameSV(node) {\n      return node.id.name;\n    }\n  }, {\n    key: \"hasPropertyAsPrivateName\",\n    value: function hasPropertyAsPrivateName(node) {\n      return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n    }\n  }, {\n    key: \"isOptionalChain\",\n    value: function isOptionalChain(node) {\n      return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\n    }\n  }, {\n    key: \"isObjectProperty\",\n    value: function isObjectProperty(node) {\n      return node.type === \"ObjectProperty\";\n    }\n  }, {\n    key: \"isObjectMethod\",\n    value: function isObjectMethod(node) {\n      return node.type === \"ObjectMethod\";\n    }\n  }, {\n    key: \"initializeScopes\",\n    value: function initializeScopes() {\n      var _this9 = this;\n\n      var inModule = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.options.sourceType === \"module\";\n      var oldLabels = this.state.labels;\n      this.state.labels = [];\n      var oldExportedIdentifiers = this.exportedIdentifiers;\n      this.exportedIdentifiers = new Set();\n      var oldInModule = this.inModule;\n      this.inModule = inModule;\n      var oldScope = this.scope;\n      var ScopeHandler = this.getScopeHandler();\n      this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n      var oldProdParam = this.prodParam;\n      this.prodParam = new ProductionParameterHandler();\n      var oldClassScope = this.classScope;\n      this.classScope = new ClassScopeHandler(this.raise.bind(this));\n      var oldExpressionScope = this.expressionScope;\n      this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n      return function () {\n        _this9.state.labels = oldLabels;\n        _this9.exportedIdentifiers = oldExportedIdentifiers;\n        _this9.inModule = oldInModule;\n        _this9.scope = oldScope;\n        _this9.prodParam = oldProdParam;\n        _this9.classScope = oldClassScope;\n        _this9.expressionScope = oldExpressionScope;\n      };\n    }\n  }, {\n    key: \"enterInitialScopes\",\n    value: function enterInitialScopes() {\n      var paramFlags = PARAM;\n\n      if (this.inModule) {\n        paramFlags |= PARAM_AWAIT;\n      }\n\n      this.scope.enter(SCOPE_PROGRAM);\n      this.prodParam.enter(paramFlags);\n    }\n  }]);\n\n  return UtilParser;\n}(Tokenizer);\n\nvar ExpressionErrors = /*#__PURE__*/_createClass(function ExpressionErrors() {\n  _classCallCheck(this, ExpressionErrors);\n\n  this.shorthandAssign = -1;\n  this.doubleProto = -1;\n  this.optionalParameters = -1;\n});\n\nvar Node = /*#__PURE__*/_createClass(function Node(parser, pos, loc) {\n  _classCallCheck(this, Node);\n\n  this.type = \"\";\n  this.start = pos;\n  this.end = 0;\n  this.loc = new SourceLocation(loc);\n  if (parser != null && parser.options.ranges) this.range = [pos, 0];\n  if (parser != null && parser.filename) this.loc.filename = parser.filename;\n});\n\nvar NodePrototype = Node.prototype;\n{\n  NodePrototype.__clone = function () {\n    var newNode = new Node();\n    var keys = Object.keys(this);\n\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  };\n}\n\nfunction clonePlaceholder(node) {\n  return cloneIdentifier(node);\n}\n\nfunction cloneIdentifier(node) {\n  var type = node.type,\n      start = node.start,\n      end = node.end,\n      loc = node.loc,\n      range = node.range,\n      extra = node.extra,\n      name = node.name;\n  var cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.name = name;\n\n  if (type === \"Placeholder\") {\n    cloned.expectedNode = node.expectedNode;\n  }\n\n  return cloned;\n}\n\nfunction cloneStringLiteral(node) {\n  var type = node.type,\n      start = node.start,\n      end = node.end,\n      loc = node.loc,\n      range = node.range,\n      extra = node.extra;\n\n  if (type === \"Placeholder\") {\n    return clonePlaceholder(node);\n  }\n\n  var cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n\n  if (node.raw !== undefined) {\n    cloned.raw = node.raw;\n  } else {\n    cloned.extra = extra;\n  }\n\n  cloned.value = node.value;\n  return cloned;\n}\n\nvar NodeUtils = /*#__PURE__*/function (_UtilParser) {\n  _inherits(NodeUtils, _UtilParser);\n\n  var _super9 = _createSuper(NodeUtils);\n\n  function NodeUtils() {\n    _classCallCheck(this, NodeUtils);\n\n    return _super9.apply(this, arguments);\n  }\n\n  _createClass(NodeUtils, [{\n    key: \"startNode\",\n    value: function startNode() {\n      return new Node(this, this.state.start, this.state.startLoc);\n    }\n  }, {\n    key: \"startNodeAt\",\n    value: function startNodeAt(pos, loc) {\n      return new Node(this, pos, loc);\n    }\n  }, {\n    key: \"startNodeAtNode\",\n    value: function startNodeAtNode(type) {\n      return this.startNodeAt(type.start, type.loc.start);\n    }\n  }, {\n    key: \"finishNode\",\n    value: function finishNode(node, type) {\n      return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n    }\n  }, {\n    key: \"finishNodeAt\",\n    value: function finishNodeAt(node, type, pos, loc) {\n      node.type = type;\n      node.end = pos;\n      node.loc.end = loc;\n      if (this.options.ranges) node.range[1] = pos;\n      if (this.options.attachComment) this.processComment(node);\n      return node;\n    }\n  }, {\n    key: \"resetStartLocation\",\n    value: function resetStartLocation(node, start, startLoc) {\n      node.start = start;\n      node.loc.start = startLoc;\n      if (this.options.ranges) node.range[0] = start;\n    }\n  }, {\n    key: \"resetEndLocation\",\n    value: function resetEndLocation(node) {\n      var end = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state.lastTokEnd;\n      var endLoc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.state.lastTokEndLoc;\n      node.end = end;\n      node.loc.end = endLoc;\n      if (this.options.ranges) node.range[1] = end;\n    }\n  }, {\n    key: \"resetStartLocationFromNode\",\n    value: function resetStartLocationFromNode(node, locationNode) {\n      this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n    }\n  }]);\n\n  return NodeUtils;\n}(UtilParser);\n\nvar reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nvar FlowErrors = makeErrorTemplates({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  AssignReservedType: \"Cannot overwrite reserved type %0.\",\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired: \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor: \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst: \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: \"Unexpected reserved type %0.\",\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead.\",\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\"\n}, ErrorCodes.SyntaxError, \"flow\");\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(type) {\n  return tokenIsKeywordOrIdentifier(type) && type !== 93;\n}\n\nvar exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  var list1 = [];\n  var list2 = [];\n\n  for (var i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nvar FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\n\nvar flow = function flow(superClass) {\n  return /*#__PURE__*/function (_superClass2) {\n    _inherits(_class2, _superClass2);\n\n    var _super10 = _createSuper(_class2);\n\n    function _class2() {\n      var _this10;\n\n      _classCallCheck(this, _class2);\n\n      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        args[_key9] = arguments[_key9];\n      }\n\n      _this10 = _super10.call.apply(_super10, [this].concat(args));\n      _this10.flowPragma = undefined;\n      return _this10;\n    }\n\n    _createClass(_class2, [{\n      key: \"getScopeHandler\",\n      value: function getScopeHandler() {\n        return FlowScopeHandler;\n      }\n    }, {\n      key: \"shouldParseTypes\",\n      value: function shouldParseTypes() {\n        return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n      }\n    }, {\n      key: \"shouldParseEnums\",\n      value: function shouldParseEnums() {\n        return !!this.getPluginOption(\"flow\", \"enums\");\n      }\n    }, {\n      key: \"finishToken\",\n      value: function finishToken(type, val) {\n        if (type !== 125 && type !== 13 && type !== 28) {\n          if (this.flowPragma === undefined) {\n            this.flowPragma = null;\n          }\n        }\n\n        return _get(_getPrototypeOf(_class2.prototype), \"finishToken\", this).call(this, type, val);\n      }\n    }, {\n      key: \"addComment\",\n      value: function addComment(comment) {\n        if (this.flowPragma === undefined) {\n          var matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n          if (!matches) ;else if (matches[1] === \"flow\") {\n            this.flowPragma = \"flow\";\n          } else if (matches[1] === \"noflow\") {\n            this.flowPragma = \"noflow\";\n          } else {\n            throw new Error(\"Unexpected flow pragma\");\n          }\n        }\n\n        return _get(_getPrototypeOf(_class2.prototype), \"addComment\", this).call(this, comment);\n      }\n    }, {\n      key: \"flowParseTypeInitialiser\",\n      value: function flowParseTypeInitialiser(tok) {\n        var oldInType = this.state.inType;\n        this.state.inType = true;\n        this.expect(tok || 14);\n        var type = this.flowParseType();\n        this.state.inType = oldInType;\n        return type;\n      }\n    }, {\n      key: \"flowParsePredicate\",\n      value: function flowParsePredicate() {\n        var node = this.startNode();\n        var moduloPos = this.state.start;\n        this.next();\n        this.expectContextual(103);\n\n        if (this.state.lastTokStart > moduloPos + 1) {\n          this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n        }\n\n        if (this.eat(10)) {\n          node.value = this.parseExpression();\n          this.expect(11);\n          return this.finishNode(node, \"DeclaredPredicate\");\n        } else {\n          return this.finishNode(node, \"InferredPredicate\");\n        }\n      }\n    }, {\n      key: \"flowParseTypeAndPredicateInitialiser\",\n      value: function flowParseTypeAndPredicateInitialiser() {\n        var oldInType = this.state.inType;\n        this.state.inType = true;\n        this.expect(14);\n        var type = null;\n        var predicate = null;\n\n        if (this.match(50)) {\n          this.state.inType = oldInType;\n          predicate = this.flowParsePredicate();\n        } else {\n          type = this.flowParseType();\n          this.state.inType = oldInType;\n\n          if (this.match(50)) {\n            predicate = this.flowParsePredicate();\n          }\n        }\n\n        return [type, predicate];\n      }\n    }, {\n      key: \"flowParseDeclareClass\",\n      value: function flowParseDeclareClass(node) {\n        this.next();\n        this.flowParseInterfaceish(node, true);\n        return this.finishNode(node, \"DeclareClass\");\n      }\n    }, {\n      key: \"flowParseDeclareFunction\",\n      value: function flowParseDeclareFunction(node) {\n        this.next();\n        var id = node.id = this.parseIdentifier();\n        var typeNode = this.startNode();\n        var typeContainer = this.startNode();\n\n        if (this.match(45)) {\n          typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n        } else {\n          typeNode.typeParameters = null;\n        }\n\n        this.expect(10);\n        var tmp = this.flowParseFunctionTypeParams();\n        typeNode.params = tmp.params;\n        typeNode.rest = tmp.rest;\n        typeNode.this = tmp._this;\n        this.expect(11);\n\n        var _this$flowParseTypeAn = this.flowParseTypeAndPredicateInitialiser();\n\n        var _this$flowParseTypeAn2 = _slicedToArray(_this$flowParseTypeAn, 2);\n\n        typeNode.returnType = _this$flowParseTypeAn2[0];\n        node.predicate = _this$flowParseTypeAn2[1];\n        typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n        id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n        this.resetEndLocation(id);\n        this.semicolon();\n        this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n        return this.finishNode(node, \"DeclareFunction\");\n      }\n    }, {\n      key: \"flowParseDeclare\",\n      value: function flowParseDeclare(node, insideModule) {\n        if (this.match(76)) {\n          return this.flowParseDeclareClass(node);\n        } else if (this.match(64)) {\n          return this.flowParseDeclareFunction(node);\n        } else if (this.match(70)) {\n          return this.flowParseDeclareVariable(node);\n        } else if (this.eatContextual(119)) {\n          if (this.match(16)) {\n            return this.flowParseDeclareModuleExports(node);\n          } else {\n            if (insideModule) {\n              this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n            }\n\n            return this.flowParseDeclareModule(node);\n          }\n        } else if (this.isContextual(122)) {\n          return this.flowParseDeclareTypeAlias(node);\n        } else if (this.isContextual(123)) {\n          return this.flowParseDeclareOpaqueType(node);\n        } else if (this.isContextual(121)) {\n          return this.flowParseDeclareInterface(node);\n        } else if (this.match(78)) {\n          return this.flowParseDeclareExportDeclaration(node, insideModule);\n        } else {\n          throw this.unexpected();\n        }\n      }\n    }, {\n      key: \"flowParseDeclareVariable\",\n      value: function flowParseDeclareVariable(node) {\n        this.next();\n        node.id = this.flowParseTypeAnnotatableIdentifier(true);\n        this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n        this.semicolon();\n        return this.finishNode(node, \"DeclareVariable\");\n      }\n    }, {\n      key: \"flowParseDeclareModule\",\n      value: function flowParseDeclareModule(node) {\n        var _this11 = this;\n\n        this.scope.enter(SCOPE_OTHER);\n\n        if (this.match(125)) {\n          node.id = this.parseExprAtom();\n        } else {\n          node.id = this.parseIdentifier();\n        }\n\n        var bodyNode = node.body = this.startNode();\n        var body = bodyNode.body = [];\n        this.expect(5);\n\n        while (!this.match(8)) {\n          var _bodyNode = this.startNode();\n\n          if (this.match(79)) {\n            this.next();\n\n            if (!this.isContextual(122) && !this.match(83)) {\n              this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\n            }\n\n            this.parseImport(_bodyNode);\n          } else {\n            this.expectContextual(117, FlowErrors.UnsupportedStatementInDeclareModule);\n            _bodyNode = this.flowParseDeclare(_bodyNode, true);\n          }\n\n          body.push(_bodyNode);\n        }\n\n        this.scope.exit();\n        this.expect(8);\n        this.finishNode(bodyNode, \"BlockStatement\");\n        var kind = null;\n        var hasModuleExport = false;\n        body.forEach(function (bodyElement) {\n          if (isEsModuleType(bodyElement)) {\n            if (kind === \"CommonJS\") {\n              _this11.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n            }\n\n            kind = \"ES\";\n          } else if (bodyElement.type === \"DeclareModuleExports\") {\n            if (hasModuleExport) {\n              _this11.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\n            }\n\n            if (kind === \"ES\") {\n              _this11.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n            }\n\n            kind = \"CommonJS\";\n            hasModuleExport = true;\n          }\n        });\n        node.kind = kind || \"CommonJS\";\n        return this.finishNode(node, \"DeclareModule\");\n      }\n    }, {\n      key: \"flowParseDeclareExportDeclaration\",\n      value: function flowParseDeclareExportDeclaration(node, insideModule) {\n        this.expect(78);\n\n        if (this.eat(61)) {\n          if (this.match(64) || this.match(76)) {\n            node.declaration = this.flowParseDeclare(this.startNode());\n          } else {\n            node.declaration = this.flowParseType();\n            this.semicolon();\n          }\n\n          node.default = true;\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else {\n          if (this.match(71) || this.isLet() || (this.isContextual(122) || this.isContextual(121)) && !insideModule) {\n            var label = this.state.value;\n            var suggestion = exportSuggestions[label];\n            throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\n          }\n\n          if (this.match(70) || this.match(64) || this.match(76) || this.isContextual(123)) {\n            node.declaration = this.flowParseDeclare(this.startNode());\n            node.default = false;\n            return this.finishNode(node, \"DeclareExportDeclaration\");\n          } else if (this.match(51) || this.match(5) || this.isContextual(121) || this.isContextual(122) || this.isContextual(123)) {\n            node = this.parseExport(node);\n\n            if (node.type === \"ExportNamedDeclaration\") {\n              node.type = \"ExportDeclaration\";\n              node.default = false;\n              delete node.exportKind;\n            }\n\n            node.type = \"Declare\" + node.type;\n            return node;\n          }\n        }\n\n        throw this.unexpected();\n      }\n    }, {\n      key: \"flowParseDeclareModuleExports\",\n      value: function flowParseDeclareModuleExports(node) {\n        this.next();\n        this.expectContextual(104);\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n        this.semicolon();\n        return this.finishNode(node, \"DeclareModuleExports\");\n      }\n    }, {\n      key: \"flowParseDeclareTypeAlias\",\n      value: function flowParseDeclareTypeAlias(node) {\n        this.next();\n        this.flowParseTypeAlias(node);\n        node.type = \"DeclareTypeAlias\";\n        return node;\n      }\n    }, {\n      key: \"flowParseDeclareOpaqueType\",\n      value: function flowParseDeclareOpaqueType(node) {\n        this.next();\n        this.flowParseOpaqueType(node, true);\n        node.type = \"DeclareOpaqueType\";\n        return node;\n      }\n    }, {\n      key: \"flowParseDeclareInterface\",\n      value: function flowParseDeclareInterface(node) {\n        this.next();\n        this.flowParseInterfaceish(node);\n        return this.finishNode(node, \"DeclareInterface\");\n      }\n    }, {\n      key: \"flowParseInterfaceish\",\n      value: function flowParseInterfaceish(node) {\n        var isClass = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n        this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\n\n        if (this.match(45)) {\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n        } else {\n          node.typeParameters = null;\n        }\n\n        node.extends = [];\n        node.implements = [];\n        node.mixins = [];\n\n        if (this.eat(77)) {\n          do {\n            node.extends.push(this.flowParseInterfaceExtends());\n          } while (!isClass && this.eat(12));\n        }\n\n        if (this.isContextual(110)) {\n          this.next();\n\n          do {\n            node.mixins.push(this.flowParseInterfaceExtends());\n          } while (this.eat(12));\n        }\n\n        if (this.isContextual(106)) {\n          this.next();\n\n          do {\n            node.implements.push(this.flowParseInterfaceExtends());\n          } while (this.eat(12));\n        }\n\n        node.body = this.flowParseObjectType({\n          allowStatic: isClass,\n          allowExact: false,\n          allowSpread: false,\n          allowProto: isClass,\n          allowInexact: false\n        });\n      }\n    }, {\n      key: \"flowParseInterfaceExtends\",\n      value: function flowParseInterfaceExtends() {\n        var node = this.startNode();\n        node.id = this.flowParseQualifiedTypeIdentifier();\n\n        if (this.match(45)) {\n          node.typeParameters = this.flowParseTypeParameterInstantiation();\n        } else {\n          node.typeParameters = null;\n        }\n\n        return this.finishNode(node, \"InterfaceExtends\");\n      }\n    }, {\n      key: \"flowParseInterface\",\n      value: function flowParseInterface(node) {\n        this.flowParseInterfaceish(node);\n        return this.finishNode(node, \"InterfaceDeclaration\");\n      }\n    }, {\n      key: \"checkNotUnderscore\",\n      value: function checkNotUnderscore(word) {\n        if (word === \"_\") {\n          this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n        }\n      }\n    }, {\n      key: \"checkReservedType\",\n      value: function checkReservedType(word, startLoc, declaration) {\n        if (!reservedTypes.has(word)) return;\n        this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\n      }\n    }, {\n      key: \"flowParseRestrictedIdentifier\",\n      value: function flowParseRestrictedIdentifier(liberal, declaration) {\n        this.checkReservedType(this.state.value, this.state.start, declaration);\n        return this.parseIdentifier(liberal);\n      }\n    }, {\n      key: \"flowParseTypeAlias\",\n      value: function flowParseTypeAlias(node) {\n        node.id = this.flowParseRestrictedIdentifier(false, true);\n        this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n        if (this.match(45)) {\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n        } else {\n          node.typeParameters = null;\n        }\n\n        node.right = this.flowParseTypeInitialiser(29);\n        this.semicolon();\n        return this.finishNode(node, \"TypeAlias\");\n      }\n    }, {\n      key: \"flowParseOpaqueType\",\n      value: function flowParseOpaqueType(node, declare) {\n        this.expectContextual(122);\n        node.id = this.flowParseRestrictedIdentifier(true, true);\n        this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n        if (this.match(45)) {\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n        } else {\n          node.typeParameters = null;\n        }\n\n        node.supertype = null;\n\n        if (this.match(14)) {\n          node.supertype = this.flowParseTypeInitialiser(14);\n        }\n\n        node.impltype = null;\n\n        if (!declare) {\n          node.impltype = this.flowParseTypeInitialiser(29);\n        }\n\n        this.semicolon();\n        return this.finishNode(node, \"OpaqueType\");\n      }\n    }, {\n      key: \"flowParseTypeParameter\",\n      value: function flowParseTypeParameter() {\n        var requireDefault = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n        var nodeStart = this.state.start;\n        var node = this.startNode();\n        var variance = this.flowParseVariance();\n        var ident = this.flowParseTypeAnnotatableIdentifier();\n        node.name = ident.name;\n        node.variance = variance;\n        node.bound = ident.typeAnnotation;\n\n        if (this.match(29)) {\n          this.eat(29);\n          node.default = this.flowParseType();\n        } else {\n          if (requireDefault) {\n            this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n          }\n        }\n\n        return this.finishNode(node, \"TypeParameter\");\n      }\n    }, {\n      key: \"flowParseTypeParameterDeclaration\",\n      value: function flowParseTypeParameterDeclaration() {\n        var oldInType = this.state.inType;\n        var node = this.startNode();\n        node.params = [];\n        this.state.inType = true;\n\n        if (this.match(45) || this.match(134)) {\n          this.next();\n        } else {\n          this.unexpected();\n        }\n\n        var defaultRequired = false;\n\n        do {\n          var typeParameter = this.flowParseTypeParameter(defaultRequired);\n          node.params.push(typeParameter);\n\n          if (typeParameter.default) {\n            defaultRequired = true;\n          }\n\n          if (!this.match(46)) {\n            this.expect(12);\n          }\n        } while (!this.match(46));\n\n        this.expect(46);\n        this.state.inType = oldInType;\n        return this.finishNode(node, \"TypeParameterDeclaration\");\n      }\n    }, {\n      key: \"flowParseTypeParameterInstantiation\",\n      value: function flowParseTypeParameterInstantiation() {\n        var node = this.startNode();\n        var oldInType = this.state.inType;\n        node.params = [];\n        this.state.inType = true;\n        this.expect(45);\n        var oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = false;\n\n        while (!this.match(46)) {\n          node.params.push(this.flowParseType());\n\n          if (!this.match(46)) {\n            this.expect(12);\n          }\n        }\n\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        this.expect(46);\n        this.state.inType = oldInType;\n        return this.finishNode(node, \"TypeParameterInstantiation\");\n      }\n    }, {\n      key: \"flowParseTypeParameterInstantiationCallOrNew\",\n      value: function flowParseTypeParameterInstantiationCallOrNew() {\n        var node = this.startNode();\n        var oldInType = this.state.inType;\n        node.params = [];\n        this.state.inType = true;\n        this.expect(45);\n\n        while (!this.match(46)) {\n          node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n          if (!this.match(46)) {\n            this.expect(12);\n          }\n        }\n\n        this.expect(46);\n        this.state.inType = oldInType;\n        return this.finishNode(node, \"TypeParameterInstantiation\");\n      }\n    }, {\n      key: \"flowParseInterfaceType\",\n      value: function flowParseInterfaceType() {\n        var node = this.startNode();\n        this.expectContextual(121);\n        node.extends = [];\n\n        if (this.eat(77)) {\n          do {\n            node.extends.push(this.flowParseInterfaceExtends());\n          } while (this.eat(12));\n        }\n\n        node.body = this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: false,\n          allowSpread: false,\n          allowProto: false,\n          allowInexact: false\n        });\n        return this.finishNode(node, \"InterfaceTypeAnnotation\");\n      }\n    }, {\n      key: \"flowParseObjectPropertyKey\",\n      value: function flowParseObjectPropertyKey() {\n        return this.match(126) || this.match(125) ? this.parseExprAtom() : this.parseIdentifier(true);\n      }\n    }, {\n      key: \"flowParseObjectTypeIndexer\",\n      value: function flowParseObjectTypeIndexer(node, isStatic, variance) {\n        node.static = isStatic;\n\n        if (this.lookahead().type === 14) {\n          node.id = this.flowParseObjectPropertyKey();\n          node.key = this.flowParseTypeInitialiser();\n        } else {\n          node.id = null;\n          node.key = this.flowParseType();\n        }\n\n        this.expect(3);\n        node.value = this.flowParseTypeInitialiser();\n        node.variance = variance;\n        return this.finishNode(node, \"ObjectTypeIndexer\");\n      }\n    }, {\n      key: \"flowParseObjectTypeInternalSlot\",\n      value: function flowParseObjectTypeInternalSlot(node, isStatic) {\n        node.static = isStatic;\n        node.id = this.flowParseObjectPropertyKey();\n        this.expect(3);\n        this.expect(3);\n\n        if (this.match(45) || this.match(10)) {\n          node.method = true;\n          node.optional = false;\n          node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n        } else {\n          node.method = false;\n\n          if (this.eat(17)) {\n            node.optional = true;\n          }\n\n          node.value = this.flowParseTypeInitialiser();\n        }\n\n        return this.finishNode(node, \"ObjectTypeInternalSlot\");\n      }\n    }, {\n      key: \"flowParseObjectTypeMethodish\",\n      value: function flowParseObjectTypeMethodish(node) {\n        node.params = [];\n        node.rest = null;\n        node.typeParameters = null;\n        node.this = null;\n\n        if (this.match(45)) {\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n        }\n\n        this.expect(10);\n\n        if (this.match(74)) {\n          node.this = this.flowParseFunctionTypeParam(true);\n          node.this.name = null;\n\n          if (!this.match(11)) {\n            this.expect(12);\n          }\n        }\n\n        while (!this.match(11) && !this.match(21)) {\n          node.params.push(this.flowParseFunctionTypeParam(false));\n\n          if (!this.match(11)) {\n            this.expect(12);\n          }\n        }\n\n        if (this.eat(21)) {\n          node.rest = this.flowParseFunctionTypeParam(false);\n        }\n\n        this.expect(11);\n        node.returnType = this.flowParseTypeInitialiser();\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n    }, {\n      key: \"flowParseObjectTypeCallProperty\",\n      value: function flowParseObjectTypeCallProperty(node, isStatic) {\n        var valueNode = this.startNode();\n        node.static = isStatic;\n        node.value = this.flowParseObjectTypeMethodish(valueNode);\n        return this.finishNode(node, \"ObjectTypeCallProperty\");\n      }\n    }, {\n      key: \"flowParseObjectType\",\n      value: function flowParseObjectType(_ref5) {\n        var allowStatic = _ref5.allowStatic,\n            allowExact = _ref5.allowExact,\n            allowSpread = _ref5.allowSpread,\n            allowProto = _ref5.allowProto,\n            allowInexact = _ref5.allowInexact;\n        var oldInType = this.state.inType;\n        this.state.inType = true;\n        var nodeStart = this.startNode();\n        nodeStart.callProperties = [];\n        nodeStart.properties = [];\n        nodeStart.indexers = [];\n        nodeStart.internalSlots = [];\n        var endDelim;\n        var exact;\n        var inexact = false;\n\n        if (allowExact && this.match(6)) {\n          this.expect(6);\n          endDelim = 9;\n          exact = true;\n        } else {\n          this.expect(5);\n          endDelim = 8;\n          exact = false;\n        }\n\n        nodeStart.exact = exact;\n\n        while (!this.match(endDelim)) {\n          var isStatic = false;\n          var protoStart = null;\n          var inexactStart = null;\n          var node = this.startNode();\n\n          if (allowProto && this.isContextual(111)) {\n            var lookahead = this.lookahead();\n\n            if (lookahead.type !== 14 && lookahead.type !== 17) {\n              this.next();\n              protoStart = this.state.start;\n              allowStatic = false;\n            }\n          }\n\n          if (allowStatic && this.isContextual(100)) {\n            var _lookahead = this.lookahead();\n\n            if (_lookahead.type !== 14 && _lookahead.type !== 17) {\n              this.next();\n              isStatic = true;\n            }\n          }\n\n          var variance = this.flowParseVariance();\n\n          if (this.eat(0)) {\n            if (protoStart != null) {\n              this.unexpected(protoStart);\n            }\n\n            if (this.eat(0)) {\n              if (variance) {\n                this.unexpected(variance.start);\n              }\n\n              nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n            } else {\n              nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n            }\n          } else if (this.match(10) || this.match(45)) {\n            if (protoStart != null) {\n              this.unexpected(protoStart);\n            }\n\n            if (variance) {\n              this.unexpected(variance.start);\n            }\n\n            nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n          } else {\n            var kind = \"init\";\n\n            if (this.isContextual(94) || this.isContextual(99)) {\n              var _lookahead2 = this.lookahead();\n\n              if (tokenIsLiteralPropertyName(_lookahead2.type)) {\n                kind = this.state.value;\n                this.next();\n              }\n            }\n\n            var propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n            if (propOrInexact === null) {\n              inexact = true;\n              inexactStart = this.state.lastTokStart;\n            } else {\n              nodeStart.properties.push(propOrInexact);\n            }\n          }\n\n          this.flowObjectTypeSemicolon();\n\n          if (inexactStart && !this.match(8) && !this.match(9)) {\n            this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\n          }\n        }\n\n        this.expect(endDelim);\n\n        if (allowSpread) {\n          nodeStart.inexact = inexact;\n        }\n\n        var out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n        this.state.inType = oldInType;\n        return out;\n      }\n    }, {\n      key: \"flowParseObjectTypeProperty\",\n      value: function flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\n        if (this.eat(21)) {\n          var isInexactToken = this.match(12) || this.match(13) || this.match(8) || this.match(9);\n\n          if (isInexactToken) {\n            if (!allowSpread) {\n              this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\n            } else if (!allowInexact) {\n              this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n            }\n\n            if (variance) {\n              this.raise(variance.start, FlowErrors.InexactVariance);\n            }\n\n            return null;\n          }\n\n          if (!allowSpread) {\n            this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n          }\n\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (variance) {\n            this.raise(variance.start, FlowErrors.SpreadVariance);\n          }\n\n          node.argument = this.flowParseType();\n          return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n        } else {\n          node.key = this.flowParseObjectPropertyKey();\n          node.static = isStatic;\n          node.proto = protoStart != null;\n          node.kind = kind;\n          var optional = false;\n\n          if (this.match(45) || this.match(10)) {\n            node.method = true;\n\n            if (protoStart != null) {\n              this.unexpected(protoStart);\n            }\n\n            if (variance) {\n              this.unexpected(variance.start);\n            }\n\n            node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n            if (kind === \"get\" || kind === \"set\") {\n              this.flowCheckGetterSetterParams(node);\n            }\n\n            if (!allowSpread && node.key.name === \"constructor\" && node.value.this) {\n              this.raise(node.value.this.start, FlowErrors.ThisParamBannedInConstructor);\n            }\n          } else {\n            if (kind !== \"init\") this.unexpected();\n            node.method = false;\n\n            if (this.eat(17)) {\n              optional = true;\n            }\n\n            node.value = this.flowParseTypeInitialiser();\n            node.variance = variance;\n          }\n\n          node.optional = optional;\n          return this.finishNode(node, \"ObjectTypeProperty\");\n        }\n      }\n    }, {\n      key: \"flowCheckGetterSetterParams\",\n      value: function flowCheckGetterSetterParams(property) {\n        var paramCount = property.kind === \"get\" ? 0 : 1;\n        var start = property.start;\n        var length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n        if (property.value.this) {\n          this.raise(property.value.this.start, property.kind === \"get\" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam);\n        }\n\n        if (length !== paramCount) {\n          if (property.kind === \"get\") {\n            this.raise(start, ErrorMessages.BadGetterArity);\n          } else {\n            this.raise(start, ErrorMessages.BadSetterArity);\n          }\n        }\n\n        if (property.kind === \"set\" && property.value.rest) {\n          this.raise(start, ErrorMessages.BadSetterRestParameter);\n        }\n      }\n    }, {\n      key: \"flowObjectTypeSemicolon\",\n      value: function flowObjectTypeSemicolon() {\n        if (!this.eat(13) && !this.eat(12) && !this.match(8) && !this.match(9)) {\n          this.unexpected();\n        }\n      }\n    }, {\n      key: \"flowParseQualifiedTypeIdentifier\",\n      value: function flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n        startPos = startPos || this.state.start;\n        startLoc = startLoc || this.state.startLoc;\n        var node = id || this.flowParseRestrictedIdentifier(true);\n\n        while (this.eat(16)) {\n          var node2 = this.startNodeAt(startPos, startLoc);\n          node2.qualification = node;\n          node2.id = this.flowParseRestrictedIdentifier(true);\n          node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n        }\n\n        return node;\n      }\n    }, {\n      key: \"flowParseGenericType\",\n      value: function flowParseGenericType(startPos, startLoc, id) {\n        var node = this.startNodeAt(startPos, startLoc);\n        node.typeParameters = null;\n        node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n        if (this.match(45)) {\n          node.typeParameters = this.flowParseTypeParameterInstantiation();\n        }\n\n        return this.finishNode(node, \"GenericTypeAnnotation\");\n      }\n    }, {\n      key: \"flowParseTypeofType\",\n      value: function flowParseTypeofType() {\n        var node = this.startNode();\n        this.expect(83);\n        node.argument = this.flowParsePrimaryType();\n        return this.finishNode(node, \"TypeofTypeAnnotation\");\n      }\n    }, {\n      key: \"flowParseTupleType\",\n      value: function flowParseTupleType() {\n        var node = this.startNode();\n        node.types = [];\n        this.expect(0);\n\n        while (this.state.pos < this.length && !this.match(3)) {\n          node.types.push(this.flowParseType());\n          if (this.match(3)) break;\n          this.expect(12);\n        }\n\n        this.expect(3);\n        return this.finishNode(node, \"TupleTypeAnnotation\");\n      }\n    }, {\n      key: \"flowParseFunctionTypeParam\",\n      value: function flowParseFunctionTypeParam(first) {\n        var name = null;\n        var optional = false;\n        var typeAnnotation = null;\n        var node = this.startNode();\n        var lh = this.lookahead();\n        var isThis = this.state.type === 74;\n\n        if (lh.type === 14 || lh.type === 17) {\n          if (isThis && !first) {\n            this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\n          }\n\n          name = this.parseIdentifier(isThis);\n\n          if (this.eat(17)) {\n            optional = true;\n\n            if (isThis) {\n              this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\n            }\n          }\n\n          typeAnnotation = this.flowParseTypeInitialiser();\n        } else {\n          typeAnnotation = this.flowParseType();\n        }\n\n        node.name = name;\n        node.optional = optional;\n        node.typeAnnotation = typeAnnotation;\n        return this.finishNode(node, \"FunctionTypeParam\");\n      }\n    }, {\n      key: \"reinterpretTypeAsFunctionTypeParam\",\n      value: function reinterpretTypeAsFunctionTypeParam(type) {\n        var node = this.startNodeAt(type.start, type.loc.start);\n        node.name = null;\n        node.optional = false;\n        node.typeAnnotation = type;\n        return this.finishNode(node, \"FunctionTypeParam\");\n      }\n    }, {\n      key: \"flowParseFunctionTypeParams\",\n      value: function flowParseFunctionTypeParams() {\n        var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n        var rest = null;\n        var _this = null;\n\n        if (this.match(74)) {\n          _this = this.flowParseFunctionTypeParam(true);\n          _this.name = null;\n\n          if (!this.match(11)) {\n            this.expect(12);\n          }\n        }\n\n        while (!this.match(11) && !this.match(21)) {\n          params.push(this.flowParseFunctionTypeParam(false));\n\n          if (!this.match(11)) {\n            this.expect(12);\n          }\n        }\n\n        if (this.eat(21)) {\n          rest = this.flowParseFunctionTypeParam(false);\n        }\n\n        return {\n          params: params,\n          rest: rest,\n          _this: _this\n        };\n      }\n    }, {\n      key: \"flowIdentToTypeAnnotation\",\n      value: function flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n        switch (id.name) {\n          case \"any\":\n            return this.finishNode(node, \"AnyTypeAnnotation\");\n\n          case \"bool\":\n          case \"boolean\":\n            return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n          case \"mixed\":\n            return this.finishNode(node, \"MixedTypeAnnotation\");\n\n          case \"empty\":\n            return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n          case \"number\":\n            return this.finishNode(node, \"NumberTypeAnnotation\");\n\n          case \"string\":\n            return this.finishNode(node, \"StringTypeAnnotation\");\n\n          case \"symbol\":\n            return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n          default:\n            this.checkNotUnderscore(id.name);\n            return this.flowParseGenericType(startPos, startLoc, id);\n        }\n      }\n    }, {\n      key: \"flowParsePrimaryType\",\n      value: function flowParsePrimaryType() {\n        var startPos = this.state.start;\n        var startLoc = this.state.startLoc;\n        var node = this.startNode();\n        var tmp;\n        var type;\n        var isGroupedType = false;\n        var oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n        switch (this.state.type) {\n          case 5:\n            return this.flowParseObjectType({\n              allowStatic: false,\n              allowExact: false,\n              allowSpread: true,\n              allowProto: false,\n              allowInexact: true\n            });\n\n          case 6:\n            return this.flowParseObjectType({\n              allowStatic: false,\n              allowExact: true,\n              allowSpread: true,\n              allowProto: false,\n              allowInexact: false\n            });\n\n          case 0:\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseTupleType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n            return type;\n\n          case 45:\n            node.typeParameters = this.flowParseTypeParameterDeclaration();\n            this.expect(10);\n            tmp = this.flowParseFunctionTypeParams();\n            node.params = tmp.params;\n            node.rest = tmp.rest;\n            node.this = tmp._this;\n            this.expect(11);\n            this.expect(19);\n            node.returnType = this.flowParseType();\n            return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n          case 10:\n            this.next();\n\n            if (!this.match(11) && !this.match(21)) {\n              if (tokenIsIdentifier(this.state.type) || this.match(74)) {\n                var token = this.lookahead().type;\n                isGroupedType = token !== 17 && token !== 14;\n              } else {\n                isGroupedType = true;\n              }\n            }\n\n            if (isGroupedType) {\n              this.state.noAnonFunctionType = false;\n              type = this.flowParseType();\n              this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n              if (this.state.noAnonFunctionType || !(this.match(12) || this.match(11) && this.lookahead().type === 19)) {\n                this.expect(11);\n                return type;\n              } else {\n                this.eat(12);\n              }\n            }\n\n            if (type) {\n              tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n            } else {\n              tmp = this.flowParseFunctionTypeParams();\n            }\n\n            node.params = tmp.params;\n            node.rest = tmp.rest;\n            node.this = tmp._this;\n            this.expect(11);\n            this.expect(19);\n            node.returnType = this.flowParseType();\n            node.typeParameters = null;\n            return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n          case 125:\n            return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n          case 81:\n          case 82:\n            node.value = this.match(81);\n            this.next();\n            return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n          case 49:\n            if (this.state.value === \"-\") {\n              this.next();\n\n              if (this.match(126)) {\n                return this.parseLiteralAtNode(-this.state.value, \"NumberLiteralTypeAnnotation\", node);\n              }\n\n              if (this.match(127)) {\n                return this.parseLiteralAtNode(-this.state.value, \"BigIntLiteralTypeAnnotation\", node);\n              }\n\n              throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\n            }\n\n            throw this.unexpected();\n\n          case 126:\n            return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n          case 127:\n            return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n          case 84:\n            this.next();\n            return this.finishNode(node, \"VoidTypeAnnotation\");\n\n          case 80:\n            this.next();\n            return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n          case 74:\n            this.next();\n            return this.finishNode(node, \"ThisTypeAnnotation\");\n\n          case 51:\n            this.next();\n            return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n          case 83:\n            return this.flowParseTypeofType();\n\n          default:\n            if (tokenIsKeyword(this.state.type)) {\n              var label = tokenLabelName(this.state.type);\n              this.next();\n              return _get(_getPrototypeOf(_class2.prototype), \"createIdentifier\", this).call(this, node, label);\n            } else if (tokenIsIdentifier(this.state.type)) {\n              if (this.isContextual(121)) {\n                return this.flowParseInterfaceType();\n              }\n\n              return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n            }\n\n        }\n\n        throw this.unexpected();\n      }\n    }, {\n      key: \"flowParsePostfixType\",\n      value: function flowParsePostfixType() {\n        var startPos = this.state.start;\n        var startLoc = this.state.startLoc;\n        var type = this.flowParsePrimaryType();\n        var seenOptionalIndexedAccess = false;\n\n        while ((this.match(0) || this.match(18)) && !this.canInsertSemicolon()) {\n          var node = this.startNodeAt(startPos, startLoc);\n          var optional = this.eat(18);\n          seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n          this.expect(0);\n\n          if (!optional && this.match(3)) {\n            node.elementType = type;\n            this.next();\n            type = this.finishNode(node, \"ArrayTypeAnnotation\");\n          } else {\n            node.objectType = type;\n            node.indexType = this.flowParseType();\n            this.expect(3);\n\n            if (seenOptionalIndexedAccess) {\n              node.optional = optional;\n              type = this.finishNode(node, \"OptionalIndexedAccessType\");\n            } else {\n              type = this.finishNode(node, \"IndexedAccessType\");\n            }\n          }\n        }\n\n        return type;\n      }\n    }, {\n      key: \"flowParsePrefixType\",\n      value: function flowParsePrefixType() {\n        var node = this.startNode();\n\n        if (this.eat(17)) {\n          node.typeAnnotation = this.flowParsePrefixType();\n          return this.finishNode(node, \"NullableTypeAnnotation\");\n        } else {\n          return this.flowParsePostfixType();\n        }\n      }\n    }, {\n      key: \"flowParseAnonFunctionWithoutParens\",\n      value: function flowParseAnonFunctionWithoutParens() {\n        var param = this.flowParsePrefixType();\n\n        if (!this.state.noAnonFunctionType && this.eat(19)) {\n          var node = this.startNodeAt(param.start, param.loc.start);\n          node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n          node.rest = null;\n          node.this = null;\n          node.returnType = this.flowParseType();\n          node.typeParameters = null;\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n        }\n\n        return param;\n      }\n    }, {\n      key: \"flowParseIntersectionType\",\n      value: function flowParseIntersectionType() {\n        var node = this.startNode();\n        this.eat(43);\n        var type = this.flowParseAnonFunctionWithoutParens();\n        node.types = [type];\n\n        while (this.eat(43)) {\n          node.types.push(this.flowParseAnonFunctionWithoutParens());\n        }\n\n        return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n      }\n    }, {\n      key: \"flowParseUnionType\",\n      value: function flowParseUnionType() {\n        var node = this.startNode();\n        this.eat(41);\n        var type = this.flowParseIntersectionType();\n        node.types = [type];\n\n        while (this.eat(41)) {\n          node.types.push(this.flowParseIntersectionType());\n        }\n\n        return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n      }\n    }, {\n      key: \"flowParseType\",\n      value: function flowParseType() {\n        var oldInType = this.state.inType;\n        this.state.inType = true;\n        var type = this.flowParseUnionType();\n        this.state.inType = oldInType;\n        return type;\n      }\n    }, {\n      key: \"flowParseTypeOrImplicitInstantiation\",\n      value: function flowParseTypeOrImplicitInstantiation() {\n        if (this.state.type === 124 && this.state.value === \"_\") {\n          var startPos = this.state.start;\n          var startLoc = this.state.startLoc;\n          var node = this.parseIdentifier();\n          return this.flowParseGenericType(startPos, startLoc, node);\n        } else {\n          return this.flowParseType();\n        }\n      }\n    }, {\n      key: \"flowParseTypeAnnotation\",\n      value: function flowParseTypeAnnotation() {\n        var node = this.startNode();\n        node.typeAnnotation = this.flowParseTypeInitialiser();\n        return this.finishNode(node, \"TypeAnnotation\");\n      }\n    }, {\n      key: \"flowParseTypeAnnotatableIdentifier\",\n      value: function flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n        var ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n        if (this.match(14)) {\n          ident.typeAnnotation = this.flowParseTypeAnnotation();\n          this.resetEndLocation(ident);\n        }\n\n        return ident;\n      }\n    }, {\n      key: \"typeCastToParameter\",\n      value: function typeCastToParameter(node) {\n        node.expression.typeAnnotation = node.typeAnnotation;\n        this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n        return node.expression;\n      }\n    }, {\n      key: \"flowParseVariance\",\n      value: function flowParseVariance() {\n        var variance = null;\n\n        if (this.match(49)) {\n          variance = this.startNode();\n\n          if (this.state.value === \"+\") {\n            variance.kind = \"plus\";\n          } else {\n            variance.kind = \"minus\";\n          }\n\n          this.next();\n          this.finishNode(variance, \"Variance\");\n        }\n\n        return variance;\n      }\n    }, {\n      key: \"parseFunctionBody\",\n      value: function parseFunctionBody(node, allowExpressionBody) {\n        var _this12 = this;\n\n        var isMethod = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n        if (allowExpressionBody) {\n          return this.forwardNoArrowParamsConversionAt(node, function () {\n            return _get(_getPrototypeOf(_class2.prototype), \"parseFunctionBody\", _this12).call(_this12, node, true, isMethod);\n          });\n        }\n\n        return _get(_getPrototypeOf(_class2.prototype), \"parseFunctionBody\", this).call(this, node, false, isMethod);\n      }\n    }, {\n      key: \"parseFunctionBodyAndFinish\",\n      value: function parseFunctionBodyAndFinish(node, type) {\n        var isMethod = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n        if (this.match(14)) {\n          var typeNode = this.startNode();\n\n          var _this$flowParseTypeAn3 = this.flowParseTypeAndPredicateInitialiser();\n\n          var _this$flowParseTypeAn4 = _slicedToArray(_this$flowParseTypeAn3, 2);\n\n          typeNode.typeAnnotation = _this$flowParseTypeAn4[0];\n          node.predicate = _this$flowParseTypeAn4[1];\n          node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n        }\n\n        _get(_getPrototypeOf(_class2.prototype), \"parseFunctionBodyAndFinish\", this).call(this, node, type, isMethod);\n      }\n    }, {\n      key: \"parseStatement\",\n      value: function parseStatement(context, topLevel) {\n        if (this.state.strict && this.isContextual(121)) {\n          var lookahead = this.lookahead();\n\n          if (tokenIsKeywordOrIdentifier(lookahead.type)) {\n            var node = this.startNode();\n            this.next();\n            return this.flowParseInterface(node);\n          }\n        } else if (this.shouldParseEnums() && this.isContextual(118)) {\n          var _node = this.startNode();\n\n          this.next();\n          return this.flowParseEnumDeclaration(_node);\n        }\n\n        var stmt = _get(_getPrototypeOf(_class2.prototype), \"parseStatement\", this).call(this, context, topLevel);\n\n        if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n          this.flowPragma = null;\n        }\n\n        return stmt;\n      }\n    }, {\n      key: \"parseExpressionStatement\",\n      value: function parseExpressionStatement(node, expr) {\n        if (expr.type === \"Identifier\") {\n          if (expr.name === \"declare\") {\n            if (this.match(76) || tokenIsIdentifier(this.state.type) || this.match(64) || this.match(70) || this.match(78)) {\n              return this.flowParseDeclare(node);\n            }\n          } else if (tokenIsIdentifier(this.state.type)) {\n            if (expr.name === \"interface\") {\n              return this.flowParseInterface(node);\n            } else if (expr.name === \"type\") {\n              return this.flowParseTypeAlias(node);\n            } else if (expr.name === \"opaque\") {\n              return this.flowParseOpaqueType(node, false);\n            }\n          }\n        }\n\n        return _get(_getPrototypeOf(_class2.prototype), \"parseExpressionStatement\", this).call(this, node, expr);\n      }\n    }, {\n      key: \"shouldParseExportDeclaration\",\n      value: function shouldParseExportDeclaration() {\n        var type = this.state.type;\n\n        if (tokenIsFlowInterfaceOrTypeOrOpaque(type) || this.shouldParseEnums() && type === 118) {\n          return !this.state.containsEsc;\n        }\n\n        return _get(_getPrototypeOf(_class2.prototype), \"shouldParseExportDeclaration\", this).call(this);\n      }\n    }, {\n      key: \"isExportDefaultSpecifier\",\n      value: function isExportDefaultSpecifier() {\n        var type = this.state.type;\n\n        if (tokenIsFlowInterfaceOrTypeOrOpaque(type) || this.shouldParseEnums() && type === 118) {\n          return this.state.containsEsc;\n        }\n\n        return _get(_getPrototypeOf(_class2.prototype), \"isExportDefaultSpecifier\", this).call(this);\n      }\n    }, {\n      key: \"parseExportDefaultExpression\",\n      value: function parseExportDefaultExpression() {\n        if (this.shouldParseEnums() && this.isContextual(118)) {\n          var node = this.startNode();\n          this.next();\n          return this.flowParseEnumDeclaration(node);\n        }\n\n        return _get(_getPrototypeOf(_class2.prototype), \"parseExportDefaultExpression\", this).call(this);\n      }\n    }, {\n      key: \"parseConditional\",\n      value: function parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n        var _this13 = this;\n\n        if (!this.match(17)) return expr;\n\n        if (this.state.maybeInArrowParameters) {\n          var nextCh = this.lookaheadCharCode();\n\n          if (nextCh === 44 || nextCh === 61 || nextCh === 58 || nextCh === 41) {\n            this.setOptionalParametersError(refExpressionErrors);\n            return expr;\n          }\n        }\n\n        this.expect(17);\n        var state = this.state.clone();\n        var originalNoArrowAt = this.state.noArrowAt;\n        var node = this.startNodeAt(startPos, startLoc);\n\n        var _this$tryParseConditi = this.tryParseConditionalConsequent(),\n            consequent = _this$tryParseConditi.consequent,\n            failed = _this$tryParseConditi.failed;\n\n        var _this$getArrowLikeExp = this.getArrowLikeExpressions(consequent),\n            _this$getArrowLikeExp2 = _slicedToArray(_this$getArrowLikeExp, 2),\n            valid = _this$getArrowLikeExp2[0],\n            invalid = _this$getArrowLikeExp2[1];\n\n        if (failed || invalid.length > 0) {\n          var noArrowAt = _toConsumableArray(originalNoArrowAt);\n\n          if (invalid.length > 0) {\n            this.state = state;\n            this.state.noArrowAt = noArrowAt;\n\n            for (var i = 0; i < invalid.length; i++) {\n              noArrowAt.push(invalid[i].start);\n            }\n\n            var _this$tryParseConditi2 = this.tryParseConditionalConsequent();\n\n            consequent = _this$tryParseConditi2.consequent;\n            failed = _this$tryParseConditi2.failed;\n\n            var _this$getArrowLikeExp3 = this.getArrowLikeExpressions(consequent);\n\n            var _this$getArrowLikeExp4 = _slicedToArray(_this$getArrowLikeExp3, 2);\n\n            valid = _this$getArrowLikeExp4[0];\n            invalid = _this$getArrowLikeExp4[1];\n          }\n\n          if (failed && valid.length > 1) {\n            this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n          }\n\n          if (failed && valid.length === 1) {\n            this.state = state;\n            noArrowAt.push(valid[0].start);\n            this.state.noArrowAt = noArrowAt;\n\n            var _this$tryParseConditi3 = this.tryParseConditionalConsequent();\n\n            consequent = _this$tryParseConditi3.consequent;\n            failed = _this$tryParseConditi3.failed;\n          }\n        }\n\n        this.getArrowLikeExpressions(consequent, true);\n        this.state.noArrowAt = originalNoArrowAt;\n        this.expect(14);\n        node.test = expr;\n        node.consequent = consequent;\n        node.alternate = this.forwardNoArrowParamsConversionAt(node, function () {\n          return _this13.parseMaybeAssign(undefined, undefined);\n        });\n        return this.finishNode(node, \"ConditionalExpression\");\n      }\n    }, {\n      key: \"tryParseConditionalConsequent\",\n      value: function tryParseConditionalConsequent() {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        var consequent = this.parseMaybeAssignAllowIn();\n        var failed = !this.match(14);\n        this.state.noArrowParamsConversionAt.pop();\n        return {\n          consequent: consequent,\n          failed: failed\n        };\n      }\n    }, {\n      key: \"getArrowLikeExpressions\",\n      value: function getArrowLikeExpressions(node, disallowInvalid) {\n        var _this14 = this;\n\n        var stack = [node];\n        var arrows = [];\n\n        while (stack.length !== 0) {\n          var _node2 = stack.pop();\n\n          if (_node2.type === \"ArrowFunctionExpression\") {\n            if (_node2.typeParameters || !_node2.returnType) {\n              this.finishArrowValidation(_node2);\n            } else {\n              arrows.push(_node2);\n            }\n\n            stack.push(_node2.body);\n          } else if (_node2.type === \"ConditionalExpression\") {\n            stack.push(_node2.consequent);\n            stack.push(_node2.alternate);\n          }\n        }\n\n        if (disallowInvalid) {\n          arrows.forEach(function (node) {\n            return _this14.finishArrowValidation(node);\n          });\n          return [arrows, []];\n        }\n\n        return partition(arrows, function (node) {\n          return node.params.every(function (param) {\n            return _this14.isAssignable(param, true);\n          });\n        });\n      }\n    }, {\n      key: \"finishArrowValidation\",\n      value: function finishArrowValidation(node) {\n        var _node$extra;\n\n        this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);\n        this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n\n        _get(_getPrototypeOf(_class2.prototype), \"checkParams\", this).call(this, node, false, true);\n\n        this.scope.exit();\n      }\n    }, {\n      key: \"forwardNoArrowParamsConversionAt\",\n      value: function forwardNoArrowParamsConversionAt(node, parse) {\n        var result;\n\n        if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n          this.state.noArrowParamsConversionAt.push(this.state.start);\n          result = parse();\n          this.state.noArrowParamsConversionAt.pop();\n        } else {\n          result = parse();\n        }\n\n        return result;\n      }\n    }, {\n      key: \"parseParenItem\",\n      value: function parseParenItem(node, startPos, startLoc) {\n        node = _get(_getPrototypeOf(_class2.prototype), \"parseParenItem\", this).call(this, node, startPos, startLoc);\n\n        if (this.eat(17)) {\n          node.optional = true;\n          this.resetEndLocation(node);\n        }\n\n        if (this.match(14)) {\n          var typeCastNode = this.startNodeAt(startPos, startLoc);\n          typeCastNode.expression = node;\n          typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n          return this.finishNode(typeCastNode, \"TypeCastExpression\");\n        }\n\n        return node;\n      }\n    }, {\n      key: \"assertModuleNodeAllowed\",\n      value: function assertModuleNodeAllowed(node) {\n        if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n          return;\n        }\n\n        _get(_getPrototypeOf(_class2.prototype), \"assertModuleNodeAllowed\", this).call(this, node);\n      }\n    }, {\n      key: \"parseExport\",\n      value: function parseExport(node) {\n        var decl = _get(_getPrototypeOf(_class2.prototype), \"parseExport\", this).call(this, node);\n\n        if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n          decl.exportKind = decl.exportKind || \"value\";\n        }\n\n        return decl;\n      }\n    }, {\n      key: \"parseExportDeclaration\",\n      value: function parseExportDeclaration(node) {\n        if (this.isContextual(122)) {\n          node.exportKind = \"type\";\n          var declarationNode = this.startNode();\n          this.next();\n\n          if (this.match(5)) {\n            node.specifiers = this.parseExportSpecifiers(true);\n            this.parseExportFrom(node);\n            return null;\n          } else {\n            return this.flowParseTypeAlias(declarationNode);\n          }\n        } else if (this.isContextual(123)) {\n          node.exportKind = \"type\";\n\n          var _declarationNode = this.startNode();\n\n          this.next();\n          return this.flowParseOpaqueType(_declarationNode, false);\n        } else if (this.isContextual(121)) {\n          node.exportKind = \"type\";\n\n          var _declarationNode2 = this.startNode();\n\n          this.next();\n          return this.flowParseInterface(_declarationNode2);\n        } else if (this.shouldParseEnums() && this.isContextual(118)) {\n          node.exportKind = \"value\";\n\n          var _declarationNode3 = this.startNode();\n\n          this.next();\n          return this.flowParseEnumDeclaration(_declarationNode3);\n        } else {\n          return _get(_getPrototypeOf(_class2.prototype), \"parseExportDeclaration\", this).call(this, node);\n        }\n      }\n    }, {\n      key: \"eatExportStar\",\n      value: function eatExportStar(node) {\n        if (_get(_getPrototypeOf(_class2.prototype), \"eatExportStar\", this).apply(this, arguments)) return true;\n\n        if (this.isContextual(122) && this.lookahead().type === 51) {\n          node.exportKind = \"type\";\n          this.next();\n          this.next();\n          return true;\n        }\n\n        return false;\n      }\n    }, {\n      key: \"maybeParseExportNamespaceSpecifier\",\n      value: function maybeParseExportNamespaceSpecifier(node) {\n        var pos = this.state.start;\n\n        var hasNamespace = _get(_getPrototypeOf(_class2.prototype), \"maybeParseExportNamespaceSpecifier\", this).call(this, node);\n\n        if (hasNamespace && node.exportKind === \"type\") {\n          this.unexpected(pos);\n        }\n\n        return hasNamespace;\n      }\n    }, {\n      key: \"parseClassId\",\n      value: function parseClassId(node, isStatement, optionalId) {\n        _get(_getPrototypeOf(_class2.prototype), \"parseClassId\", this).call(this, node, isStatement, optionalId);\n\n        if (this.match(45)) {\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n        }\n      }\n    }, {\n      key: \"parseClassMember\",\n      value: function parseClassMember(classBody, member, state) {\n        var pos = this.state.start;\n\n        if (this.isContextual(117)) {\n          if (this.parseClassMemberFromModifier(classBody, member)) {\n            return;\n          }\n\n          member.declare = true;\n        }\n\n        _get(_getPrototypeOf(_class2.prototype), \"parseClassMember\", this).call(this, classBody, member, state);\n\n        if (member.declare) {\n          if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\" && member.type !== \"PropertyDefinition\") {\n            this.raise(pos, FlowErrors.DeclareClassElement);\n          } else if (member.value) {\n            this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\n          }\n        }\n      }\n    }, {\n      key: \"isIterator\",\n      value: function isIterator(word) {\n        return word === \"iterator\" || word === \"asyncIterator\";\n      }\n    }, {\n      key: \"readIterator\",\n      value: function readIterator() {\n        var word = _get(_getPrototypeOf(_class2.prototype), \"readWord1\", this).call(this);\n\n        var fullWord = \"@@\" + word;\n\n        if (!this.isIterator(word) || !this.state.inType) {\n          this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, fullWord);\n        }\n\n        this.finishToken(124, fullWord);\n      }\n    }, {\n      key: \"getTokenFromCode\",\n      value: function getTokenFromCode(code) {\n        var next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (code === 123 && next === 124) {\n          return this.finishOp(6, 2);\n        } else if (this.state.inType && (code === 62 || code === 60)) {\n          return this.finishOp(code === 62 ? 46 : 45, 1);\n        } else if (this.state.inType && code === 63) {\n          if (next === 46) {\n            return this.finishOp(18, 2);\n          }\n\n          return this.finishOp(17, 1);\n        } else if (isIteratorStart(code, next)) {\n          this.state.pos += 2;\n          return this.readIterator();\n        } else {\n          return _get(_getPrototypeOf(_class2.prototype), \"getTokenFromCode\", this).call(this, code);\n        }\n      }\n    }, {\n      key: \"isAssignable\",\n      value: function isAssignable(node, isBinding) {\n        if (node.type === \"TypeCastExpression\") {\n          return this.isAssignable(node.expression, isBinding);\n        } else {\n          return _get(_getPrototypeOf(_class2.prototype), \"isAssignable\", this).call(this, node, isBinding);\n        }\n      }\n    }, {\n      key: \"toAssignable\",\n      value: function toAssignable(node) {\n        var isLHS = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n        if (node.type === \"TypeCastExpression\") {\n          return _get(_getPrototypeOf(_class2.prototype), \"toAssignable\", this).call(this, this.typeCastToParameter(node), isLHS);\n        } else {\n          return _get(_getPrototypeOf(_class2.prototype), \"toAssignable\", this).call(this, node, isLHS);\n        }\n      }\n    }, {\n      key: \"toAssignableList\",\n      value: function toAssignableList(exprList, trailingCommaPos, isLHS) {\n        for (var i = 0; i < exprList.length; i++) {\n          var expr = exprList[i];\n\n          if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n            exprList[i] = this.typeCastToParameter(expr);\n          }\n        }\n\n        return _get(_getPrototypeOf(_class2.prototype), \"toAssignableList\", this).call(this, exprList, trailingCommaPos, isLHS);\n      }\n    }, {\n      key: \"toReferencedList\",\n      value: function toReferencedList(exprList, isParenthesizedExpr) {\n        for (var i = 0; i < exprList.length; i++) {\n          var _expr$extra;\n\n          var expr = exprList[i];\n\n          if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) != null && _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n            this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n          }\n        }\n\n        return exprList;\n      }\n    }, {\n      key: \"parseArrayLike\",\n      value: function parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n        var node = _get(_getPrototypeOf(_class2.prototype), \"parseArrayLike\", this).call(this, close, canBePattern, isTuple, refExpressionErrors);\n\n        if (canBePattern && !this.state.maybeInArrowParameters) {\n          this.toReferencedList(node.elements);\n        }\n\n        return node;\n      }\n    }, {\n      key: \"checkLVal\",\n      value: function checkLVal(expr) {\n        if (expr.type !== \"TypeCastExpression\") {\n          var _get6;\n\n          for (var _len10 = arguments.length, args = new Array(_len10 > 1 ? _len10 - 1 : 0), _key10 = 1; _key10 < _len10; _key10++) {\n            args[_key10 - 1] = arguments[_key10];\n          }\n\n          return (_get6 = _get(_getPrototypeOf(_class2.prototype), \"checkLVal\", this)).call.apply(_get6, [this, expr].concat(args));\n        }\n      }\n    }, {\n      key: \"parseClassProperty\",\n      value: function parseClassProperty(node) {\n        if (this.match(14)) {\n          node.typeAnnotation = this.flowParseTypeAnnotation();\n        }\n\n        return _get(_getPrototypeOf(_class2.prototype), \"parseClassProperty\", this).call(this, node);\n      }\n    }, {\n      key: \"parseClassPrivateProperty\",\n      value: function parseClassPrivateProperty(node) {\n        if (this.match(14)) {\n          node.typeAnnotation = this.flowParseTypeAnnotation();\n        }\n\n        return _get(_getPrototypeOf(_class2.prototype), \"parseClassPrivateProperty\", this).call(this, node);\n      }\n    }, {\n      key: \"isClassMethod\",\n      value: function isClassMethod() {\n        return this.match(45) || _get(_getPrototypeOf(_class2.prototype), \"isClassMethod\", this).call(this);\n      }\n    }, {\n      key: \"isClassProperty\",\n      value: function isClassProperty() {\n        return this.match(14) || _get(_getPrototypeOf(_class2.prototype), \"isClassProperty\", this).call(this);\n      }\n    }, {\n      key: \"isNonstaticConstructor\",\n      value: function isNonstaticConstructor(method) {\n        return !this.match(14) && _get(_getPrototypeOf(_class2.prototype), \"isNonstaticConstructor\", this).call(this, method);\n      }\n    }, {\n      key: \"pushClassMethod\",\n      value: function pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n        if (method.variance) {\n          this.unexpected(method.variance.start);\n        }\n\n        delete method.variance;\n\n        if (this.match(45)) {\n          method.typeParameters = this.flowParseTypeParameterDeclaration();\n        }\n\n        _get(_getPrototypeOf(_class2.prototype), \"pushClassMethod\", this).call(this, classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n\n        if (method.params && isConstructor) {\n          var params = method.params;\n\n          if (params.length > 0 && this.isThisParam(params[0])) {\n            this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n          }\n        } else if (method.type === \"MethodDefinition\" && isConstructor && method.value.params) {\n          var _params2 = method.value.params;\n\n          if (_params2.length > 0 && this.isThisParam(_params2[0])) {\n            this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n          }\n        }\n      }\n    }, {\n      key: \"pushClassPrivateMethod\",\n      value: function pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n        if (method.variance) {\n          this.unexpected(method.variance.start);\n        }\n\n        delete method.variance;\n\n        if (this.match(45)) {\n          method.typeParameters = this.flowParseTypeParameterDeclaration();\n        }\n\n        _get(_getPrototypeOf(_class2.prototype), \"pushClassPrivateMethod\", this).call(this, classBody, method, isGenerator, isAsync);\n      }\n    }, {\n      key: \"parseClassSuper\",\n      value: function parseClassSuper(node) {\n        _get(_getPrototypeOf(_class2.prototype), \"parseClassSuper\", this).call(this, node);\n\n        if (node.superClass && this.match(45)) {\n          node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n        }\n\n        if (this.isContextual(106)) {\n          this.next();\n          var implemented = node.implements = [];\n\n          do {\n            var _node3 = this.startNode();\n\n            _node3.id = this.flowParseRestrictedIdentifier(true);\n\n            if (this.match(45)) {\n              _node3.typeParameters = this.flowParseTypeParameterInstantiation();\n            } else {\n              _node3.typeParameters = null;\n            }\n\n            implemented.push(this.finishNode(_node3, \"ClassImplements\"));\n          } while (this.eat(12));\n        }\n      }\n    }, {\n      key: \"checkGetterSetterParams\",\n      value: function checkGetterSetterParams(method) {\n        _get(_getPrototypeOf(_class2.prototype), \"checkGetterSetterParams\", this).call(this, method);\n\n        var params = this.getObjectOrClassMethodParams(method);\n\n        if (params.length > 0) {\n          var param = params[0];\n\n          if (this.isThisParam(param) && method.kind === \"get\") {\n            this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\n          } else if (this.isThisParam(param)) {\n            this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\n          }\n        }\n      }\n    }, {\n      key: \"parsePropertyNamePrefixOperator\",\n      value: function parsePropertyNamePrefixOperator(node) {\n        node.variance = this.flowParseVariance();\n      }\n    }, {\n      key: \"parseObjPropValue\",\n      value: function parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n        if (prop.variance) {\n          this.unexpected(prop.variance.start);\n        }\n\n        delete prop.variance;\n        var typeParameters;\n\n        if (this.match(45) && !isAccessor) {\n          typeParameters = this.flowParseTypeParameterDeclaration();\n          if (!this.match(10)) this.unexpected();\n        }\n\n        _get(_getPrototypeOf(_class2.prototype), \"parseObjPropValue\", this).call(this, prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n        if (typeParameters) {\n          (prop.value || prop).typeParameters = typeParameters;\n        }\n      }\n    }, {\n      key: \"parseAssignableListItemTypes\",\n      value: function parseAssignableListItemTypes(param) {\n        if (this.eat(17)) {\n          if (param.type !== \"Identifier\") {\n            this.raise(param.start, FlowErrors.PatternIsOptional);\n          }\n\n          if (this.isThisParam(param)) {\n            this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\n          }\n\n          param.optional = true;\n        }\n\n        if (this.match(14)) {\n          param.typeAnnotation = this.flowParseTypeAnnotation();\n        } else if (this.isThisParam(param)) {\n          this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\n        }\n\n        if (this.match(29) && this.isThisParam(param)) {\n          this.raise(param.start, FlowErrors.ThisParamNoDefault);\n        }\n\n        this.resetEndLocation(param);\n        return param;\n      }\n    }, {\n      key: \"parseMaybeDefault\",\n      value: function parseMaybeDefault(startPos, startLoc, left) {\n        var node = _get(_getPrototypeOf(_class2.prototype), \"parseMaybeDefault\", this).call(this, startPos, startLoc, left);\n\n        if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n          this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n        }\n\n        return node;\n      }\n    }, {\n      key: \"shouldParseDefaultImport\",\n      value: function shouldParseDefaultImport(node) {\n        if (!hasTypeImportKind(node)) {\n          return _get(_getPrototypeOf(_class2.prototype), \"shouldParseDefaultImport\", this).call(this, node);\n        }\n\n        return isMaybeDefaultImport(this.state.type);\n      }\n    }, {\n      key: \"parseImportSpecifierLocal\",\n      value: function parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n        specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n        this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n        node.specifiers.push(this.finishNode(specifier, type));\n      }\n    }, {\n      key: \"maybeParseDefaultImportSpecifier\",\n      value: function maybeParseDefaultImportSpecifier(node) {\n        node.importKind = \"value\";\n        var kind = null;\n\n        if (this.match(83)) {\n          kind = \"typeof\";\n        } else if (this.isContextual(122)) {\n          kind = \"type\";\n        }\n\n        if (kind) {\n          var lh = this.lookahead();\n          var type = lh.type;\n\n          if (kind === \"type\" && type === 51) {\n            this.unexpected(lh.start);\n          }\n\n          if (isMaybeDefaultImport(type) || type === 5 || type === 51) {\n            this.next();\n            node.importKind = kind;\n          }\n        }\n\n        return _get(_getPrototypeOf(_class2.prototype), \"maybeParseDefaultImportSpecifier\", this).call(this, node);\n      }\n    }, {\n      key: \"parseImportSpecifier\",\n      value: function parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly) {\n        var firstIdent = specifier.imported;\n        var specifierTypeKind = null;\n\n        if (firstIdent.type === \"Identifier\") {\n          if (firstIdent.name === \"type\") {\n            specifierTypeKind = \"type\";\n          } else if (firstIdent.name === \"typeof\") {\n            specifierTypeKind = \"typeof\";\n          }\n        }\n\n        var isBinding = false;\n\n        if (this.isContextual(89) && !this.isLookaheadContextual(\"as\")) {\n          var as_ident = this.parseIdentifier(true);\n\n          if (specifierTypeKind !== null && !tokenIsKeywordOrIdentifier(this.state.type)) {\n            specifier.imported = as_ident;\n            specifier.importKind = specifierTypeKind;\n            specifier.local = cloneIdentifier(as_ident);\n          } else {\n            specifier.imported = firstIdent;\n            specifier.importKind = null;\n            specifier.local = this.parseIdentifier();\n          }\n        } else {\n          if (specifierTypeKind !== null && tokenIsKeywordOrIdentifier(this.state.type)) {\n            specifier.imported = this.parseIdentifier(true);\n            specifier.importKind = specifierTypeKind;\n          } else {\n            if (importedIsString) {\n              throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);\n            }\n\n            specifier.imported = firstIdent;\n            specifier.importKind = null;\n          }\n\n          if (this.eatContextual(89)) {\n            specifier.local = this.parseIdentifier();\n          } else {\n            isBinding = true;\n            specifier.local = cloneIdentifier(specifier.imported);\n          }\n        }\n\n        var specifierIsTypeImport = hasTypeImportKind(specifier);\n\n        if (isInTypeOnlyImport && specifierIsTypeImport) {\n          this.raise(specifier.start, FlowErrors.ImportTypeShorthandOnlyInPureImport);\n        }\n\n        if (isInTypeOnlyImport || specifierIsTypeImport) {\n          this.checkReservedType(specifier.local.name, specifier.local.start, true);\n        }\n\n        if (isBinding && !isInTypeOnlyImport && !specifierIsTypeImport) {\n          this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n        }\n\n        this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n        return this.finishNode(specifier, \"ImportSpecifier\");\n      }\n    }, {\n      key: \"parseBindingAtom\",\n      value: function parseBindingAtom() {\n        switch (this.state.type) {\n          case 74:\n            return this.parseIdentifier(true);\n\n          default:\n            return _get(_getPrototypeOf(_class2.prototype), \"parseBindingAtom\", this).call(this);\n        }\n      }\n    }, {\n      key: \"parseFunctionParams\",\n      value: function parseFunctionParams(node, allowModifiers) {\n        var kind = node.kind;\n\n        if (kind !== \"get\" && kind !== \"set\" && this.match(45)) {\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n        }\n\n        _get(_getPrototypeOf(_class2.prototype), \"parseFunctionParams\", this).call(this, node, allowModifiers);\n      }\n    }, {\n      key: \"parseVarId\",\n      value: function parseVarId(decl, kind) {\n        _get(_getPrototypeOf(_class2.prototype), \"parseVarId\", this).call(this, decl, kind);\n\n        if (this.match(14)) {\n          decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n          this.resetEndLocation(decl.id);\n        }\n      }\n    }, {\n      key: \"parseAsyncArrowFromCallExpression\",\n      value: function parseAsyncArrowFromCallExpression(node, call) {\n        if (this.match(14)) {\n          var oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n          node.returnType = this.flowParseTypeAnnotation();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        }\n\n        return _get(_getPrototypeOf(_class2.prototype), \"parseAsyncArrowFromCallExpression\", this).call(this, node, call);\n      }\n    }, {\n      key: \"shouldParseAsyncArrow\",\n      value: function shouldParseAsyncArrow() {\n        return this.match(14) || _get(_getPrototypeOf(_class2.prototype), \"shouldParseAsyncArrow\", this).call(this);\n      }\n    }, {\n      key: \"parseMaybeAssign\",\n      value: function parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n        var _this15 = this;\n\n        var _jsx;\n\n        var state = null;\n        var jsx;\n\n        if (this.hasPlugin(\"jsx\") && (this.match(134) || this.match(45))) {\n          state = this.state.clone();\n          jsx = this.tryParse(function () {\n            return _get(_getPrototypeOf(_class2.prototype), \"parseMaybeAssign\", _this15).call(_this15, refExpressionErrors, afterLeftParse);\n          }, state);\n          if (!jsx.error) return jsx.node;\n          var context = this.state.context;\n          var currentContext = context[context.length - 1];\n\n          if (currentContext === types.j_oTag || currentContext === types.j_expr) {\n            context.pop();\n          }\n        }\n\n        if ((_jsx = jsx) != null && _jsx.error || this.match(45)) {\n          var _jsx2, _jsx3;\n\n          state = state || this.state.clone();\n          var typeParameters;\n          var arrow = this.tryParse(function (abort) {\n            var _arrowExpression$extr;\n\n            typeParameters = _this15.flowParseTypeParameterDeclaration();\n\n            var arrowExpression = _this15.forwardNoArrowParamsConversionAt(typeParameters, function () {\n              var result = _get(_getPrototypeOf(_class2.prototype), \"parseMaybeAssign\", _this15).call(_this15, refExpressionErrors, afterLeftParse);\n\n              _this15.resetStartLocationFromNode(result, typeParameters);\n\n              return result;\n            });\n\n            if ((_arrowExpression$extr = arrowExpression.extra) != null && _arrowExpression$extr.parenthesized) abort();\n\n            var expr = _this15.maybeUnwrapTypeCastExpression(arrowExpression);\n\n            if (expr.type !== \"ArrowFunctionExpression\") abort();\n            expr.typeParameters = typeParameters;\n\n            _this15.resetStartLocationFromNode(expr, typeParameters);\n\n            return arrowExpression;\n          }, state);\n          var arrowExpression = null;\n\n          if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n            if (!arrow.error && !arrow.aborted) {\n              if (arrow.node.async) {\n                this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\n              }\n\n              return arrow.node;\n            }\n\n            arrowExpression = arrow.node;\n          }\n\n          if ((_jsx2 = jsx) != null && _jsx2.node) {\n            this.state = jsx.failState;\n            return jsx.node;\n          }\n\n          if (arrowExpression) {\n            this.state = arrow.failState;\n            return arrowExpression;\n          }\n\n          if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n          if (arrow.thrown) throw arrow.error;\n          throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\n        }\n\n        return _get(_getPrototypeOf(_class2.prototype), \"parseMaybeAssign\", this).call(this, refExpressionErrors, afterLeftParse);\n      }\n    }, {\n      key: \"parseArrow\",\n      value: function parseArrow(node) {\n        var _this16 = this;\n\n        if (this.match(14)) {\n          var result = this.tryParse(function () {\n            var oldNoAnonFunctionType = _this16.state.noAnonFunctionType;\n            _this16.state.noAnonFunctionType = true;\n\n            var typeNode = _this16.startNode();\n\n            var _this16$flowParseType = _this16.flowParseTypeAndPredicateInitialiser();\n\n            var _this16$flowParseType2 = _slicedToArray(_this16$flowParseType, 2);\n\n            typeNode.typeAnnotation = _this16$flowParseType2[0];\n            node.predicate = _this16$flowParseType2[1];\n            _this16.state.noAnonFunctionType = oldNoAnonFunctionType;\n            if (_this16.canInsertSemicolon()) _this16.unexpected();\n            if (!_this16.match(19)) _this16.unexpected();\n            return typeNode;\n          });\n          if (result.thrown) return null;\n          if (result.error) this.state = result.failState;\n          node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n        }\n\n        return _get(_getPrototypeOf(_class2.prototype), \"parseArrow\", this).call(this, node);\n      }\n    }, {\n      key: \"shouldParseArrow\",\n      value: function shouldParseArrow(params) {\n        return this.match(14) || _get(_getPrototypeOf(_class2.prototype), \"shouldParseArrow\", this).call(this, params);\n      }\n    }, {\n      key: \"setArrowFunctionParameters\",\n      value: function setArrowFunctionParameters(node, params) {\n        if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n          node.params = params;\n        } else {\n          _get(_getPrototypeOf(_class2.prototype), \"setArrowFunctionParameters\", this).call(this, node, params);\n        }\n      }\n    }, {\n      key: \"checkParams\",\n      value: function checkParams(node, allowDuplicates, isArrowFunction) {\n        if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n          return;\n        }\n\n        for (var i = 0; i < node.params.length; i++) {\n          if (this.isThisParam(node.params[i]) && i > 0) {\n            this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\n          }\n        }\n\n        return _get(_getPrototypeOf(_class2.prototype), \"checkParams\", this).apply(this, arguments);\n      }\n    }, {\n      key: \"parseParenAndDistinguishExpression\",\n      value: function parseParenAndDistinguishExpression(canBeArrow) {\n        return _get(_getPrototypeOf(_class2.prototype), \"parseParenAndDistinguishExpression\", this).call(this, canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n      }\n    }, {\n      key: \"parseSubscripts\",\n      value: function parseSubscripts(base, startPos, startLoc, noCalls) {\n        var _this17 = this;\n\n        if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n          this.next();\n          var node = this.startNodeAt(startPos, startLoc);\n          node.callee = base;\n          node.arguments = this.parseCallExpressionArguments(11, false);\n          base = this.finishNode(node, \"CallExpression\");\n        } else if (base.type === \"Identifier\" && base.name === \"async\" && this.match(45)) {\n          var state = this.state.clone();\n          var arrow = this.tryParse(function (abort) {\n            return _this17.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort();\n          }, state);\n          if (!arrow.error && !arrow.aborted) return arrow.node;\n          var result = this.tryParse(function () {\n            return _get(_getPrototypeOf(_class2.prototype), \"parseSubscripts\", _this17).call(_this17, base, startPos, startLoc, noCalls);\n          }, state);\n          if (result.node && !result.error) return result.node;\n\n          if (arrow.node) {\n            this.state = arrow.failState;\n            return arrow.node;\n          }\n\n          if (result.node) {\n            this.state = result.failState;\n            return result.node;\n          }\n\n          throw arrow.error || result.error;\n        }\n\n        return _get(_getPrototypeOf(_class2.prototype), \"parseSubscripts\", this).call(this, base, startPos, startLoc, noCalls);\n      }\n    }, {\n      key: \"parseSubscript\",\n      value: function parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n        var _this18 = this;\n\n        if (this.match(18) && this.isLookaheadToken_lt()) {\n          subscriptState.optionalChainMember = true;\n\n          if (noCalls) {\n            subscriptState.stop = true;\n            return base;\n          }\n\n          this.next();\n          var node = this.startNodeAt(startPos, startLoc);\n          node.callee = base;\n          node.typeArguments = this.flowParseTypeParameterInstantiation();\n          this.expect(10);\n          node.arguments = this.parseCallExpressionArguments(11, false);\n          node.optional = true;\n          return this.finishCallExpression(node, true);\n        } else if (!noCalls && this.shouldParseTypes() && this.match(45)) {\n          var _node4 = this.startNodeAt(startPos, startLoc);\n\n          _node4.callee = base;\n          var result = this.tryParse(function () {\n            _node4.typeArguments = _this18.flowParseTypeParameterInstantiationCallOrNew();\n\n            _this18.expect(10);\n\n            _node4.arguments = _this18.parseCallExpressionArguments(11, false);\n            if (subscriptState.optionalChainMember) _node4.optional = false;\n            return _this18.finishCallExpression(_node4, subscriptState.optionalChainMember);\n          });\n\n          if (result.node) {\n            if (result.error) this.state = result.failState;\n            return result.node;\n          }\n        }\n\n        return _get(_getPrototypeOf(_class2.prototype), \"parseSubscript\", this).call(this, base, startPos, startLoc, noCalls, subscriptState);\n      }\n    }, {\n      key: \"parseNewArguments\",\n      value: function parseNewArguments(node) {\n        var _this19 = this;\n\n        var targs = null;\n\n        if (this.shouldParseTypes() && this.match(45)) {\n          targs = this.tryParse(function () {\n            return _this19.flowParseTypeParameterInstantiationCallOrNew();\n          }).node;\n        }\n\n        node.typeArguments = targs;\n\n        _get(_getPrototypeOf(_class2.prototype), \"parseNewArguments\", this).call(this, node);\n      }\n    }, {\n      key: \"parseAsyncArrowWithTypeParameters\",\n      value: function parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n        var node = this.startNodeAt(startPos, startLoc);\n        this.parseFunctionParams(node);\n        if (!this.parseArrow(node)) return;\n        return this.parseArrowExpression(node, undefined, true);\n      }\n    }, {\n      key: \"readToken_mult_modulo\",\n      value: function readToken_mult_modulo(code) {\n        var next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (code === 42 && next === 47 && this.state.hasFlowComment) {\n          this.state.hasFlowComment = false;\n          this.state.pos += 2;\n          this.nextToken();\n          return;\n        }\n\n        _get(_getPrototypeOf(_class2.prototype), \"readToken_mult_modulo\", this).call(this, code);\n      }\n    }, {\n      key: \"readToken_pipe_amp\",\n      value: function readToken_pipe_amp(code) {\n        var next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (code === 124 && next === 125) {\n          this.finishOp(9, 2);\n          return;\n        }\n\n        _get(_getPrototypeOf(_class2.prototype), \"readToken_pipe_amp\", this).call(this, code);\n      }\n    }, {\n      key: \"parseTopLevel\",\n      value: function parseTopLevel(file, program) {\n        var fileNode = _get(_getPrototypeOf(_class2.prototype), \"parseTopLevel\", this).call(this, file, program);\n\n        if (this.state.hasFlowComment) {\n          this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n        }\n\n        return fileNode;\n      }\n    }, {\n      key: \"skipBlockComment\",\n      value: function skipBlockComment() {\n        if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n          if (this.state.hasFlowComment) {\n            this.unexpected(null, FlowErrors.NestedFlowComment);\n          }\n\n          this.hasFlowCommentCompletion();\n          this.state.pos += this.skipFlowComment();\n          this.state.hasFlowComment = true;\n          return;\n        }\n\n        if (this.state.hasFlowComment) {\n          var end = this.input.indexOf(\"*-/\", this.state.pos += 2);\n\n          if (end === -1) {\n            throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\n          }\n\n          this.state.pos = end + 3;\n          return;\n        }\n\n        return _get(_getPrototypeOf(_class2.prototype), \"skipBlockComment\", this).call(this);\n      }\n    }, {\n      key: \"skipFlowComment\",\n      value: function skipFlowComment() {\n        var pos = this.state.pos;\n        var shiftToFirstNonWhiteSpace = 2;\n\n        while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n          shiftToFirstNonWhiteSpace++;\n        }\n\n        var ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n        var ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n        if (ch2 === 58 && ch3 === 58) {\n          return shiftToFirstNonWhiteSpace + 2;\n        }\n\n        if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n          return shiftToFirstNonWhiteSpace + 12;\n        }\n\n        if (ch2 === 58 && ch3 !== 58) {\n          return shiftToFirstNonWhiteSpace;\n        }\n\n        return false;\n      }\n    }, {\n      key: \"hasFlowCommentCompletion\",\n      value: function hasFlowCommentCompletion() {\n        var end = this.input.indexOf(\"*/\", this.state.pos);\n\n        if (end === -1) {\n          throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\n        }\n      }\n    }, {\n      key: \"flowEnumErrorBooleanMemberNotInitialized\",\n      value: function flowEnumErrorBooleanMemberNotInitialized(pos, _ref6) {\n        var enumName = _ref6.enumName,\n            memberName = _ref6.memberName;\n        this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\n      }\n    }, {\n      key: \"flowEnumErrorInvalidMemberName\",\n      value: function flowEnumErrorInvalidMemberName(pos, _ref7) {\n        var enumName = _ref7.enumName,\n            memberName = _ref7.memberName;\n        var suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n        this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\n      }\n    }, {\n      key: \"flowEnumErrorDuplicateMemberName\",\n      value: function flowEnumErrorDuplicateMemberName(pos, _ref8) {\n        var enumName = _ref8.enumName,\n            memberName = _ref8.memberName;\n        this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n      }\n    }, {\n      key: \"flowEnumErrorInconsistentMemberValues\",\n      value: function flowEnumErrorInconsistentMemberValues(pos, _ref9) {\n        var enumName = _ref9.enumName;\n        this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n      }\n    }, {\n      key: \"flowEnumErrorInvalidExplicitType\",\n      value: function flowEnumErrorInvalidExplicitType(pos, _ref10) {\n        var enumName = _ref10.enumName,\n            suppliedType = _ref10.suppliedType;\n        return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\n      }\n    }, {\n      key: \"flowEnumErrorInvalidMemberInitializer\",\n      value: function flowEnumErrorInvalidMemberInitializer(pos, _ref11) {\n        var enumName = _ref11.enumName,\n            explicitType = _ref11.explicitType,\n            memberName = _ref11.memberName;\n        var message = null;\n\n        switch (explicitType) {\n          case \"boolean\":\n          case \"number\":\n          case \"string\":\n            message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n            break;\n\n          case \"symbol\":\n            message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n            break;\n\n          default:\n            message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n        }\n\n        return this.raise(pos, message, enumName, memberName, explicitType);\n      }\n    }, {\n      key: \"flowEnumErrorNumberMemberNotInitialized\",\n      value: function flowEnumErrorNumberMemberNotInitialized(pos, _ref12) {\n        var enumName = _ref12.enumName,\n            memberName = _ref12.memberName;\n        this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\n      }\n    }, {\n      key: \"flowEnumErrorStringMemberInconsistentlyInitailized\",\n      value: function flowEnumErrorStringMemberInconsistentlyInitailized(pos, _ref13) {\n        var enumName = _ref13.enumName;\n        this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\n      }\n    }, {\n      key: \"flowEnumMemberInit\",\n      value: function flowEnumMemberInit() {\n        var _this20 = this;\n\n        var startPos = this.state.start;\n\n        var endOfInit = function endOfInit() {\n          return _this20.match(12) || _this20.match(8);\n        };\n\n        switch (this.state.type) {\n          case 126:\n            {\n              var literal = this.parseNumericLiteral(this.state.value);\n\n              if (endOfInit()) {\n                return {\n                  type: \"number\",\n                  pos: literal.start,\n                  value: literal\n                };\n              }\n\n              return {\n                type: \"invalid\",\n                pos: startPos\n              };\n            }\n\n          case 125:\n            {\n              var _literal = this.parseStringLiteral(this.state.value);\n\n              if (endOfInit()) {\n                return {\n                  type: \"string\",\n                  pos: _literal.start,\n                  value: _literal\n                };\n              }\n\n              return {\n                type: \"invalid\",\n                pos: startPos\n              };\n            }\n\n          case 81:\n          case 82:\n            {\n              var _literal2 = this.parseBooleanLiteral(this.match(81));\n\n              if (endOfInit()) {\n                return {\n                  type: \"boolean\",\n                  pos: _literal2.start,\n                  value: _literal2\n                };\n              }\n\n              return {\n                type: \"invalid\",\n                pos: startPos\n              };\n            }\n\n          default:\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n        }\n      }\n    }, {\n      key: \"flowEnumMemberRaw\",\n      value: function flowEnumMemberRaw() {\n        var pos = this.state.start;\n        var id = this.parseIdentifier(true);\n        var init = this.eat(29) ? this.flowEnumMemberInit() : {\n          type: \"none\",\n          pos: pos\n        };\n        return {\n          id: id,\n          init: init\n        };\n      }\n    }, {\n      key: \"flowEnumCheckExplicitTypeMismatch\",\n      value: function flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\n        var explicitType = context.explicitType;\n\n        if (explicitType === null) {\n          return;\n        }\n\n        if (explicitType !== expectedType) {\n          this.flowEnumErrorInvalidMemberInitializer(pos, context);\n        }\n      }\n    }, {\n      key: \"flowEnumMembers\",\n      value: function flowEnumMembers(_ref14) {\n        var enumName = _ref14.enumName,\n            explicitType = _ref14.explicitType;\n        var seenNames = new Set();\n        var members = {\n          booleanMembers: [],\n          numberMembers: [],\n          stringMembers: [],\n          defaultedMembers: []\n        };\n        var hasUnknownMembers = false;\n\n        while (!this.match(8)) {\n          if (this.eat(21)) {\n            hasUnknownMembers = true;\n            break;\n          }\n\n          var memberNode = this.startNode();\n\n          var _this$flowEnumMemberR = this.flowEnumMemberRaw(),\n              id = _this$flowEnumMemberR.id,\n              init = _this$flowEnumMemberR.init;\n\n          var memberName = id.name;\n\n          if (memberName === \"\") {\n            continue;\n          }\n\n          if (/^[a-z]/.test(memberName)) {\n            this.flowEnumErrorInvalidMemberName(id.start, {\n              enumName: enumName,\n              memberName: memberName\n            });\n          }\n\n          if (seenNames.has(memberName)) {\n            this.flowEnumErrorDuplicateMemberName(id.start, {\n              enumName: enumName,\n              memberName: memberName\n            });\n          }\n\n          seenNames.add(memberName);\n          var context = {\n            enumName: enumName,\n            explicitType: explicitType,\n            memberName: memberName\n          };\n          memberNode.id = id;\n\n          switch (init.type) {\n            case \"boolean\":\n              {\n                this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\n                memberNode.init = init.value;\n                members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n                break;\n              }\n\n            case \"number\":\n              {\n                this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n                memberNode.init = init.value;\n                members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n                break;\n              }\n\n            case \"string\":\n              {\n                this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n                memberNode.init = init.value;\n                members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n                break;\n              }\n\n            case \"invalid\":\n              {\n                throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n              }\n\n            case \"none\":\n              {\n                switch (explicitType) {\n                  case \"boolean\":\n                    this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\n                    break;\n\n                  case \"number\":\n                    this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                    break;\n\n                  default:\n                    members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n                }\n              }\n          }\n\n          if (!this.match(8)) {\n            this.expect(12);\n          }\n        }\n\n        return {\n          members: members,\n          hasUnknownMembers: hasUnknownMembers\n        };\n      }\n    }, {\n      key: \"flowEnumStringMembers\",\n      value: function flowEnumStringMembers(initializedMembers, defaultedMembers, _ref15) {\n        var enumName = _ref15.enumName;\n\n        if (initializedMembers.length === 0) {\n          return defaultedMembers;\n        } else if (defaultedMembers.length === 0) {\n          return initializedMembers;\n        } else if (defaultedMembers.length > initializedMembers.length) {\n          var _iterator2 = _createForOfIteratorHelper(initializedMembers),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var member = _step2.value;\n              this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n                enumName: enumName\n              });\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n\n          return defaultedMembers;\n        } else {\n          var _iterator3 = _createForOfIteratorHelper(defaultedMembers),\n              _step3;\n\n          try {\n            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n              var _member = _step3.value;\n              this.flowEnumErrorStringMemberInconsistentlyInitailized(_member.start, {\n                enumName: enumName\n              });\n            }\n          } catch (err) {\n            _iterator3.e(err);\n          } finally {\n            _iterator3.f();\n          }\n\n          return initializedMembers;\n        }\n      }\n    }, {\n      key: \"flowEnumParseExplicitType\",\n      value: function flowEnumParseExplicitType(_ref16) {\n        var enumName = _ref16.enumName;\n\n        if (this.eatContextual(97)) {\n          if (!tokenIsIdentifier(this.state.type)) {\n            throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n              enumName: enumName,\n              suppliedType: null\n            });\n          }\n\n          var value = this.state.value;\n          this.next();\n\n          if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n            this.flowEnumErrorInvalidExplicitType(this.state.start, {\n              enumName: enumName,\n              suppliedType: value\n            });\n          }\n\n          return value;\n        }\n\n        return null;\n      }\n    }, {\n      key: \"flowEnumBody\",\n      value: function flowEnumBody(node, _ref17) {\n        var _this21 = this;\n\n        var enumName = _ref17.enumName,\n            nameLoc = _ref17.nameLoc;\n        var explicitType = this.flowEnumParseExplicitType({\n          enumName: enumName\n        });\n        this.expect(5);\n\n        var _this$flowEnumMembers = this.flowEnumMembers({\n          enumName: enumName,\n          explicitType: explicitType\n        }),\n            members = _this$flowEnumMembers.members,\n            hasUnknownMembers = _this$flowEnumMembers.hasUnknownMembers;\n\n        node.hasUnknownMembers = hasUnknownMembers;\n\n        switch (explicitType) {\n          case \"boolean\":\n            node.explicitType = true;\n            node.members = members.booleanMembers;\n            this.expect(8);\n            return this.finishNode(node, \"EnumBooleanBody\");\n\n          case \"number\":\n            node.explicitType = true;\n            node.members = members.numberMembers;\n            this.expect(8);\n            return this.finishNode(node, \"EnumNumberBody\");\n\n          case \"string\":\n            node.explicitType = true;\n            node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n              enumName: enumName\n            });\n            this.expect(8);\n            return this.finishNode(node, \"EnumStringBody\");\n\n          case \"symbol\":\n            node.members = members.defaultedMembers;\n            this.expect(8);\n            return this.finishNode(node, \"EnumSymbolBody\");\n\n          default:\n            {\n              var empty = function empty() {\n                node.members = [];\n\n                _this21.expect(8);\n\n                return _this21.finishNode(node, \"EnumStringBody\");\n              };\n\n              node.explicitType = false;\n              var boolsLen = members.booleanMembers.length;\n              var numsLen = members.numberMembers.length;\n              var strsLen = members.stringMembers.length;\n              var defaultedLen = members.defaultedMembers.length;\n\n              if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n                return empty();\n              } else if (!boolsLen && !numsLen) {\n                node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n                  enumName: enumName\n                });\n                this.expect(8);\n                return this.finishNode(node, \"EnumStringBody\");\n              } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n                var _iterator4 = _createForOfIteratorHelper(members.defaultedMembers),\n                    _step4;\n\n                try {\n                  for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                    var member = _step4.value;\n                    this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                      enumName: enumName,\n                      memberName: member.id.name\n                    });\n                  }\n                } catch (err) {\n                  _iterator4.e(err);\n                } finally {\n                  _iterator4.f();\n                }\n\n                node.members = members.booleanMembers;\n                this.expect(8);\n                return this.finishNode(node, \"EnumBooleanBody\");\n              } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n                var _iterator5 = _createForOfIteratorHelper(members.defaultedMembers),\n                    _step5;\n\n                try {\n                  for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                    var _member2 = _step5.value;\n                    this.flowEnumErrorNumberMemberNotInitialized(_member2.start, {\n                      enumName: enumName,\n                      memberName: _member2.id.name\n                    });\n                  }\n                } catch (err) {\n                  _iterator5.e(err);\n                } finally {\n                  _iterator5.f();\n                }\n\n                node.members = members.numberMembers;\n                this.expect(8);\n                return this.finishNode(node, \"EnumNumberBody\");\n              } else {\n                this.flowEnumErrorInconsistentMemberValues(nameLoc, {\n                  enumName: enumName\n                });\n                return empty();\n              }\n            }\n        }\n      }\n    }, {\n      key: \"flowParseEnumDeclaration\",\n      value: function flowParseEnumDeclaration(node) {\n        var id = this.parseIdentifier();\n        node.id = id;\n        node.body = this.flowEnumBody(this.startNode(), {\n          enumName: id.name,\n          nameLoc: id.start\n        });\n        return this.finishNode(node, \"EnumDeclaration\");\n      }\n    }, {\n      key: \"isLookaheadToken_lt\",\n      value: function isLookaheadToken_lt() {\n        var next = this.nextTokenStart();\n\n        if (this.input.charCodeAt(next) === 60) {\n          var afterNext = this.input.charCodeAt(next + 1);\n          return afterNext !== 60 && afterNext !== 61;\n        }\n\n        return false;\n      }\n    }, {\n      key: \"maybeUnwrapTypeCastExpression\",\n      value: function maybeUnwrapTypeCastExpression(node) {\n        return node.type === \"TypeCastExpression\" ? node.expression : node;\n      }\n    }]);\n\n    return _class2;\n  }(superClass);\n};\n\nvar entities = {\n  quot: \"\\\"\",\n  amp: \"&\",\n  apos: \"'\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\xA0\",\n  iexcl: \"\\xA1\",\n  cent: \"\\xA2\",\n  pound: \"\\xA3\",\n  curren: \"\\xA4\",\n  yen: \"\\xA5\",\n  brvbar: \"\\xA6\",\n  sect: \"\\xA7\",\n  uml: \"\\xA8\",\n  copy: \"\\xA9\",\n  ordf: \"\\xAA\",\n  laquo: \"\\xAB\",\n  not: \"\\xAC\",\n  shy: \"\\xAD\",\n  reg: \"\\xAE\",\n  macr: \"\\xAF\",\n  deg: \"\\xB0\",\n  plusmn: \"\\xB1\",\n  sup2: \"\\xB2\",\n  sup3: \"\\xB3\",\n  acute: \"\\xB4\",\n  micro: \"\\xB5\",\n  para: \"\\xB6\",\n  middot: \"\\xB7\",\n  cedil: \"\\xB8\",\n  sup1: \"\\xB9\",\n  ordm: \"\\xBA\",\n  raquo: \"\\xBB\",\n  frac14: \"\\xBC\",\n  frac12: \"\\xBD\",\n  frac34: \"\\xBE\",\n  iquest: \"\\xBF\",\n  Agrave: \"\\xC0\",\n  Aacute: \"\\xC1\",\n  Acirc: \"\\xC2\",\n  Atilde: \"\\xC3\",\n  Auml: \"\\xC4\",\n  Aring: \"\\xC5\",\n  AElig: \"\\xC6\",\n  Ccedil: \"\\xC7\",\n  Egrave: \"\\xC8\",\n  Eacute: \"\\xC9\",\n  Ecirc: \"\\xCA\",\n  Euml: \"\\xCB\",\n  Igrave: \"\\xCC\",\n  Iacute: \"\\xCD\",\n  Icirc: \"\\xCE\",\n  Iuml: \"\\xCF\",\n  ETH: \"\\xD0\",\n  Ntilde: \"\\xD1\",\n  Ograve: \"\\xD2\",\n  Oacute: \"\\xD3\",\n  Ocirc: \"\\xD4\",\n  Otilde: \"\\xD5\",\n  Ouml: \"\\xD6\",\n  times: \"\\xD7\",\n  Oslash: \"\\xD8\",\n  Ugrave: \"\\xD9\",\n  Uacute: \"\\xDA\",\n  Ucirc: \"\\xDB\",\n  Uuml: \"\\xDC\",\n  Yacute: \"\\xDD\",\n  THORN: \"\\xDE\",\n  szlig: \"\\xDF\",\n  agrave: \"\\xE0\",\n  aacute: \"\\xE1\",\n  acirc: \"\\xE2\",\n  atilde: \"\\xE3\",\n  auml: \"\\xE4\",\n  aring: \"\\xE5\",\n  aelig: \"\\xE6\",\n  ccedil: \"\\xE7\",\n  egrave: \"\\xE8\",\n  eacute: \"\\xE9\",\n  ecirc: \"\\xEA\",\n  euml: \"\\xEB\",\n  igrave: \"\\xEC\",\n  iacute: \"\\xED\",\n  icirc: \"\\xEE\",\n  iuml: \"\\xEF\",\n  eth: \"\\xF0\",\n  ntilde: \"\\xF1\",\n  ograve: \"\\xF2\",\n  oacute: \"\\xF3\",\n  ocirc: \"\\xF4\",\n  otilde: \"\\xF5\",\n  ouml: \"\\xF6\",\n  divide: \"\\xF7\",\n  oslash: \"\\xF8\",\n  ugrave: \"\\xF9\",\n  uacute: \"\\xFA\",\n  ucirc: \"\\xFB\",\n  uuml: \"\\xFC\",\n  yacute: \"\\xFD\",\n  thorn: \"\\xFE\",\n  yuml: \"\\xFF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\nvar HEX_NUMBER = /^[\\da-fA-F]+$/;\nvar DECIMAL_NUMBER = /^\\d+$/;\nvar JsxErrors = makeErrorTemplates({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>.\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n}, ErrorCodes.SyntaxError, \"jsx\");\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = function jsx(superClass) {\n  return /*#__PURE__*/function (_superClass3) {\n    _inherits(_class3, _superClass3);\n\n    var _super11 = _createSuper(_class3);\n\n    function _class3() {\n      _classCallCheck(this, _class3);\n\n      return _super11.apply(this, arguments);\n    }\n\n    _createClass(_class3, [{\n      key: \"jsxReadToken\",\n      value: function jsxReadToken() {\n        var out = \"\";\n        var chunkStart = this.state.pos;\n\n        for (;;) {\n          if (this.state.pos >= this.length) {\n            throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n          }\n\n          var ch = this.input.charCodeAt(this.state.pos);\n\n          switch (ch) {\n            case 60:\n            case 123:\n              if (this.state.pos === this.state.start) {\n                if (ch === 60 && this.state.canStartJSXElement) {\n                  ++this.state.pos;\n                  return this.finishToken(134);\n                }\n\n                return _get(_getPrototypeOf(_class3.prototype), \"getTokenFromCode\", this).call(this, ch);\n              }\n\n              out += this.input.slice(chunkStart, this.state.pos);\n              return this.finishToken(133, out);\n\n            case 38:\n              out += this.input.slice(chunkStart, this.state.pos);\n              out += this.jsxReadEntity();\n              chunkStart = this.state.pos;\n              break;\n\n            case 62:\n            case 125:\n            default:\n              if (isNewLine(ch)) {\n                out += this.input.slice(chunkStart, this.state.pos);\n                out += this.jsxReadNewLine(true);\n                chunkStart = this.state.pos;\n              } else {\n                ++this.state.pos;\n              }\n\n          }\n        }\n      }\n    }, {\n      key: \"jsxReadNewLine\",\n      value: function jsxReadNewLine(normalizeCRLF) {\n        var ch = this.input.charCodeAt(this.state.pos);\n        var out;\n        ++this.state.pos;\n\n        if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n          ++this.state.pos;\n          out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n        } else {\n          out = String.fromCharCode(ch);\n        }\n\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        return out;\n      }\n    }, {\n      key: \"jsxReadString\",\n      value: function jsxReadString(quote) {\n        var out = \"\";\n        var chunkStart = ++this.state.pos;\n\n        for (;;) {\n          if (this.state.pos >= this.length) {\n            throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n          }\n\n          var ch = this.input.charCodeAt(this.state.pos);\n          if (ch === quote) break;\n\n          if (ch === 38) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadEntity();\n            chunkStart = this.state.pos;\n          } else if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(false);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n        }\n\n        out += this.input.slice(chunkStart, this.state.pos++);\n        return this.finishToken(125, out);\n      }\n    }, {\n      key: \"jsxReadEntity\",\n      value: function jsxReadEntity() {\n        var str = \"\";\n        var count = 0;\n        var entity;\n        var ch = this.input[this.state.pos];\n        var startPos = ++this.state.pos;\n\n        while (this.state.pos < this.length && count++ < 10) {\n          ch = this.input[this.state.pos++];\n\n          if (ch === \";\") {\n            if (str[0] === \"#\") {\n              if (str[1] === \"x\") {\n                str = str.substr(2);\n\n                if (HEX_NUMBER.test(str)) {\n                  entity = String.fromCodePoint(parseInt(str, 16));\n                }\n              } else {\n                str = str.substr(1);\n\n                if (DECIMAL_NUMBER.test(str)) {\n                  entity = String.fromCodePoint(parseInt(str, 10));\n                }\n              }\n            } else {\n              entity = entities[str];\n            }\n\n            break;\n          }\n\n          str += ch;\n        }\n\n        if (!entity) {\n          this.state.pos = startPos;\n          return \"&\";\n        }\n\n        return entity;\n      }\n    }, {\n      key: \"jsxReadWord\",\n      value: function jsxReadWord() {\n        var ch;\n        var start = this.state.pos;\n\n        do {\n          ch = this.input.charCodeAt(++this.state.pos);\n        } while (isIdentifierChar(ch) || ch === 45);\n\n        return this.finishToken(132, this.input.slice(start, this.state.pos));\n      }\n    }, {\n      key: \"jsxParseIdentifier\",\n      value: function jsxParseIdentifier() {\n        var node = this.startNode();\n\n        if (this.match(132)) {\n          node.name = this.state.value;\n        } else if (tokenIsKeyword(this.state.type)) {\n          node.name = tokenLabelName(this.state.type);\n        } else {\n          this.unexpected();\n        }\n\n        this.next();\n        return this.finishNode(node, \"JSXIdentifier\");\n      }\n    }, {\n      key: \"jsxParseNamespacedName\",\n      value: function jsxParseNamespacedName() {\n        var startPos = this.state.start;\n        var startLoc = this.state.startLoc;\n        var name = this.jsxParseIdentifier();\n        if (!this.eat(14)) return name;\n        var node = this.startNodeAt(startPos, startLoc);\n        node.namespace = name;\n        node.name = this.jsxParseIdentifier();\n        return this.finishNode(node, \"JSXNamespacedName\");\n      }\n    }, {\n      key: \"jsxParseElementName\",\n      value: function jsxParseElementName() {\n        var startPos = this.state.start;\n        var startLoc = this.state.startLoc;\n        var node = this.jsxParseNamespacedName();\n\n        if (node.type === \"JSXNamespacedName\") {\n          return node;\n        }\n\n        while (this.eat(16)) {\n          var newNode = this.startNodeAt(startPos, startLoc);\n          newNode.object = node;\n          newNode.property = this.jsxParseIdentifier();\n          node = this.finishNode(newNode, \"JSXMemberExpression\");\n        }\n\n        return node;\n      }\n    }, {\n      key: \"jsxParseAttributeValue\",\n      value: function jsxParseAttributeValue() {\n        var node;\n\n        switch (this.state.type) {\n          case 5:\n            node = this.startNode();\n            this.setContext(types.brace);\n            this.next();\n            node = this.jsxParseExpressionContainer(node, types.j_oTag);\n\n            if (node.expression.type === \"JSXEmptyExpression\") {\n              this.raise(node.start, JsxErrors.AttributeIsEmpty);\n            }\n\n            return node;\n\n          case 134:\n          case 125:\n            return this.parseExprAtom();\n\n          default:\n            throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n        }\n      }\n    }, {\n      key: \"jsxParseEmptyExpression\",\n      value: function jsxParseEmptyExpression() {\n        var node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n        return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n      }\n    }, {\n      key: \"jsxParseSpreadChild\",\n      value: function jsxParseSpreadChild(node) {\n        this.next();\n        node.expression = this.parseExpression();\n        this.setContext(types.j_oTag);\n        this.expect(8);\n        return this.finishNode(node, \"JSXSpreadChild\");\n      }\n    }, {\n      key: \"jsxParseExpressionContainer\",\n      value: function jsxParseExpressionContainer(node, previousContext) {\n        if (this.match(8)) {\n          node.expression = this.jsxParseEmptyExpression();\n        } else {\n          var expression = this.parseExpression();\n          node.expression = expression;\n        }\n\n        this.setContext(previousContext);\n        this.expect(8);\n        return this.finishNode(node, \"JSXExpressionContainer\");\n      }\n    }, {\n      key: \"jsxParseAttribute\",\n      value: function jsxParseAttribute() {\n        var node = this.startNode();\n\n        if (this.match(5)) {\n          this.setContext(types.brace);\n          this.next();\n          this.expect(21);\n          node.argument = this.parseMaybeAssignAllowIn();\n          this.setContext(types.j_oTag);\n          this.expect(8);\n          return this.finishNode(node, \"JSXSpreadAttribute\");\n        }\n\n        node.name = this.jsxParseNamespacedName();\n        node.value = this.eat(29) ? this.jsxParseAttributeValue() : null;\n        return this.finishNode(node, \"JSXAttribute\");\n      }\n    }, {\n      key: \"jsxParseOpeningElementAt\",\n      value: function jsxParseOpeningElementAt(startPos, startLoc) {\n        var node = this.startNodeAt(startPos, startLoc);\n\n        if (this.match(135)) {\n          this.expect(135);\n          return this.finishNode(node, \"JSXOpeningFragment\");\n        }\n\n        node.name = this.jsxParseElementName();\n        return this.jsxParseOpeningElementAfterName(node);\n      }\n    }, {\n      key: \"jsxParseOpeningElementAfterName\",\n      value: function jsxParseOpeningElementAfterName(node) {\n        var attributes = [];\n\n        while (!this.match(52) && !this.match(135)) {\n          attributes.push(this.jsxParseAttribute());\n        }\n\n        node.attributes = attributes;\n        node.selfClosing = this.eat(52);\n        this.expect(135);\n        return this.finishNode(node, \"JSXOpeningElement\");\n      }\n    }, {\n      key: \"jsxParseClosingElementAt\",\n      value: function jsxParseClosingElementAt(startPos, startLoc) {\n        var node = this.startNodeAt(startPos, startLoc);\n\n        if (this.match(135)) {\n          this.expect(135);\n          return this.finishNode(node, \"JSXClosingFragment\");\n        }\n\n        node.name = this.jsxParseElementName();\n        this.expect(135);\n        return this.finishNode(node, \"JSXClosingElement\");\n      }\n    }, {\n      key: \"jsxParseElementAt\",\n      value: function jsxParseElementAt(startPos, startLoc) {\n        var node = this.startNodeAt(startPos, startLoc);\n        var children = [];\n        var openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n        var closingElement = null;\n\n        if (!openingElement.selfClosing) {\n          contents: for (;;) {\n            switch (this.state.type) {\n              case 134:\n                startPos = this.state.start;\n                startLoc = this.state.startLoc;\n                this.next();\n\n                if (this.eat(52)) {\n                  closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n                  break contents;\n                }\n\n                children.push(this.jsxParseElementAt(startPos, startLoc));\n                break;\n\n              case 133:\n                children.push(this.parseExprAtom());\n                break;\n\n              case 5:\n                {\n                  var _node5 = this.startNode();\n\n                  this.setContext(types.brace);\n                  this.next();\n\n                  if (this.match(21)) {\n                    children.push(this.jsxParseSpreadChild(_node5));\n                  } else {\n                    children.push(this.jsxParseExpressionContainer(_node5, types.j_expr));\n                  }\n\n                  break;\n                }\n\n              default:\n                throw this.unexpected();\n            }\n          }\n\n          if (isFragment(openingElement) && !isFragment(closingElement)) {\n            this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\n          } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n            this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n          } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n            if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n              this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n            }\n          }\n        }\n\n        if (isFragment(openingElement)) {\n          node.openingFragment = openingElement;\n          node.closingFragment = closingElement;\n        } else {\n          node.openingElement = openingElement;\n          node.closingElement = closingElement;\n        }\n\n        node.children = children;\n\n        if (this.match(45)) {\n          throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\n        }\n\n        return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n      }\n    }, {\n      key: \"jsxParseElement\",\n      value: function jsxParseElement() {\n        var startPos = this.state.start;\n        var startLoc = this.state.startLoc;\n        this.next();\n        return this.jsxParseElementAt(startPos, startLoc);\n      }\n    }, {\n      key: \"setContext\",\n      value: function setContext(newContext) {\n        var context = this.state.context;\n        context[context.length - 1] = newContext;\n      }\n    }, {\n      key: \"parseExprAtom\",\n      value: function parseExprAtom(refExpressionErrors) {\n        if (this.match(133)) {\n          return this.parseLiteral(this.state.value, \"JSXText\");\n        } else if (this.match(134)) {\n          return this.jsxParseElement();\n        } else if (this.match(45) && this.input.charCodeAt(this.state.pos) !== 33) {\n          this.replaceToken(134);\n          return this.jsxParseElement();\n        } else {\n          return _get(_getPrototypeOf(_class3.prototype), \"parseExprAtom\", this).call(this, refExpressionErrors);\n        }\n      }\n    }, {\n      key: \"skipSpace\",\n      value: function skipSpace() {\n        var curContext = this.curContext();\n        if (!curContext.preserveSpace) _get(_getPrototypeOf(_class3.prototype), \"skipSpace\", this).call(this);\n      }\n    }, {\n      key: \"getTokenFromCode\",\n      value: function getTokenFromCode(code) {\n        var context = this.curContext();\n\n        if (context === types.j_expr) {\n          return this.jsxReadToken();\n        }\n\n        if (context === types.j_oTag || context === types.j_cTag) {\n          if (isIdentifierStart(code)) {\n            return this.jsxReadWord();\n          }\n\n          if (code === 62) {\n            ++this.state.pos;\n            return this.finishToken(135);\n          }\n\n          if ((code === 34 || code === 39) && context === types.j_oTag) {\n            return this.jsxReadString(code);\n          }\n        }\n\n        if (code === 60 && this.state.canStartJSXElement && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n          ++this.state.pos;\n          return this.finishToken(134);\n        }\n\n        return _get(_getPrototypeOf(_class3.prototype), \"getTokenFromCode\", this).call(this, code);\n      }\n    }, {\n      key: \"updateContext\",\n      value: function updateContext(prevType) {\n        var _this$state = this.state,\n            context = _this$state.context,\n            type = _this$state.type;\n\n        if (type === 52 && prevType === 134) {\n          context.splice(-2, 2, types.j_cTag);\n          this.state.canStartJSXElement = false;\n        } else if (type === 134) {\n          context.push(types.j_oTag);\n        } else if (type === 135) {\n          var out = context[context.length - 1];\n\n          if (out === types.j_oTag && prevType === 52 || out === types.j_cTag) {\n            context.pop();\n            this.state.canStartJSXElement = context[context.length - 1] === types.j_expr;\n          } else {\n            this.setContext(types.j_expr);\n            this.state.canStartJSXElement = true;\n          }\n        } else {\n          this.state.canStartJSXElement = tokenComesBeforeExpression(type);\n        }\n      }\n    }]);\n\n    return _class3;\n  }(superClass);\n};\n\nvar TypeScriptScope = /*#__PURE__*/function (_Scope2) {\n  _inherits(TypeScriptScope, _Scope2);\n\n  var _super12 = _createSuper(TypeScriptScope);\n\n  function TypeScriptScope() {\n    var _this22;\n\n    _classCallCheck(this, TypeScriptScope);\n\n    for (var _len11 = arguments.length, args = new Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {\n      args[_key11] = arguments[_key11];\n    }\n\n    _this22 = _super12.call.apply(_super12, [this].concat(args));\n    _this22.types = new Set();\n    _this22.enums = new Set();\n    _this22.constEnums = new Set();\n    _this22.classes = new Set();\n    _this22.exportOnlyBindings = new Set();\n    return _this22;\n  }\n\n  return _createClass(TypeScriptScope);\n}(Scope);\n\nvar TypeScriptScopeHandler = /*#__PURE__*/function (_ScopeHandler2) {\n  _inherits(TypeScriptScopeHandler, _ScopeHandler2);\n\n  var _super13 = _createSuper(TypeScriptScopeHandler);\n\n  function TypeScriptScopeHandler() {\n    _classCallCheck(this, TypeScriptScopeHandler);\n\n    return _super13.apply(this, arguments);\n  }\n\n  _createClass(TypeScriptScopeHandler, [{\n    key: \"createScope\",\n    value: function createScope(flags) {\n      return new TypeScriptScope(flags);\n    }\n  }, {\n    key: \"declareName\",\n    value: function declareName(name, bindingType, pos) {\n      var scope = this.currentScope();\n\n      if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n        this.maybeExportDefined(scope, name);\n        scope.exportOnlyBindings.add(name);\n        return;\n      }\n\n      _get(_getPrototypeOf(TypeScriptScopeHandler.prototype), \"declareName\", this).apply(this, arguments);\n\n      if (bindingType & BIND_KIND_TYPE) {\n        if (!(bindingType & BIND_KIND_VALUE)) {\n          this.checkRedeclarationInScope(scope, name, bindingType, pos);\n          this.maybeExportDefined(scope, name);\n        }\n\n        scope.types.add(name);\n      }\n\n      if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.add(name);\n      if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.add(name);\n      if (bindingType & BIND_FLAGS_CLASS) scope.classes.add(name);\n    }\n  }, {\n    key: \"isRedeclaredInScope\",\n    value: function isRedeclaredInScope(scope, name, bindingType) {\n      if (scope.enums.has(name)) {\n        if (bindingType & BIND_FLAGS_TS_ENUM) {\n          var isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n          var wasConst = scope.constEnums.has(name);\n          return isConst !== wasConst;\n        }\n\n        return true;\n      }\n\n      if (bindingType & BIND_FLAGS_CLASS && scope.classes.has(name)) {\n        if (scope.lexical.has(name)) {\n          return !!(bindingType & BIND_KIND_VALUE);\n        } else {\n          return false;\n        }\n      }\n\n      if (bindingType & BIND_KIND_TYPE && scope.types.has(name)) {\n        return true;\n      }\n\n      return _get(_getPrototypeOf(TypeScriptScopeHandler.prototype), \"isRedeclaredInScope\", this).apply(this, arguments);\n    }\n  }, {\n    key: \"checkLocalExport\",\n    value: function checkLocalExport(id) {\n      var topLevelScope = this.scopeStack[0];\n      var name = id.name;\n\n      if (!topLevelScope.types.has(name) && !topLevelScope.exportOnlyBindings.has(name)) {\n        _get(_getPrototypeOf(TypeScriptScopeHandler.prototype), \"checkLocalExport\", this).call(this, id);\n      }\n    }\n  }]);\n\n  return TypeScriptScopeHandler;\n}(ScopeHandler);\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(\"Unexpected \".concat(x, \" value.\"));\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nvar TSErrors = makeErrorTemplates({\n  AbstractMethodHasImplementation: \"Method '%0' cannot have an implementation because it is marked abstract.\",\n  AbstractPropertyHasInitializer: \"Property '%0' cannot have an initializer because it is marked abstract.\",\n  AccesorCannotDeclareThisParameter: \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: \"'declare' is not allowed in %0ters.\",\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'.\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  IncompatibleModifiers: \"'%0' modifier cannot be used with '%1' modifier.\",\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0').\",\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride: \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier.\",\n  InvalidModifierOnTypeMember: \"'%0' modifier cannot appear on a type member.\",\n  InvalidModifiersOrder: \"'%0' modifier must precede '%1' modifier.\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MissingInterfaceName: \"'interface' declarations must be followed by an identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass: \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0').\",\n  ReadonlyForMethodSignature: \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  ReservedArrowTypeParam: \"This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma, as in `<T,>() => ...`.\",\n  ReservedTypeAssertion: \"This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.\",\n  SetAccesorCannotHaveOptionalParameter: \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccesorCannotHaveRestParameter: \"A 'set' accessor cannot have rest parameter.\",\n  SetAccesorCannotHaveReturnType: \"A 'set' accessor cannot have a return type annotation.\",\n  StaticBlockCannotHaveModifier: \"Static class blocks cannot have any modifier.\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed: \"A type-only import can specify a default import or named bindings, but not both.\",\n  TypeModifierIsUsedInTypeExports: \"The 'type' modifier cannot be used on a named export when 'export type' is used on its export statement.\",\n  TypeModifierIsUsedInTypeImports: \"The 'type' modifier cannot be used on a named import when 'import type' is used on its import statement.\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0.\"\n}, ErrorCodes.SyntaxError, \"typescript\");\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier) {\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\n}\n\nvar typescript = function typescript(superClass) {\n  return /*#__PURE__*/function (_superClass4) {\n    _inherits(_class4, _superClass4);\n\n    var _super14 = _createSuper(_class4);\n\n    function _class4() {\n      _classCallCheck(this, _class4);\n\n      return _super14.apply(this, arguments);\n    }\n\n    _createClass(_class4, [{\n      key: \"getScopeHandler\",\n      value: function getScopeHandler() {\n        return TypeScriptScopeHandler;\n      }\n    }, {\n      key: \"tsIsIdentifier\",\n      value: function tsIsIdentifier() {\n        return tokenIsIdentifier(this.state.type);\n      }\n    }, {\n      key: \"tsTokenCanFollowModifier\",\n      value: function tsTokenCanFollowModifier() {\n        return (this.match(0) || this.match(5) || this.match(51) || this.match(21) || this.match(130) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n      }\n    }, {\n      key: \"tsNextTokenCanFollowModifier\",\n      value: function tsNextTokenCanFollowModifier() {\n        this.next();\n        return this.tsTokenCanFollowModifier();\n      }\n    }, {\n      key: \"tsParseModifier\",\n      value: function tsParseModifier(allowedModifiers, stopOnStartOfClassStaticBlock) {\n        if (!tokenIsIdentifier(this.state.type)) {\n          return undefined;\n        }\n\n        var modifier = this.state.value;\n\n        if (allowedModifiers.indexOf(modifier) !== -1) {\n          if (stopOnStartOfClassStaticBlock && this.tsIsStartOfStaticBlocks()) {\n            return undefined;\n          }\n\n          if (this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n            return modifier;\n          }\n        }\n\n        return undefined;\n      }\n    }, {\n      key: \"tsParseModifiers\",\n      value: function tsParseModifiers(modified, allowedModifiers, disallowedModifiers, errorTemplate, stopOnStartOfClassStaticBlock) {\n        var _this23 = this;\n\n        var enforceOrder = function enforceOrder(pos, modifier, before, after) {\n          if (modifier === before && modified[after]) {\n            _this23.raise(pos, TSErrors.InvalidModifiersOrder, before, after);\n          }\n        };\n\n        var incompatible = function incompatible(pos, modifier, mod1, mod2) {\n          if (modified[mod1] && modifier === mod2 || modified[mod2] && modifier === mod1) {\n            _this23.raise(pos, TSErrors.IncompatibleModifiers, mod1, mod2);\n          }\n        };\n\n        for (;;) {\n          var startPos = this.state.start;\n          var modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []), stopOnStartOfClassStaticBlock);\n          if (!modifier) break;\n\n          if (tsIsAccessModifier(modifier)) {\n            if (modified.accessibility) {\n              this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n            } else {\n              enforceOrder(startPos, modifier, modifier, \"override\");\n              enforceOrder(startPos, modifier, modifier, \"static\");\n              enforceOrder(startPos, modifier, modifier, \"readonly\");\n              modified.accessibility = modifier;\n            }\n          } else {\n            if (Object.hasOwnProperty.call(modified, modifier)) {\n              this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n            } else {\n              enforceOrder(startPos, modifier, \"static\", \"readonly\");\n              enforceOrder(startPos, modifier, \"static\", \"override\");\n              enforceOrder(startPos, modifier, \"override\", \"readonly\");\n              enforceOrder(startPos, modifier, \"abstract\", \"override\");\n              incompatible(startPos, modifier, \"declare\", \"override\");\n              incompatible(startPos, modifier, \"static\", \"abstract\");\n            }\n\n            modified[modifier] = true;\n          }\n\n          if (disallowedModifiers != null && disallowedModifiers.includes(modifier)) {\n            this.raise(startPos, errorTemplate, modifier);\n          }\n        }\n      }\n    }, {\n      key: \"tsIsListTerminator\",\n      value: function tsIsListTerminator(kind) {\n        switch (kind) {\n          case \"EnumMembers\":\n          case \"TypeMembers\":\n            return this.match(8);\n\n          case \"HeritageClauseElement\":\n            return this.match(5);\n\n          case \"TupleElementTypes\":\n            return this.match(3);\n\n          case \"TypeParametersOrArguments\":\n            return this.match(46);\n        }\n\n        throw new Error(\"Unreachable\");\n      }\n    }, {\n      key: \"tsParseList\",\n      value: function tsParseList(kind, parseElement) {\n        var result = [];\n\n        while (!this.tsIsListTerminator(kind)) {\n          result.push(parseElement());\n        }\n\n        return result;\n      }\n    }, {\n      key: \"tsParseDelimitedList\",\n      value: function tsParseDelimitedList(kind, parseElement, refTrailingCommaPos) {\n        return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true, refTrailingCommaPos));\n      }\n    }, {\n      key: \"tsParseDelimitedListWorker\",\n      value: function tsParseDelimitedListWorker(kind, parseElement, expectSuccess, refTrailingCommaPos) {\n        var result = [];\n        var trailingCommaPos = -1;\n\n        for (;;) {\n          if (this.tsIsListTerminator(kind)) {\n            break;\n          }\n\n          trailingCommaPos = -1;\n          var element = parseElement();\n\n          if (element == null) {\n            return undefined;\n          }\n\n          result.push(element);\n\n          if (this.eat(12)) {\n            trailingCommaPos = this.state.lastTokStart;\n            continue;\n          }\n\n          if (this.tsIsListTerminator(kind)) {\n            break;\n          }\n\n          if (expectSuccess) {\n            this.expect(12);\n          }\n\n          return undefined;\n        }\n\n        if (refTrailingCommaPos) {\n          refTrailingCommaPos.value = trailingCommaPos;\n        }\n\n        return result;\n      }\n    }, {\n      key: \"tsParseBracketedList\",\n      value: function tsParseBracketedList(kind, parseElement, bracket, skipFirstToken, refTrailingCommaPos) {\n        if (!skipFirstToken) {\n          if (bracket) {\n            this.expect(0);\n          } else {\n            this.expect(45);\n          }\n        }\n\n        var result = this.tsParseDelimitedList(kind, parseElement, refTrailingCommaPos);\n\n        if (bracket) {\n          this.expect(3);\n        } else {\n          this.expect(46);\n        }\n\n        return result;\n      }\n    }, {\n      key: \"tsParseImportType\",\n      value: function tsParseImportType() {\n        var node = this.startNode();\n        this.expect(79);\n        this.expect(10);\n\n        if (!this.match(125)) {\n          this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n        }\n\n        node.argument = this.parseExprAtom();\n        this.expect(11);\n\n        if (this.eat(16)) {\n          node.qualifier = this.tsParseEntityName(true);\n        }\n\n        if (this.match(45)) {\n          node.typeParameters = this.tsParseTypeArguments();\n        }\n\n        return this.finishNode(node, \"TSImportType\");\n      }\n    }, {\n      key: \"tsParseEntityName\",\n      value: function tsParseEntityName(allowReservedWords) {\n        var entity = this.parseIdentifier();\n\n        while (this.eat(16)) {\n          var node = this.startNodeAtNode(entity);\n          node.left = entity;\n          node.right = this.parseIdentifier(allowReservedWords);\n          entity = this.finishNode(node, \"TSQualifiedName\");\n        }\n\n        return entity;\n      }\n    }, {\n      key: \"tsParseTypeReference\",\n      value: function tsParseTypeReference() {\n        var node = this.startNode();\n        node.typeName = this.tsParseEntityName(false);\n\n        if (!this.hasPrecedingLineBreak() && this.match(45)) {\n          node.typeParameters = this.tsParseTypeArguments();\n        }\n\n        return this.finishNode(node, \"TSTypeReference\");\n      }\n    }, {\n      key: \"tsParseThisTypePredicate\",\n      value: function tsParseThisTypePredicate(lhs) {\n        this.next();\n        var node = this.startNodeAtNode(lhs);\n        node.parameterName = lhs;\n        node.typeAnnotation = this.tsParseTypeAnnotation(false);\n        node.asserts = false;\n        return this.finishNode(node, \"TSTypePredicate\");\n      }\n    }, {\n      key: \"tsParseThisTypeNode\",\n      value: function tsParseThisTypeNode() {\n        var node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSThisType\");\n      }\n    }, {\n      key: \"tsParseTypeQuery\",\n      value: function tsParseTypeQuery() {\n        var node = this.startNode();\n        this.expect(83);\n\n        if (this.match(79)) {\n          node.exprName = this.tsParseImportType();\n        } else {\n          node.exprName = this.tsParseEntityName(true);\n        }\n\n        return this.finishNode(node, \"TSTypeQuery\");\n      }\n    }, {\n      key: \"tsParseTypeParameter\",\n      value: function tsParseTypeParameter() {\n        var node = this.startNode();\n        node.name = this.tsParseTypeParameterName();\n        node.constraint = this.tsEatThenParseType(77);\n        node.default = this.tsEatThenParseType(29);\n        return this.finishNode(node, \"TSTypeParameter\");\n      }\n    }, {\n      key: \"tsTryParseTypeParameters\",\n      value: function tsTryParseTypeParameters() {\n        if (this.match(45)) {\n          return this.tsParseTypeParameters();\n        }\n      }\n    }, {\n      key: \"tsParseTypeParameters\",\n      value: function tsParseTypeParameters() {\n        var node = this.startNode();\n\n        if (this.match(45) || this.match(134)) {\n          this.next();\n        } else {\n          this.unexpected();\n        }\n\n        var refTrailingCommaPos = {\n          value: -1\n        };\n        node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true, refTrailingCommaPos);\n\n        if (node.params.length === 0) {\n          this.raise(node.start, TSErrors.EmptyTypeParameters);\n        }\n\n        if (refTrailingCommaPos.value !== -1) {\n          this.addExtra(node, \"trailingComma\", refTrailingCommaPos.value);\n        }\n\n        return this.finishNode(node, \"TSTypeParameterDeclaration\");\n      }\n    }, {\n      key: \"tsTryNextParseConstantContext\",\n      value: function tsTryNextParseConstantContext() {\n        if (this.lookahead().type === 71) {\n          this.next();\n          return this.tsParseTypeReference();\n        }\n\n        return null;\n      }\n    }, {\n      key: \"tsFillSignature\",\n      value: function tsFillSignature(returnToken, signature) {\n        var returnTokenRequired = returnToken === 19;\n        signature.typeParameters = this.tsTryParseTypeParameters();\n        this.expect(10);\n        signature.parameters = this.tsParseBindingListForSignature();\n\n        if (returnTokenRequired) {\n          signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n        } else if (this.match(returnToken)) {\n          signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n        }\n      }\n    }, {\n      key: \"tsParseBindingListForSignature\",\n      value: function tsParseBindingListForSignature() {\n        var _this24 = this;\n\n        return this.parseBindingList(11, 41).map(function (pattern) {\n          if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n            _this24.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\n          }\n\n          return pattern;\n        });\n      }\n    }, {\n      key: \"tsParseTypeMemberSemicolon\",\n      value: function tsParseTypeMemberSemicolon() {\n        if (!this.eat(12) && !this.isLineTerminator()) {\n          this.expect(13);\n        }\n      }\n    }, {\n      key: \"tsParseSignatureMember\",\n      value: function tsParseSignatureMember(kind, node) {\n        this.tsFillSignature(14, node);\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(node, kind);\n      }\n    }, {\n      key: \"tsIsUnambiguouslyIndexSignature\",\n      value: function tsIsUnambiguouslyIndexSignature() {\n        this.next();\n\n        if (tokenIsIdentifier(this.state.type)) {\n          this.next();\n          return this.match(14);\n        }\n\n        return false;\n      }\n    }, {\n      key: \"tsTryParseIndexSignature\",\n      value: function tsTryParseIndexSignature(node) {\n        if (!(this.match(0) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n          return undefined;\n        }\n\n        this.expect(0);\n        var id = this.parseIdentifier();\n        id.typeAnnotation = this.tsParseTypeAnnotation();\n        this.resetEndLocation(id);\n        this.expect(3);\n        node.parameters = [id];\n        var type = this.tsTryParseTypeAnnotation();\n        if (type) node.typeAnnotation = type;\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(node, \"TSIndexSignature\");\n      }\n    }, {\n      key: \"tsParsePropertyOrMethodSignature\",\n      value: function tsParsePropertyOrMethodSignature(node, readonly) {\n        if (this.eat(17)) node.optional = true;\n        var nodeAny = node;\n\n        if (this.match(10) || this.match(45)) {\n          if (readonly) {\n            this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\n          }\n\n          var method = nodeAny;\n\n          if (method.kind && this.match(45)) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotHaveTypeParameters);\n          }\n\n          this.tsFillSignature(14, method);\n          this.tsParseTypeMemberSemicolon();\n\n          if (method.kind === \"get\") {\n            if (method.parameters.length > 0) {\n              this.raise(this.state.pos, ErrorMessages.BadGetterArity);\n\n              if (this.isThisParam(method.parameters[0])) {\n                this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n              }\n            }\n          } else if (method.kind === \"set\") {\n            if (method.parameters.length !== 1) {\n              this.raise(this.state.pos, ErrorMessages.BadSetterArity);\n            } else {\n              var firstParameter = method.parameters[0];\n\n              if (this.isThisParam(firstParameter)) {\n                this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n              }\n\n              if (firstParameter.type === \"Identifier\" && firstParameter.optional) {\n                this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveOptionalParameter);\n              }\n\n              if (firstParameter.type === \"RestElement\") {\n                this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveRestParameter);\n              }\n            }\n\n            if (method.typeAnnotation) {\n              this.raise(method.typeAnnotation.start, TSErrors.SetAccesorCannotHaveReturnType);\n            }\n          } else {\n            method.kind = \"method\";\n          }\n\n          return this.finishNode(method, \"TSMethodSignature\");\n        } else {\n          var property = nodeAny;\n          if (readonly) property.readonly = true;\n          var type = this.tsTryParseTypeAnnotation();\n          if (type) property.typeAnnotation = type;\n          this.tsParseTypeMemberSemicolon();\n          return this.finishNode(property, \"TSPropertySignature\");\n        }\n      }\n    }, {\n      key: \"tsParseTypeMember\",\n      value: function tsParseTypeMember() {\n        var node = this.startNode();\n\n        if (this.match(10) || this.match(45)) {\n          return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n        }\n\n        if (this.match(73)) {\n          var id = this.startNode();\n          this.next();\n\n          if (this.match(10) || this.match(45)) {\n            return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n          } else {\n            node.key = this.createIdentifier(id, \"new\");\n            return this.tsParsePropertyOrMethodSignature(node, false);\n          }\n        }\n\n        this.tsParseModifiers(node, [\"readonly\"], [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\", \"override\"], TSErrors.InvalidModifierOnTypeMember);\n        var idx = this.tsTryParseIndexSignature(node);\n\n        if (idx) {\n          return idx;\n        }\n\n        this.parsePropertyName(node);\n\n        if (!node.computed && node.key.type === \"Identifier\" && (node.key.name === \"get\" || node.key.name === \"set\") && this.tsTokenCanFollowModifier()) {\n          node.kind = node.key.name;\n          this.parsePropertyName(node);\n        }\n\n        return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n      }\n    }, {\n      key: \"tsParseTypeLiteral\",\n      value: function tsParseTypeLiteral() {\n        var node = this.startNode();\n        node.members = this.tsParseObjectTypeMembers();\n        return this.finishNode(node, \"TSTypeLiteral\");\n      }\n    }, {\n      key: \"tsParseObjectTypeMembers\",\n      value: function tsParseObjectTypeMembers() {\n        this.expect(5);\n        var members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n        this.expect(8);\n        return members;\n      }\n    }, {\n      key: \"tsIsStartOfMappedType\",\n      value: function tsIsStartOfMappedType() {\n        this.next();\n\n        if (this.eat(49)) {\n          return this.isContextual(114);\n        }\n\n        if (this.isContextual(114)) {\n          this.next();\n        }\n\n        if (!this.match(0)) {\n          return false;\n        }\n\n        this.next();\n\n        if (!this.tsIsIdentifier()) {\n          return false;\n        }\n\n        this.next();\n        return this.match(54);\n      }\n    }, {\n      key: \"tsParseMappedTypeParameter\",\n      value: function tsParseMappedTypeParameter() {\n        var node = this.startNode();\n        node.name = this.tsParseTypeParameterName();\n        node.constraint = this.tsExpectThenParseType(54);\n        return this.finishNode(node, \"TSTypeParameter\");\n      }\n    }, {\n      key: \"tsParseMappedType\",\n      value: function tsParseMappedType() {\n        var node = this.startNode();\n        this.expect(5);\n\n        if (this.match(49)) {\n          node.readonly = this.state.value;\n          this.next();\n          this.expectContextual(114);\n        } else if (this.eatContextual(114)) {\n          node.readonly = true;\n        }\n\n        this.expect(0);\n        node.typeParameter = this.tsParseMappedTypeParameter();\n        node.nameType = this.eatContextual(89) ? this.tsParseType() : null;\n        this.expect(3);\n\n        if (this.match(49)) {\n          node.optional = this.state.value;\n          this.next();\n          this.expect(17);\n        } else if (this.eat(17)) {\n          node.optional = true;\n        }\n\n        node.typeAnnotation = this.tsTryParseType();\n        this.semicolon();\n        this.expect(8);\n        return this.finishNode(node, \"TSMappedType\");\n      }\n    }, {\n      key: \"tsParseTupleType\",\n      value: function tsParseTupleType() {\n        var _this25 = this;\n\n        var node = this.startNode();\n        node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n        var seenOptionalElement = false;\n        var labeledElements = null;\n        node.elementTypes.forEach(function (elementNode) {\n          var _labeledElements;\n\n          var _elementNode = elementNode,\n              type = _elementNode.type;\n\n          if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n            _this25.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n          }\n\n          seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\n\n          if (type === \"TSRestType\") {\n            elementNode = elementNode.typeAnnotation;\n            type = elementNode.type;\n          }\n\n          var isLabeled = type === \"TSNamedTupleMember\";\n          labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\n\n          if (labeledElements !== isLabeled) {\n            _this25.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\n          }\n        });\n        return this.finishNode(node, \"TSTupleType\");\n      }\n    }, {\n      key: \"tsParseTupleElementType\",\n      value: function tsParseTupleElementType() {\n        var _this$state2 = this.state,\n            startPos = _this$state2.start,\n            startLoc = _this$state2.startLoc;\n        var rest = this.eat(21);\n        var type = this.tsParseType();\n        var optional = this.eat(17);\n        var labeled = this.eat(14);\n\n        if (labeled) {\n          var labeledNode = this.startNodeAtNode(type);\n          labeledNode.optional = optional;\n\n          if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n            labeledNode.label = type.typeName;\n          } else {\n            this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n            labeledNode.label = type;\n          }\n\n          labeledNode.elementType = this.tsParseType();\n          type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n        } else if (optional) {\n          var optionalTypeNode = this.startNodeAtNode(type);\n          optionalTypeNode.typeAnnotation = type;\n          type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n        }\n\n        if (rest) {\n          var restNode = this.startNodeAt(startPos, startLoc);\n          restNode.typeAnnotation = type;\n          type = this.finishNode(restNode, \"TSRestType\");\n        }\n\n        return type;\n      }\n    }, {\n      key: \"tsParseParenthesizedType\",\n      value: function tsParseParenthesizedType() {\n        var node = this.startNode();\n        this.expect(10);\n        node.typeAnnotation = this.tsParseType();\n        this.expect(11);\n        return this.finishNode(node, \"TSParenthesizedType\");\n      }\n    }, {\n      key: \"tsParseFunctionOrConstructorType\",\n      value: function tsParseFunctionOrConstructorType(type, abstract) {\n        var node = this.startNode();\n\n        if (type === \"TSConstructorType\") {\n          node.abstract = !!abstract;\n          if (abstract) this.next();\n          this.next();\n        }\n\n        this.tsFillSignature(19, node);\n        return this.finishNode(node, type);\n      }\n    }, {\n      key: \"tsParseLiteralTypeNode\",\n      value: function tsParseLiteralTypeNode() {\n        var _this26 = this;\n\n        var node = this.startNode();\n\n        node.literal = function () {\n          switch (_this26.state.type) {\n            case 126:\n            case 127:\n            case 125:\n            case 81:\n            case 82:\n              return _this26.parseExprAtom();\n\n            default:\n              throw _this26.unexpected();\n          }\n        }();\n\n        return this.finishNode(node, \"TSLiteralType\");\n      }\n    }, {\n      key: \"tsParseTemplateLiteralType\",\n      value: function tsParseTemplateLiteralType() {\n        var node = this.startNode();\n        node.literal = this.parseTemplate(false);\n        return this.finishNode(node, \"TSLiteralType\");\n      }\n    }, {\n      key: \"parseTemplateSubstitution\",\n      value: function parseTemplateSubstitution() {\n        if (this.state.inType) return this.tsParseType();\n        return _get(_getPrototypeOf(_class4.prototype), \"parseTemplateSubstitution\", this).call(this);\n      }\n    }, {\n      key: \"tsParseThisTypeOrThisTypePredicate\",\n      value: function tsParseThisTypeOrThisTypePredicate() {\n        var thisKeyword = this.tsParseThisTypeNode();\n\n        if (this.isContextual(109) && !this.hasPrecedingLineBreak()) {\n          return this.tsParseThisTypePredicate(thisKeyword);\n        } else {\n          return thisKeyword;\n        }\n      }\n    }, {\n      key: \"tsParseNonArrayType\",\n      value: function tsParseNonArrayType() {\n        switch (this.state.type) {\n          case 125:\n          case 126:\n          case 127:\n          case 81:\n          case 82:\n            return this.tsParseLiteralTypeNode();\n\n          case 49:\n            if (this.state.value === \"-\") {\n              var node = this.startNode();\n              var nextToken = this.lookahead();\n\n              if (nextToken.type !== 126 && nextToken.type !== 127) {\n                throw this.unexpected();\n              }\n\n              node.literal = this.parseMaybeUnary();\n              return this.finishNode(node, \"TSLiteralType\");\n            }\n\n            break;\n\n          case 74:\n            return this.tsParseThisTypeOrThisTypePredicate();\n\n          case 83:\n            return this.tsParseTypeQuery();\n\n          case 79:\n            return this.tsParseImportType();\n\n          case 5:\n            return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n          case 0:\n            return this.tsParseTupleType();\n\n          case 10:\n            return this.tsParseParenthesizedType();\n\n          case 25:\n          case 24:\n            return this.tsParseTemplateLiteralType();\n\n          default:\n            {\n              var type = this.state.type;\n\n              if (tokenIsIdentifier(type) || type === 84 || type === 80) {\n                var nodeType = type === 84 ? \"TSVoidKeyword\" : type === 80 ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n                if (nodeType !== undefined && this.lookaheadCharCode() !== 46) {\n                  var _node6 = this.startNode();\n\n                  this.next();\n                  return this.finishNode(_node6, nodeType);\n                }\n\n                return this.tsParseTypeReference();\n              }\n            }\n        }\n\n        throw this.unexpected();\n      }\n    }, {\n      key: \"tsParseArrayTypeOrHigher\",\n      value: function tsParseArrayTypeOrHigher() {\n        var type = this.tsParseNonArrayType();\n\n        while (!this.hasPrecedingLineBreak() && this.eat(0)) {\n          if (this.match(3)) {\n            var node = this.startNodeAtNode(type);\n            node.elementType = type;\n            this.expect(3);\n            type = this.finishNode(node, \"TSArrayType\");\n          } else {\n            var _node7 = this.startNodeAtNode(type);\n\n            _node7.objectType = type;\n            _node7.indexType = this.tsParseType();\n            this.expect(3);\n            type = this.finishNode(_node7, \"TSIndexedAccessType\");\n          }\n        }\n\n        return type;\n      }\n    }, {\n      key: \"tsParseTypeOperator\",\n      value: function tsParseTypeOperator() {\n        var node = this.startNode();\n        var operator = this.state.value;\n        this.next();\n        node.operator = operator;\n        node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n        if (operator === \"readonly\") {\n          this.tsCheckTypeAnnotationForReadOnly(node);\n        }\n\n        return this.finishNode(node, \"TSTypeOperator\");\n      }\n    }, {\n      key: \"tsCheckTypeAnnotationForReadOnly\",\n      value: function tsCheckTypeAnnotationForReadOnly(node) {\n        switch (node.typeAnnotation.type) {\n          case \"TSTupleType\":\n          case \"TSArrayType\":\n            return;\n\n          default:\n            this.raise(node.start, TSErrors.UnexpectedReadonly);\n        }\n      }\n    }, {\n      key: \"tsParseInferType\",\n      value: function tsParseInferType() {\n        var node = this.startNode();\n        this.expectContextual(108);\n        var typeParameter = this.startNode();\n        typeParameter.name = this.tsParseTypeParameterName();\n        node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n        return this.finishNode(node, \"TSInferType\");\n      }\n    }, {\n      key: \"tsParseTypeOperatorOrHigher\",\n      value: function tsParseTypeOperatorOrHigher() {\n        var isTypeOperator = tokenIsTSTypeOperator(this.state.type) && !this.state.containsEsc;\n        return isTypeOperator ? this.tsParseTypeOperator() : this.isContextual(108) ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n      }\n    }, {\n      key: \"tsParseUnionOrIntersectionType\",\n      value: function tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n        var node = this.startNode();\n        var hasLeadingOperator = this.eat(operator);\n        var types = [];\n\n        do {\n          types.push(parseConstituentType());\n        } while (this.eat(operator));\n\n        if (types.length === 1 && !hasLeadingOperator) {\n          return types[0];\n        }\n\n        node.types = types;\n        return this.finishNode(node, kind);\n      }\n    }, {\n      key: \"tsParseIntersectionTypeOrHigher\",\n      value: function tsParseIntersectionTypeOrHigher() {\n        return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), 43);\n      }\n    }, {\n      key: \"tsParseUnionTypeOrHigher\",\n      value: function tsParseUnionTypeOrHigher() {\n        return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), 41);\n      }\n    }, {\n      key: \"tsIsStartOfFunctionType\",\n      value: function tsIsStartOfFunctionType() {\n        if (this.match(45)) {\n          return true;\n        }\n\n        return this.match(10) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n      }\n    }, {\n      key: \"tsSkipParameterStart\",\n      value: function tsSkipParameterStart() {\n        if (tokenIsIdentifier(this.state.type) || this.match(74)) {\n          this.next();\n          return true;\n        }\n\n        if (this.match(5)) {\n          var braceStackCounter = 1;\n          this.next();\n\n          while (braceStackCounter > 0) {\n            if (this.match(5)) {\n              ++braceStackCounter;\n            } else if (this.match(8)) {\n              --braceStackCounter;\n            }\n\n            this.next();\n          }\n\n          return true;\n        }\n\n        if (this.match(0)) {\n          var _braceStackCounter = 1;\n          this.next();\n\n          while (_braceStackCounter > 0) {\n            if (this.match(0)) {\n              ++_braceStackCounter;\n            } else if (this.match(3)) {\n              --_braceStackCounter;\n            }\n\n            this.next();\n          }\n\n          return true;\n        }\n\n        return false;\n      }\n    }, {\n      key: \"tsIsUnambiguouslyStartOfFunctionType\",\n      value: function tsIsUnambiguouslyStartOfFunctionType() {\n        this.next();\n\n        if (this.match(11) || this.match(21)) {\n          return true;\n        }\n\n        if (this.tsSkipParameterStart()) {\n          if (this.match(14) || this.match(12) || this.match(17) || this.match(29)) {\n            return true;\n          }\n\n          if (this.match(11)) {\n            this.next();\n\n            if (this.match(19)) {\n              return true;\n            }\n          }\n        }\n\n        return false;\n      }\n    }, {\n      key: \"tsParseTypeOrTypePredicateAnnotation\",\n      value: function tsParseTypeOrTypePredicateAnnotation(returnToken) {\n        var _this27 = this;\n\n        return this.tsInType(function () {\n          var t = _this27.startNode();\n\n          _this27.expect(returnToken);\n\n          var node = _this27.startNode();\n\n          var asserts = !!_this27.tsTryParse(_this27.tsParseTypePredicateAsserts.bind(_this27));\n\n          if (asserts && _this27.match(74)) {\n            var thisTypePredicate = _this27.tsParseThisTypeOrThisTypePredicate();\n\n            if (thisTypePredicate.type === \"TSThisType\") {\n              node.parameterName = thisTypePredicate;\n              node.asserts = true;\n              node.typeAnnotation = null;\n              thisTypePredicate = _this27.finishNode(node, \"TSTypePredicate\");\n            } else {\n              _this27.resetStartLocationFromNode(thisTypePredicate, node);\n\n              thisTypePredicate.asserts = true;\n            }\n\n            t.typeAnnotation = thisTypePredicate;\n            return _this27.finishNode(t, \"TSTypeAnnotation\");\n          }\n\n          var typePredicateVariable = _this27.tsIsIdentifier() && _this27.tsTryParse(_this27.tsParseTypePredicatePrefix.bind(_this27));\n\n          if (!typePredicateVariable) {\n            if (!asserts) {\n              return _this27.tsParseTypeAnnotation(false, t);\n            }\n\n            node.parameterName = _this27.parseIdentifier();\n            node.asserts = asserts;\n            node.typeAnnotation = null;\n            t.typeAnnotation = _this27.finishNode(node, \"TSTypePredicate\");\n            return _this27.finishNode(t, \"TSTypeAnnotation\");\n          }\n\n          var type = _this27.tsParseTypeAnnotation(false);\n\n          node.parameterName = typePredicateVariable;\n          node.typeAnnotation = type;\n          node.asserts = asserts;\n          t.typeAnnotation = _this27.finishNode(node, \"TSTypePredicate\");\n          return _this27.finishNode(t, \"TSTypeAnnotation\");\n        });\n      }\n    }, {\n      key: \"tsTryParseTypeOrTypePredicateAnnotation\",\n      value: function tsTryParseTypeOrTypePredicateAnnotation() {\n        return this.match(14) ? this.tsParseTypeOrTypePredicateAnnotation(14) : undefined;\n      }\n    }, {\n      key: \"tsTryParseTypeAnnotation\",\n      value: function tsTryParseTypeAnnotation() {\n        return this.match(14) ? this.tsParseTypeAnnotation() : undefined;\n      }\n    }, {\n      key: \"tsTryParseType\",\n      value: function tsTryParseType() {\n        return this.tsEatThenParseType(14);\n      }\n    }, {\n      key: \"tsParseTypePredicatePrefix\",\n      value: function tsParseTypePredicatePrefix() {\n        var id = this.parseIdentifier();\n\n        if (this.isContextual(109) && !this.hasPrecedingLineBreak()) {\n          this.next();\n          return id;\n        }\n      }\n    }, {\n      key: \"tsParseTypePredicateAsserts\",\n      value: function tsParseTypePredicateAsserts() {\n        if (this.state.type !== 102) {\n          return false;\n        }\n\n        var containsEsc = this.state.containsEsc;\n        this.next();\n\n        if (!tokenIsIdentifier(this.state.type) && !this.match(74)) {\n          return false;\n        }\n\n        if (containsEsc) {\n          this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\n        }\n\n        return true;\n      }\n    }, {\n      key: \"tsParseTypeAnnotation\",\n      value: function tsParseTypeAnnotation() {\n        var _this28 = this;\n\n        var eatColon = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n        var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.startNode();\n        this.tsInType(function () {\n          if (eatColon) _this28.expect(14);\n          t.typeAnnotation = _this28.tsParseType();\n        });\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n    }, {\n      key: \"tsParseType\",\n      value: function tsParseType() {\n        assert(this.state.inType);\n        var type = this.tsParseNonConditionalType();\n\n        if (this.hasPrecedingLineBreak() || !this.eat(77)) {\n          return type;\n        }\n\n        var node = this.startNodeAtNode(type);\n        node.checkType = type;\n        node.extendsType = this.tsParseNonConditionalType();\n        this.expect(17);\n        node.trueType = this.tsParseType();\n        this.expect(14);\n        node.falseType = this.tsParseType();\n        return this.finishNode(node, \"TSConditionalType\");\n      }\n    }, {\n      key: \"isAbstractConstructorSignature\",\n      value: function isAbstractConstructorSignature() {\n        return this.isContextual(116) && this.lookahead().type === 73;\n      }\n    }, {\n      key: \"tsParseNonConditionalType\",\n      value: function tsParseNonConditionalType() {\n        if (this.tsIsStartOfFunctionType()) {\n          return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n        }\n\n        if (this.match(73)) {\n          return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n        } else if (this.isAbstractConstructorSignature()) {\n          return this.tsParseFunctionOrConstructorType(\"TSConstructorType\", true);\n        }\n\n        return this.tsParseUnionTypeOrHigher();\n      }\n    }, {\n      key: \"tsParseTypeAssertion\",\n      value: function tsParseTypeAssertion() {\n        if (this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")) {\n          this.raise(this.state.start, TSErrors.ReservedTypeAssertion);\n        }\n\n        var node = this.startNode();\n\n        var _const = this.tsTryNextParseConstantContext();\n\n        node.typeAnnotation = _const || this.tsNextThenParseType();\n        this.expect(46);\n        node.expression = this.parseMaybeUnary();\n        return this.finishNode(node, \"TSTypeAssertion\");\n      }\n    }, {\n      key: \"tsParseHeritageClause\",\n      value: function tsParseHeritageClause(descriptor) {\n        var originalStart = this.state.start;\n        var delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\n\n        if (!delimitedList.length) {\n          this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n        }\n\n        return delimitedList;\n      }\n    }, {\n      key: \"tsParseExpressionWithTypeArguments\",\n      value: function tsParseExpressionWithTypeArguments() {\n        var node = this.startNode();\n        node.expression = this.tsParseEntityName(false);\n\n        if (this.match(45)) {\n          node.typeParameters = this.tsParseTypeArguments();\n        }\n\n        return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n      }\n    }, {\n      key: \"tsParseInterfaceDeclaration\",\n      value: function tsParseInterfaceDeclaration(node) {\n        if (tokenIsIdentifier(this.state.type)) {\n          node.id = this.parseIdentifier();\n          this.checkLVal(node.id, \"typescript interface declaration\", BIND_TS_INTERFACE);\n        } else {\n          node.id = null;\n          this.raise(this.state.start, TSErrors.MissingInterfaceName);\n        }\n\n        node.typeParameters = this.tsTryParseTypeParameters();\n\n        if (this.eat(77)) {\n          node.extends = this.tsParseHeritageClause(\"extends\");\n        }\n\n        var body = this.startNode();\n        body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n        node.body = this.finishNode(body, \"TSInterfaceBody\");\n        return this.finishNode(node, \"TSInterfaceDeclaration\");\n      }\n    }, {\n      key: \"tsParseTypeAliasDeclaration\",\n      value: function tsParseTypeAliasDeclaration(node) {\n        var _this29 = this;\n\n        node.id = this.parseIdentifier();\n        this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n        node.typeParameters = this.tsTryParseTypeParameters();\n        node.typeAnnotation = this.tsInType(function () {\n          _this29.expect(29);\n\n          if (_this29.isContextual(107) && _this29.lookahead().type !== 16) {\n            var _node8 = _this29.startNode();\n\n            _this29.next();\n\n            return _this29.finishNode(_node8, \"TSIntrinsicKeyword\");\n          }\n\n          return _this29.tsParseType();\n        });\n        this.semicolon();\n        return this.finishNode(node, \"TSTypeAliasDeclaration\");\n      }\n    }, {\n      key: \"tsInNoContext\",\n      value: function tsInNoContext(cb) {\n        var oldContext = this.state.context;\n        this.state.context = [oldContext[0]];\n\n        try {\n          return cb();\n        } finally {\n          this.state.context = oldContext;\n        }\n      }\n    }, {\n      key: \"tsInType\",\n      value: function tsInType(cb) {\n        var oldInType = this.state.inType;\n        this.state.inType = true;\n\n        try {\n          return cb();\n        } finally {\n          this.state.inType = oldInType;\n        }\n      }\n    }, {\n      key: \"tsEatThenParseType\",\n      value: function tsEatThenParseType(token) {\n        return !this.match(token) ? undefined : this.tsNextThenParseType();\n      }\n    }, {\n      key: \"tsExpectThenParseType\",\n      value: function tsExpectThenParseType(token) {\n        var _this30 = this;\n\n        return this.tsDoThenParseType(function () {\n          return _this30.expect(token);\n        });\n      }\n    }, {\n      key: \"tsNextThenParseType\",\n      value: function tsNextThenParseType() {\n        var _this31 = this;\n\n        return this.tsDoThenParseType(function () {\n          return _this31.next();\n        });\n      }\n    }, {\n      key: \"tsDoThenParseType\",\n      value: function tsDoThenParseType(cb) {\n        var _this32 = this;\n\n        return this.tsInType(function () {\n          cb();\n          return _this32.tsParseType();\n        });\n      }\n    }, {\n      key: \"tsParseEnumMember\",\n      value: function tsParseEnumMember() {\n        var node = this.startNode();\n        node.id = this.match(125) ? this.parseExprAtom() : this.parseIdentifier(true);\n\n        if (this.eat(29)) {\n          node.initializer = this.parseMaybeAssignAllowIn();\n        }\n\n        return this.finishNode(node, \"TSEnumMember\");\n      }\n    }, {\n      key: \"tsParseEnumDeclaration\",\n      value: function tsParseEnumDeclaration(node, isConst) {\n        if (isConst) node.const = true;\n        node.id = this.parseIdentifier();\n        this.checkLVal(node.id, \"typescript enum declaration\", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n        this.expect(5);\n        node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n        this.expect(8);\n        return this.finishNode(node, \"TSEnumDeclaration\");\n      }\n    }, {\n      key: \"tsParseModuleBlock\",\n      value: function tsParseModuleBlock() {\n        var node = this.startNode();\n        this.scope.enter(SCOPE_OTHER);\n        this.expect(5);\n        this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, 8);\n        this.scope.exit();\n        return this.finishNode(node, \"TSModuleBlock\");\n      }\n    }, {\n      key: \"tsParseModuleOrNamespaceDeclaration\",\n      value: function tsParseModuleOrNamespaceDeclaration(node) {\n        var nested = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        node.id = this.parseIdentifier();\n\n        if (!nested) {\n          this.checkLVal(node.id, \"module or namespace declaration\", BIND_TS_NAMESPACE);\n        }\n\n        if (this.eat(16)) {\n          var inner = this.startNode();\n          this.tsParseModuleOrNamespaceDeclaration(inner, true);\n          node.body = inner;\n        } else {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          node.body = this.tsParseModuleBlock();\n          this.prodParam.exit();\n          this.scope.exit();\n        }\n\n        return this.finishNode(node, \"TSModuleDeclaration\");\n      }\n    }, {\n      key: \"tsParseAmbientExternalModuleDeclaration\",\n      value: function tsParseAmbientExternalModuleDeclaration(node) {\n        if (this.isContextual(105)) {\n          node.global = true;\n          node.id = this.parseIdentifier();\n        } else if (this.match(125)) {\n          node.id = this.parseExprAtom();\n        } else {\n          this.unexpected();\n        }\n\n        if (this.match(5)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          node.body = this.tsParseModuleBlock();\n          this.prodParam.exit();\n          this.scope.exit();\n        } else {\n          this.semicolon();\n        }\n\n        return this.finishNode(node, \"TSModuleDeclaration\");\n      }\n    }, {\n      key: \"tsParseImportEqualsDeclaration\",\n      value: function tsParseImportEqualsDeclaration(node, isExport) {\n        node.isExport = isExport || false;\n        node.id = this.parseIdentifier();\n        this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n        this.expect(29);\n        var moduleReference = this.tsParseModuleReference();\n\n        if (node.importKind === \"type\" && moduleReference.type !== \"TSExternalModuleReference\") {\n          this.raise(moduleReference.start, TSErrors.ImportAliasHasImportType);\n        }\n\n        node.moduleReference = moduleReference;\n        this.semicolon();\n        return this.finishNode(node, \"TSImportEqualsDeclaration\");\n      }\n    }, {\n      key: \"tsIsExternalModuleReference\",\n      value: function tsIsExternalModuleReference() {\n        return this.isContextual(112) && this.lookaheadCharCode() === 40;\n      }\n    }, {\n      key: \"tsParseModuleReference\",\n      value: function tsParseModuleReference() {\n        return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n      }\n    }, {\n      key: \"tsParseExternalModuleReference\",\n      value: function tsParseExternalModuleReference() {\n        var node = this.startNode();\n        this.expectContextual(112);\n        this.expect(10);\n\n        if (!this.match(125)) {\n          throw this.unexpected();\n        }\n\n        node.expression = this.parseExprAtom();\n        this.expect(11);\n        return this.finishNode(node, \"TSExternalModuleReference\");\n      }\n    }, {\n      key: \"tsLookAhead\",\n      value: function tsLookAhead(f) {\n        var state = this.state.clone();\n        var res = f();\n        this.state = state;\n        return res;\n      }\n    }, {\n      key: \"tsTryParseAndCatch\",\n      value: function tsTryParseAndCatch(f) {\n        var result = this.tryParse(function (abort) {\n          return f() || abort();\n        });\n        if (result.aborted || !result.node) return undefined;\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n    }, {\n      key: \"tsTryParse\",\n      value: function tsTryParse(f) {\n        var state = this.state.clone();\n        var result = f();\n\n        if (result !== undefined && result !== false) {\n          return result;\n        } else {\n          this.state = state;\n          return undefined;\n        }\n      }\n    }, {\n      key: \"tsTryParseDeclare\",\n      value: function tsTryParseDeclare(nany) {\n        var _this33 = this;\n\n        if (this.isLineTerminator()) {\n          return;\n        }\n\n        var starttype = this.state.type;\n        var kind;\n\n        if (this.isContextual(95)) {\n          starttype = 70;\n          kind = \"let\";\n        }\n\n        return this.tsInAmbientContext(function () {\n          switch (starttype) {\n            case 64:\n              nany.declare = true;\n              return _this33.parseFunctionStatement(nany, false, true);\n\n            case 76:\n              nany.declare = true;\n              return _this33.parseClass(nany, true, false);\n\n            case 71:\n              if (_this33.match(71) && _this33.isLookaheadContextual(\"enum\")) {\n                _this33.expect(71);\n\n                _this33.expectContextual(118);\n\n                return _this33.tsParseEnumDeclaration(nany, true);\n              }\n\n            case 70:\n              kind = kind || _this33.state.value;\n              return _this33.parseVarStatement(nany, kind);\n\n            case 105:\n              return _this33.tsParseAmbientExternalModuleDeclaration(nany);\n\n            default:\n              {\n                if (tokenIsIdentifier(starttype)) {\n                  return _this33.tsParseDeclaration(nany, _this33.state.value, true);\n                }\n              }\n          }\n        });\n      }\n    }, {\n      key: \"tsTryParseExportDeclaration\",\n      value: function tsTryParseExportDeclaration() {\n        return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n      }\n    }, {\n      key: \"tsParseExpressionStatement\",\n      value: function tsParseExpressionStatement(node, expr) {\n        switch (expr.name) {\n          case \"declare\":\n            {\n              var declaration = this.tsTryParseDeclare(node);\n\n              if (declaration) {\n                declaration.declare = true;\n                return declaration;\n              }\n\n              break;\n            }\n\n          case \"global\":\n            if (this.match(5)) {\n              this.scope.enter(SCOPE_TS_MODULE);\n              this.prodParam.enter(PARAM);\n              var mod = node;\n              mod.global = true;\n              mod.id = expr;\n              mod.body = this.tsParseModuleBlock();\n              this.scope.exit();\n              this.prodParam.exit();\n              return this.finishNode(mod, \"TSModuleDeclaration\");\n            }\n\n            break;\n\n          default:\n            return this.tsParseDeclaration(node, expr.name, false);\n        }\n      }\n    }, {\n      key: \"tsParseDeclaration\",\n      value: function tsParseDeclaration(node, value, next) {\n        switch (value) {\n          case \"abstract\":\n            if (this.tsCheckLineTerminator(next) && (this.match(76) || tokenIsIdentifier(this.state.type))) {\n              return this.tsParseAbstractDeclaration(node);\n            }\n\n            break;\n\n          case \"enum\":\n            if (next || tokenIsIdentifier(this.state.type)) {\n              if (next) this.next();\n              return this.tsParseEnumDeclaration(node, false);\n            }\n\n            break;\n\n          case \"interface\":\n            if (this.tsCheckLineTerminator(next) && tokenIsIdentifier(this.state.type)) {\n              return this.tsParseInterfaceDeclaration(node);\n            }\n\n            break;\n\n          case \"module\":\n            if (this.tsCheckLineTerminator(next)) {\n              if (this.match(125)) {\n                return this.tsParseAmbientExternalModuleDeclaration(node);\n              } else if (tokenIsIdentifier(this.state.type)) {\n                return this.tsParseModuleOrNamespaceDeclaration(node);\n              }\n            }\n\n            break;\n\n          case \"namespace\":\n            if (this.tsCheckLineTerminator(next) && tokenIsIdentifier(this.state.type)) {\n              return this.tsParseModuleOrNamespaceDeclaration(node);\n            }\n\n            break;\n\n          case \"type\":\n            if (this.tsCheckLineTerminator(next) && tokenIsIdentifier(this.state.type)) {\n              return this.tsParseTypeAliasDeclaration(node);\n            }\n\n            break;\n        }\n      }\n    }, {\n      key: \"tsCheckLineTerminator\",\n      value: function tsCheckLineTerminator(next) {\n        if (next) {\n          if (this.hasFollowingLineBreak()) return false;\n          this.next();\n          return true;\n        }\n\n        return !this.isLineTerminator();\n      }\n    }, {\n      key: \"tsTryParseGenericAsyncArrowFunction\",\n      value: function tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n        var _this34 = this;\n\n        if (!this.match(45)) {\n          return undefined;\n        }\n\n        var oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n        this.state.maybeInArrowParameters = true;\n        var res = this.tsTryParseAndCatch(function () {\n          var node = _this34.startNodeAt(startPos, startLoc);\n\n          node.typeParameters = _this34.tsParseTypeParameters();\n\n          _get(_getPrototypeOf(_class4.prototype), \"parseFunctionParams\", _this34).call(_this34, node);\n\n          node.returnType = _this34.tsTryParseTypeOrTypePredicateAnnotation();\n\n          _this34.expect(19);\n\n          return node;\n        });\n        this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n        if (!res) {\n          return undefined;\n        }\n\n        return this.parseArrowExpression(res, null, true);\n      }\n    }, {\n      key: \"tsParseTypeArguments\",\n      value: function tsParseTypeArguments() {\n        var _this35 = this;\n\n        var node = this.startNode();\n        node.params = this.tsInType(function () {\n          return _this35.tsInNoContext(function () {\n            _this35.expect(45);\n\n            return _this35.tsParseDelimitedList(\"TypeParametersOrArguments\", _this35.tsParseType.bind(_this35));\n          });\n        });\n\n        if (node.params.length === 0) {\n          this.raise(node.start, TSErrors.EmptyTypeArguments);\n        }\n\n        this.expect(46);\n        return this.finishNode(node, \"TSTypeParameterInstantiation\");\n      }\n    }, {\n      key: \"tsIsDeclarationStart\",\n      value: function tsIsDeclarationStart() {\n        return tokenIsTSDeclarationStart(this.state.type);\n      }\n    }, {\n      key: \"isExportDefaultSpecifier\",\n      value: function isExportDefaultSpecifier() {\n        if (this.tsIsDeclarationStart()) return false;\n        return _get(_getPrototypeOf(_class4.prototype), \"isExportDefaultSpecifier\", this).call(this);\n      }\n    }, {\n      key: \"parseAssignableListItem\",\n      value: function parseAssignableListItem(allowModifiers, decorators) {\n        var startPos = this.state.start;\n        var startLoc = this.state.startLoc;\n        var accessibility;\n        var readonly = false;\n        var override = false;\n\n        if (allowModifiers !== undefined) {\n          var modified = {};\n          this.tsParseModifiers(modified, [\"public\", \"private\", \"protected\", \"override\", \"readonly\"]);\n          accessibility = modified.accessibility;\n          override = modified.override;\n          readonly = modified.readonly;\n\n          if (allowModifiers === false && (accessibility || readonly || override)) {\n            this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n          }\n        }\n\n        var left = this.parseMaybeDefault();\n        this.parseAssignableListItemTypes(left);\n        var elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n        if (accessibility || readonly || override) {\n          var pp = this.startNodeAt(startPos, startLoc);\n\n          if (decorators.length) {\n            pp.decorators = decorators;\n          }\n\n          if (accessibility) pp.accessibility = accessibility;\n          if (readonly) pp.readonly = readonly;\n          if (override) pp.override = override;\n\n          if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n            this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n          }\n\n          pp.parameter = elt;\n          return this.finishNode(pp, \"TSParameterProperty\");\n        }\n\n        if (decorators.length) {\n          left.decorators = decorators;\n        }\n\n        return elt;\n      }\n    }, {\n      key: \"parseFunctionBodyAndFinish\",\n      value: function parseFunctionBodyAndFinish(node, type) {\n        var isMethod = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n        if (this.match(14)) {\n          node.returnType = this.tsParseTypeOrTypePredicateAnnotation(14);\n        }\n\n        var bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" || type === \"ClassPrivateMethod\" ? \"TSDeclareMethod\" : undefined;\n\n        if (bodilessType && !this.match(5) && this.isLineTerminator()) {\n          this.finishNode(node, bodilessType);\n          return;\n        }\n\n        if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n          this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n\n          if (node.declare) {\n            _get(_getPrototypeOf(_class4.prototype), \"parseFunctionBodyAndFinish\", this).call(this, node, bodilessType, isMethod);\n\n            return;\n          }\n        }\n\n        _get(_getPrototypeOf(_class4.prototype), \"parseFunctionBodyAndFinish\", this).call(this, node, type, isMethod);\n      }\n    }, {\n      key: \"registerFunctionStatementId\",\n      value: function registerFunctionStatementId(node) {\n        if (!node.body && node.id) {\n          this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n        } else {\n          _get(_getPrototypeOf(_class4.prototype), \"registerFunctionStatementId\", this).apply(this, arguments);\n        }\n      }\n    }, {\n      key: \"tsCheckForInvalidTypeCasts\",\n      value: function tsCheckForInvalidTypeCasts(items) {\n        var _this36 = this;\n\n        items.forEach(function (node) {\n          if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n            _this36.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);\n          }\n        });\n      }\n    }, {\n      key: \"toReferencedList\",\n      value: function toReferencedList(exprList, isInParens) {\n        this.tsCheckForInvalidTypeCasts(exprList);\n        return exprList;\n      }\n    }, {\n      key: \"parseArrayLike\",\n      value: function parseArrayLike() {\n        var _get7;\n\n        for (var _len12 = arguments.length, args = new Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {\n          args[_key12] = arguments[_key12];\n        }\n\n        var node = (_get7 = _get(_getPrototypeOf(_class4.prototype), \"parseArrayLike\", this)).call.apply(_get7, [this].concat(args));\n\n        if (node.type === \"ArrayExpression\") {\n          this.tsCheckForInvalidTypeCasts(node.elements);\n        }\n\n        return node;\n      }\n    }, {\n      key: \"parseSubscript\",\n      value: function parseSubscript(base, startPos, startLoc, noCalls, state) {\n        var _this37 = this;\n\n        if (!this.hasPrecedingLineBreak() && this.match(35)) {\n          this.state.canStartJSXElement = false;\n          this.next();\n          var nonNullExpression = this.startNodeAt(startPos, startLoc);\n          nonNullExpression.expression = base;\n          return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n        }\n\n        var isOptionalCall = false;\n\n        if (this.match(18) && this.lookaheadCharCode() === 60) {\n          if (noCalls) {\n            state.stop = true;\n            return base;\n          }\n\n          state.optionalChainMember = isOptionalCall = true;\n          this.next();\n        }\n\n        if (this.match(45)) {\n          var missingParenErrorPos;\n          var result = this.tsTryParseAndCatch(function () {\n            if (!noCalls && _this37.atPossibleAsyncArrow(base)) {\n              var asyncArrowFn = _this37.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n              if (asyncArrowFn) {\n                return asyncArrowFn;\n              }\n            }\n\n            var node = _this37.startNodeAt(startPos, startLoc);\n\n            node.callee = base;\n\n            var typeArguments = _this37.tsParseTypeArguments();\n\n            if (typeArguments) {\n              if (isOptionalCall && !_this37.match(10)) {\n                missingParenErrorPos = _this37.state.pos;\n\n                _this37.unexpected();\n              }\n\n              if (!noCalls && _this37.eat(10)) {\n                node.arguments = _this37.parseCallExpressionArguments(11, false);\n\n                _this37.tsCheckForInvalidTypeCasts(node.arguments);\n\n                node.typeParameters = typeArguments;\n\n                if (state.optionalChainMember) {\n                  node.optional = isOptionalCall;\n                }\n\n                return _this37.finishCallExpression(node, state.optionalChainMember);\n              } else if (tokenIsTemplate(_this37.state.type)) {\n                var _result = _this37.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n\n                _result.typeParameters = typeArguments;\n                return _result;\n              }\n            }\n\n            _this37.unexpected();\n          });\n\n          if (missingParenErrorPos) {\n            this.unexpected(missingParenErrorPos, 10);\n          }\n\n          if (result) return result;\n        }\n\n        return _get(_getPrototypeOf(_class4.prototype), \"parseSubscript\", this).call(this, base, startPos, startLoc, noCalls, state);\n      }\n    }, {\n      key: \"parseNewArguments\",\n      value: function parseNewArguments(node) {\n        var _this38 = this;\n\n        if (this.match(45)) {\n          var typeParameters = this.tsTryParseAndCatch(function () {\n            var args = _this38.tsParseTypeArguments();\n\n            if (!_this38.match(10)) _this38.unexpected();\n            return args;\n          });\n\n          if (typeParameters) {\n            node.typeParameters = typeParameters;\n          }\n        }\n\n        _get(_getPrototypeOf(_class4.prototype), \"parseNewArguments\", this).call(this, node);\n      }\n    }, {\n      key: \"parseExprOp\",\n      value: function parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n        if (tokenOperatorPrecedence(54) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(89)) {\n          var node = this.startNodeAt(leftStartPos, leftStartLoc);\n          node.expression = left;\n\n          var _const = this.tsTryNextParseConstantContext();\n\n          if (_const) {\n            node.typeAnnotation = _const;\n          } else {\n            node.typeAnnotation = this.tsNextThenParseType();\n          }\n\n          this.finishNode(node, \"TSAsExpression\");\n          this.reScan_lt_gt();\n          return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n        }\n\n        return _get(_getPrototypeOf(_class4.prototype), \"parseExprOp\", this).call(this, left, leftStartPos, leftStartLoc, minPrec);\n      }\n    }, {\n      key: \"checkReservedWord\",\n      value: function checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\n    }, {\n      key: \"checkDuplicateExports\",\n      value: function checkDuplicateExports() {}\n    }, {\n      key: \"parseImport\",\n      value: function parseImport(node) {\n        node.importKind = \"value\";\n\n        if (tokenIsIdentifier(this.state.type) || this.match(51) || this.match(5)) {\n          var ahead = this.lookahead();\n\n          if (this.isContextual(122) && ahead.type !== 12 && ahead.type !== 93 && ahead.type !== 29) {\n            node.importKind = \"type\";\n            this.next();\n            ahead = this.lookahead();\n          }\n\n          if (tokenIsIdentifier(this.state.type) && ahead.type === 29) {\n            return this.tsParseImportEqualsDeclaration(node);\n          }\n        }\n\n        var importNode = _get(_getPrototypeOf(_class4.prototype), \"parseImport\", this).call(this, node);\n\n        if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n          this.raise(importNode.start, TSErrors.TypeImportCannotSpecifyDefaultAndNamed);\n        }\n\n        return importNode;\n      }\n    }, {\n      key: \"parseExport\",\n      value: function parseExport(node) {\n        if (this.match(79)) {\n          this.next();\n\n          if (this.isContextual(122) && this.lookaheadCharCode() !== 61) {\n            node.importKind = \"type\";\n            this.next();\n          } else {\n            node.importKind = \"value\";\n          }\n\n          return this.tsParseImportEqualsDeclaration(node, true);\n        } else if (this.eat(29)) {\n          var assign = node;\n          assign.expression = this.parseExpression();\n          this.semicolon();\n          return this.finishNode(assign, \"TSExportAssignment\");\n        } else if (this.eatContextual(89)) {\n          var decl = node;\n          this.expectContextual(120);\n          decl.id = this.parseIdentifier();\n          this.semicolon();\n          return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n        } else {\n          if (this.isContextual(122) && this.lookahead().type === 5) {\n            this.next();\n            node.exportKind = \"type\";\n          } else {\n            node.exportKind = \"value\";\n          }\n\n          return _get(_getPrototypeOf(_class4.prototype), \"parseExport\", this).call(this, node);\n        }\n      }\n    }, {\n      key: \"isAbstractClass\",\n      value: function isAbstractClass() {\n        return this.isContextual(116) && this.lookahead().type === 76;\n      }\n    }, {\n      key: \"parseExportDefaultExpression\",\n      value: function parseExportDefaultExpression() {\n        if (this.isAbstractClass()) {\n          var cls = this.startNode();\n          this.next();\n          cls.abstract = true;\n          this.parseClass(cls, true, true);\n          return cls;\n        }\n\n        if (this.match(121)) {\n          var interfaceNode = this.startNode();\n          this.next();\n          var result = this.tsParseInterfaceDeclaration(interfaceNode);\n          if (result) return result;\n        }\n\n        return _get(_getPrototypeOf(_class4.prototype), \"parseExportDefaultExpression\", this).call(this);\n      }\n    }, {\n      key: \"parseStatementContent\",\n      value: function parseStatementContent(context, topLevel) {\n        if (this.state.type === 71) {\n          var ahead = this.lookahead();\n\n          if (ahead.type === 118) {\n            var node = this.startNode();\n            this.next();\n            this.expectContextual(118);\n            return this.tsParseEnumDeclaration(node, true);\n          }\n        }\n\n        return _get(_getPrototypeOf(_class4.prototype), \"parseStatementContent\", this).call(this, context, topLevel);\n      }\n    }, {\n      key: \"parseAccessModifier\",\n      value: function parseAccessModifier() {\n        return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n      }\n    }, {\n      key: \"tsHasSomeModifiers\",\n      value: function tsHasSomeModifiers(member, modifiers) {\n        return modifiers.some(function (modifier) {\n          if (tsIsAccessModifier(modifier)) {\n            return member.accessibility === modifier;\n          }\n\n          return !!member[modifier];\n        });\n      }\n    }, {\n      key: \"tsIsStartOfStaticBlocks\",\n      value: function tsIsStartOfStaticBlocks() {\n        return this.isContextual(100) && this.lookaheadCharCode() === 123;\n      }\n    }, {\n      key: \"parseClassMember\",\n      value: function parseClassMember(classBody, member, state) {\n        var _this39 = this;\n\n        var modifiers = [\"declare\", \"private\", \"public\", \"protected\", \"override\", \"abstract\", \"readonly\", \"static\"];\n        this.tsParseModifiers(member, modifiers, undefined, undefined, true);\n\n        var callParseClassMemberWithIsStatic = function callParseClassMemberWithIsStatic() {\n          if (_this39.tsIsStartOfStaticBlocks()) {\n            _this39.next();\n\n            _this39.next();\n\n            if (_this39.tsHasSomeModifiers(member, modifiers)) {\n              _this39.raise(_this39.state.pos, TSErrors.StaticBlockCannotHaveModifier);\n            }\n\n            _this39.parseClassStaticBlock(classBody, member);\n          } else {\n            _this39.parseClassMemberWithIsStatic(classBody, member, state, !!member.static);\n          }\n        };\n\n        if (member.declare) {\n          this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n        } else {\n          callParseClassMemberWithIsStatic();\n        }\n      }\n    }, {\n      key: \"parseClassMemberWithIsStatic\",\n      value: function parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n        var idx = this.tsTryParseIndexSignature(member);\n\n        if (idx) {\n          classBody.body.push(idx);\n\n          if (member.abstract) {\n            this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n          }\n\n          if (member.accessibility) {\n            this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\n          }\n\n          if (member.declare) {\n            this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n          }\n\n          if (member.override) {\n            this.raise(member.start, TSErrors.IndexSignatureHasOverride);\n          }\n\n          return;\n        }\n\n        if (!this.state.inAbstractClass && member.abstract) {\n          this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n        }\n\n        if (member.override) {\n          if (!state.hadSuperClass) {\n            this.raise(member.start, TSErrors.OverrideNotInSubClass);\n          }\n        }\n\n        _get(_getPrototypeOf(_class4.prototype), \"parseClassMemberWithIsStatic\", this).call(this, classBody, member, state, isStatic);\n      }\n    }, {\n      key: \"parsePostMemberNameModifiers\",\n      value: function parsePostMemberNameModifiers(methodOrProp) {\n        var optional = this.eat(17);\n        if (optional) methodOrProp.optional = true;\n\n        if (methodOrProp.readonly && this.match(10)) {\n          this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n        }\n\n        if (methodOrProp.declare && this.match(10)) {\n          this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n        }\n      }\n    }, {\n      key: \"parseExpressionStatement\",\n      value: function parseExpressionStatement(node, expr) {\n        var decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n        return decl || _get(_getPrototypeOf(_class4.prototype), \"parseExpressionStatement\", this).call(this, node, expr);\n      }\n    }, {\n      key: \"shouldParseExportDeclaration\",\n      value: function shouldParseExportDeclaration() {\n        if (this.tsIsDeclarationStart()) return true;\n        return _get(_getPrototypeOf(_class4.prototype), \"shouldParseExportDeclaration\", this).call(this);\n      }\n    }, {\n      key: \"parseConditional\",\n      value: function parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n        var _this40 = this;\n\n        if (!this.state.maybeInArrowParameters || !this.match(17)) {\n          return _get(_getPrototypeOf(_class4.prototype), \"parseConditional\", this).call(this, expr, startPos, startLoc, refExpressionErrors);\n        }\n\n        var result = this.tryParse(function () {\n          return _get(_getPrototypeOf(_class4.prototype), \"parseConditional\", _this40).call(_this40, expr, startPos, startLoc);\n        });\n\n        if (!result.node) {\n          if (result.error) {\n            _get(_getPrototypeOf(_class4.prototype), \"setOptionalParametersError\", this).call(this, refExpressionErrors, result.error);\n          }\n\n          return expr;\n        }\n\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n    }, {\n      key: \"parseParenItem\",\n      value: function parseParenItem(node, startPos, startLoc) {\n        node = _get(_getPrototypeOf(_class4.prototype), \"parseParenItem\", this).call(this, node, startPos, startLoc);\n\n        if (this.eat(17)) {\n          node.optional = true;\n          this.resetEndLocation(node);\n        }\n\n        if (this.match(14)) {\n          var typeCastNode = this.startNodeAt(startPos, startLoc);\n          typeCastNode.expression = node;\n          typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n          return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n        }\n\n        return node;\n      }\n    }, {\n      key: \"parseExportDeclaration\",\n      value: function parseExportDeclaration(node) {\n        var startPos = this.state.start;\n        var startLoc = this.state.startLoc;\n        var isDeclare = this.eatContextual(117);\n\n        if (isDeclare && (this.isContextual(117) || !this.shouldParseExportDeclaration())) {\n          throw this.raise(this.state.start, TSErrors.ExpectedAmbientAfterExportDeclare);\n        }\n\n        var declaration;\n\n        if (tokenIsIdentifier(this.state.type)) {\n          declaration = this.tsTryParseExportDeclaration();\n        }\n\n        if (!declaration) {\n          declaration = _get(_getPrototypeOf(_class4.prototype), \"parseExportDeclaration\", this).call(this, node);\n        }\n\n        if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\n          node.exportKind = \"type\";\n        }\n\n        if (declaration && isDeclare) {\n          this.resetStartLocation(declaration, startPos, startLoc);\n          declaration.declare = true;\n        }\n\n        return declaration;\n      }\n    }, {\n      key: \"parseClassId\",\n      value: function parseClassId(node, isStatement, optionalId) {\n        if ((!isStatement || optionalId) && this.isContextual(106)) {\n          return;\n        }\n\n        _get(_getPrototypeOf(_class4.prototype), \"parseClassId\", this).call(this, node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n\n        var typeParameters = this.tsTryParseTypeParameters();\n        if (typeParameters) node.typeParameters = typeParameters;\n      }\n    }, {\n      key: \"parseClassPropertyAnnotation\",\n      value: function parseClassPropertyAnnotation(node) {\n        if (!node.optional && this.eat(35)) {\n          node.definite = true;\n        }\n\n        var type = this.tsTryParseTypeAnnotation();\n        if (type) node.typeAnnotation = type;\n      }\n    }, {\n      key: \"parseClassProperty\",\n      value: function parseClassProperty(node) {\n        this.parseClassPropertyAnnotation(node);\n\n        if (this.state.isAmbientContext && this.match(29)) {\n          this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n        }\n\n        if (node.abstract && this.match(29)) {\n          var key = node.key;\n          this.raise(this.state.start, TSErrors.AbstractPropertyHasInitializer, key.type === \"Identifier\" && !node.computed ? key.name : \"[\".concat(this.input.slice(key.start, key.end), \"]\"));\n        }\n\n        return _get(_getPrototypeOf(_class4.prototype), \"parseClassProperty\", this).call(this, node);\n      }\n    }, {\n      key: \"parseClassPrivateProperty\",\n      value: function parseClassPrivateProperty(node) {\n        if (node.abstract) {\n          this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n        }\n\n        if (node.accessibility) {\n          this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\n        }\n\n        this.parseClassPropertyAnnotation(node);\n        return _get(_getPrototypeOf(_class4.prototype), \"parseClassPrivateProperty\", this).call(this, node);\n      }\n    }, {\n      key: \"pushClassMethod\",\n      value: function pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n        var typeParameters = this.tsTryParseTypeParameters();\n\n        if (typeParameters && isConstructor) {\n          this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n        }\n\n        if (method.declare && (method.kind === \"get\" || method.kind === \"set\")) {\n          this.raise(method.start, TSErrors.DeclareAccessor, method.kind);\n        }\n\n        if (typeParameters) method.typeParameters = typeParameters;\n\n        _get(_getPrototypeOf(_class4.prototype), \"pushClassMethod\", this).call(this, classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n      }\n    }, {\n      key: \"pushClassPrivateMethod\",\n      value: function pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n        var typeParameters = this.tsTryParseTypeParameters();\n        if (typeParameters) method.typeParameters = typeParameters;\n\n        _get(_getPrototypeOf(_class4.prototype), \"pushClassPrivateMethod\", this).call(this, classBody, method, isGenerator, isAsync);\n      }\n    }, {\n      key: \"declareClassPrivateMethodInScope\",\n      value: function declareClassPrivateMethodInScope(node, kind) {\n        if (node.type === \"TSDeclareMethod\") return;\n        if (node.type === \"MethodDefinition\" && !node.value.body) return;\n\n        _get(_getPrototypeOf(_class4.prototype), \"declareClassPrivateMethodInScope\", this).call(this, node, kind);\n      }\n    }, {\n      key: \"parseClassSuper\",\n      value: function parseClassSuper(node) {\n        _get(_getPrototypeOf(_class4.prototype), \"parseClassSuper\", this).call(this, node);\n\n        if (node.superClass && this.match(45)) {\n          node.superTypeParameters = this.tsParseTypeArguments();\n        }\n\n        if (this.eatContextual(106)) {\n          node.implements = this.tsParseHeritageClause(\"implements\");\n        }\n      }\n    }, {\n      key: \"parseObjPropValue\",\n      value: function parseObjPropValue(prop) {\n        var _get8;\n\n        var typeParameters = this.tsTryParseTypeParameters();\n        if (typeParameters) prop.typeParameters = typeParameters;\n\n        for (var _len13 = arguments.length, args = new Array(_len13 > 1 ? _len13 - 1 : 0), _key13 = 1; _key13 < _len13; _key13++) {\n          args[_key13 - 1] = arguments[_key13];\n        }\n\n        (_get8 = _get(_getPrototypeOf(_class4.prototype), \"parseObjPropValue\", this)).call.apply(_get8, [this, prop].concat(args));\n      }\n    }, {\n      key: \"parseFunctionParams\",\n      value: function parseFunctionParams(node, allowModifiers) {\n        var typeParameters = this.tsTryParseTypeParameters();\n        if (typeParameters) node.typeParameters = typeParameters;\n\n        _get(_getPrototypeOf(_class4.prototype), \"parseFunctionParams\", this).call(this, node, allowModifiers);\n      }\n    }, {\n      key: \"parseVarId\",\n      value: function parseVarId(decl, kind) {\n        _get(_getPrototypeOf(_class4.prototype), \"parseVarId\", this).call(this, decl, kind);\n\n        if (decl.id.type === \"Identifier\" && this.eat(35)) {\n          decl.definite = true;\n        }\n\n        var type = this.tsTryParseTypeAnnotation();\n\n        if (type) {\n          decl.id.typeAnnotation = type;\n          this.resetEndLocation(decl.id);\n        }\n      }\n    }, {\n      key: \"parseAsyncArrowFromCallExpression\",\n      value: function parseAsyncArrowFromCallExpression(node, call) {\n        if (this.match(14)) {\n          node.returnType = this.tsParseTypeAnnotation();\n        }\n\n        return _get(_getPrototypeOf(_class4.prototype), \"parseAsyncArrowFromCallExpression\", this).call(this, node, call);\n      }\n    }, {\n      key: \"parseMaybeAssign\",\n      value: function parseMaybeAssign() {\n        var _this41 = this;\n\n        for (var _len14 = arguments.length, args = new Array(_len14), _key14 = 0; _key14 < _len14; _key14++) {\n          args[_key14] = arguments[_key14];\n        }\n\n        var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n        var state;\n        var jsx;\n        var typeCast;\n\n        if (this.hasPlugin(\"jsx\") && (this.match(134) || this.match(45))) {\n          state = this.state.clone();\n          jsx = this.tryParse(function () {\n            var _get9;\n\n            return (_get9 = _get(_getPrototypeOf(_class4.prototype), \"parseMaybeAssign\", _this41)).call.apply(_get9, [_this41].concat(args));\n          }, state);\n          if (!jsx.error) return jsx.node;\n          var context = this.state.context;\n          var currentContext = context[context.length - 1];\n\n          if (currentContext === types.j_oTag || currentContext === types.j_expr) {\n            context.pop();\n          }\n        }\n\n        if (!((_jsx = jsx) != null && _jsx.error) && !this.match(45)) {\n          var _get10;\n\n          return (_get10 = _get(_getPrototypeOf(_class4.prototype), \"parseMaybeAssign\", this)).call.apply(_get10, [this].concat(args));\n        }\n\n        var typeParameters;\n        state = state || this.state.clone();\n        var arrow = this.tryParse(function (abort) {\n          var _get11;\n\n          var _expr$extra, _typeParameters;\n\n          typeParameters = _this41.tsParseTypeParameters();\n\n          var expr = (_get11 = _get(_getPrototypeOf(_class4.prototype), \"parseMaybeAssign\", _this41)).call.apply(_get11, [_this41].concat(args));\n\n          if (expr.type !== \"ArrowFunctionExpression\" || (_expr$extra = expr.extra) != null && _expr$extra.parenthesized) {\n            abort();\n          }\n\n          if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n            _this41.resetStartLocationFromNode(expr, typeParameters);\n          }\n\n          expr.typeParameters = typeParameters;\n          return expr;\n        }, state);\n\n        if (!arrow.error && !arrow.aborted) {\n          if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n          return arrow.node;\n        }\n\n        if (!jsx) {\n          assert(!this.hasPlugin(\"jsx\"));\n          typeCast = this.tryParse(function () {\n            var _get12;\n\n            return (_get12 = _get(_getPrototypeOf(_class4.prototype), \"parseMaybeAssign\", _this41)).call.apply(_get12, [_this41].concat(args));\n          }, state);\n          if (!typeCast.error) return typeCast.node;\n        }\n\n        if ((_jsx2 = jsx) != null && _jsx2.node) {\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n          return arrow.node;\n        }\n\n        if ((_typeCast = typeCast) != null && _typeCast.node) {\n          this.state = typeCast.failState;\n          return typeCast.node;\n        }\n\n        if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n        if ((_typeCast2 = typeCast) != null && _typeCast2.thrown) throw typeCast.error;\n        throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n      }\n    }, {\n      key: \"reportReservedArrowTypeParam\",\n      value: function reportReservedArrowTypeParam(node) {\n        var _node$extra;\n\n        if (node.params.length === 1 && !((_node$extra = node.extra) != null && _node$extra.trailingComma) && this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")) {\n          this.raise(node.start, TSErrors.ReservedArrowTypeParam);\n        }\n      }\n    }, {\n      key: \"parseMaybeUnary\",\n      value: function parseMaybeUnary(refExpressionErrors) {\n        if (!this.hasPlugin(\"jsx\") && this.match(45)) {\n          return this.tsParseTypeAssertion();\n        } else {\n          return _get(_getPrototypeOf(_class4.prototype), \"parseMaybeUnary\", this).call(this, refExpressionErrors);\n        }\n      }\n    }, {\n      key: \"parseArrow\",\n      value: function parseArrow(node) {\n        var _this42 = this;\n\n        if (this.match(14)) {\n          var result = this.tryParse(function (abort) {\n            var returnType = _this42.tsParseTypeOrTypePredicateAnnotation(14);\n\n            if (_this42.canInsertSemicolon() || !_this42.match(19)) abort();\n            return returnType;\n          });\n          if (result.aborted) return;\n\n          if (!result.thrown) {\n            if (result.error) this.state = result.failState;\n            node.returnType = result.node;\n          }\n        }\n\n        return _get(_getPrototypeOf(_class4.prototype), \"parseArrow\", this).call(this, node);\n      }\n    }, {\n      key: \"parseAssignableListItemTypes\",\n      value: function parseAssignableListItemTypes(param) {\n        if (this.eat(17)) {\n          if (param.type !== \"Identifier\" && !this.state.isAmbientContext && !this.state.inType) {\n            this.raise(param.start, TSErrors.PatternIsOptional);\n          }\n\n          param.optional = true;\n        }\n\n        var type = this.tsTryParseTypeAnnotation();\n        if (type) param.typeAnnotation = type;\n        this.resetEndLocation(param);\n        return param;\n      }\n    }, {\n      key: \"isAssignable\",\n      value: function isAssignable(node, isBinding) {\n        switch (node.type) {\n          case \"TSTypeCastExpression\":\n            return this.isAssignable(node.expression, isBinding);\n\n          case \"TSParameterProperty\":\n            return true;\n\n          default:\n            return _get(_getPrototypeOf(_class4.prototype), \"isAssignable\", this).call(this, node, isBinding);\n        }\n      }\n    }, {\n      key: \"toAssignable\",\n      value: function toAssignable(node) {\n        var isLHS = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n        switch (node.type) {\n          case \"TSTypeCastExpression\":\n            return _get(_getPrototypeOf(_class4.prototype), \"toAssignable\", this).call(this, this.typeCastToParameter(node), isLHS);\n\n          case \"TSParameterProperty\":\n            return _get(_getPrototypeOf(_class4.prototype), \"toAssignable\", this).call(this, node, isLHS);\n\n          case \"ParenthesizedExpression\":\n            return this.toAssignableParenthesizedExpression(node, isLHS);\n\n          case \"TSAsExpression\":\n          case \"TSNonNullExpression\":\n          case \"TSTypeAssertion\":\n            node.expression = this.toAssignable(node.expression, isLHS);\n            return node;\n\n          default:\n            return _get(_getPrototypeOf(_class4.prototype), \"toAssignable\", this).call(this, node, isLHS);\n        }\n      }\n    }, {\n      key: \"toAssignableParenthesizedExpression\",\n      value: function toAssignableParenthesizedExpression(node, isLHS) {\n        switch (node.expression.type) {\n          case \"TSAsExpression\":\n          case \"TSNonNullExpression\":\n          case \"TSTypeAssertion\":\n          case \"ParenthesizedExpression\":\n            node.expression = this.toAssignable(node.expression, isLHS);\n            return node;\n\n          default:\n            return _get(_getPrototypeOf(_class4.prototype), \"toAssignable\", this).call(this, node, isLHS);\n        }\n      }\n    }, {\n      key: \"checkLVal\",\n      value: function checkLVal(expr, contextDescription) {\n        var _get13;\n\n        var _expr$extra2;\n\n        for (var _len15 = arguments.length, args = new Array(_len15 > 2 ? _len15 - 2 : 0), _key15 = 2; _key15 < _len15; _key15++) {\n          args[_key15 - 2] = arguments[_key15];\n        }\n\n        switch (expr.type) {\n          case \"TSTypeCastExpression\":\n            return;\n\n          case \"TSParameterProperty\":\n            this.checkLVal.apply(this, [expr.parameter, \"parameter property\"].concat(args));\n            return;\n\n          case \"TSAsExpression\":\n          case \"TSTypeAssertion\":\n            if (!args[0] && contextDescription !== \"parenthesized expression\" && !((_expr$extra2 = expr.extra) != null && _expr$extra2.parenthesized)) {\n              this.raise(expr.start, ErrorMessages.InvalidLhs, contextDescription);\n              break;\n            }\n\n            this.checkLVal.apply(this, [expr.expression, \"parenthesized expression\"].concat(args));\n            return;\n\n          case \"TSNonNullExpression\":\n            this.checkLVal.apply(this, [expr.expression, contextDescription].concat(args));\n            return;\n\n          default:\n            (_get13 = _get(_getPrototypeOf(_class4.prototype), \"checkLVal\", this)).call.apply(_get13, [this, expr, contextDescription].concat(args));\n\n            return;\n        }\n      }\n    }, {\n      key: \"parseBindingAtom\",\n      value: function parseBindingAtom() {\n        switch (this.state.type) {\n          case 74:\n            return this.parseIdentifier(true);\n\n          default:\n            return _get(_getPrototypeOf(_class4.prototype), \"parseBindingAtom\", this).call(this);\n        }\n      }\n    }, {\n      key: \"parseMaybeDecoratorArguments\",\n      value: function parseMaybeDecoratorArguments(expr) {\n        if (this.match(45)) {\n          var typeArguments = this.tsParseTypeArguments();\n\n          if (this.match(10)) {\n            var call = _get(_getPrototypeOf(_class4.prototype), \"parseMaybeDecoratorArguments\", this).call(this, expr);\n\n            call.typeParameters = typeArguments;\n            return call;\n          }\n\n          this.unexpected(this.state.start, 10);\n        }\n\n        return _get(_getPrototypeOf(_class4.prototype), \"parseMaybeDecoratorArguments\", this).call(this, expr);\n      }\n    }, {\n      key: \"checkCommaAfterRest\",\n      value: function checkCommaAfterRest(close) {\n        if (this.state.isAmbientContext && this.match(12) && this.lookaheadCharCode() === close) {\n          this.next();\n        } else {\n          _get(_getPrototypeOf(_class4.prototype), \"checkCommaAfterRest\", this).call(this, close);\n        }\n      }\n    }, {\n      key: \"isClassMethod\",\n      value: function isClassMethod() {\n        return this.match(45) || _get(_getPrototypeOf(_class4.prototype), \"isClassMethod\", this).call(this);\n      }\n    }, {\n      key: \"isClassProperty\",\n      value: function isClassProperty() {\n        return this.match(35) || this.match(14) || _get(_getPrototypeOf(_class4.prototype), \"isClassProperty\", this).call(this);\n      }\n    }, {\n      key: \"parseMaybeDefault\",\n      value: function parseMaybeDefault() {\n        var _get14;\n\n        for (var _len16 = arguments.length, args = new Array(_len16), _key16 = 0; _key16 < _len16; _key16++) {\n          args[_key16] = arguments[_key16];\n        }\n\n        var node = (_get14 = _get(_getPrototypeOf(_class4.prototype), \"parseMaybeDefault\", this)).call.apply(_get14, [this].concat(args));\n\n        if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n          this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\n        }\n\n        return node;\n      }\n    }, {\n      key: \"getTokenFromCode\",\n      value: function getTokenFromCode(code) {\n        if (this.state.inType) {\n          if (code === 62) {\n            return this.finishOp(46, 1);\n          }\n\n          if (code === 60) {\n            return this.finishOp(45, 1);\n          }\n        }\n\n        return _get(_getPrototypeOf(_class4.prototype), \"getTokenFromCode\", this).call(this, code);\n      }\n    }, {\n      key: \"reScan_lt_gt\",\n      value: function reScan_lt_gt() {\n        var type = this.state.type;\n\n        if (type === 45) {\n          this.state.pos -= 1;\n          this.readToken_lt();\n        } else if (type === 46) {\n          this.state.pos -= 1;\n          this.readToken_gt();\n        }\n      }\n    }, {\n      key: \"toAssignableList\",\n      value: function toAssignableList(exprList) {\n        for (var i = 0; i < exprList.length; i++) {\n          var expr = exprList[i];\n          if (!expr) continue;\n\n          switch (expr.type) {\n            case \"TSTypeCastExpression\":\n              exprList[i] = this.typeCastToParameter(expr);\n              break;\n\n            case \"TSAsExpression\":\n            case \"TSTypeAssertion\":\n              if (!this.state.maybeInArrowParameters) {\n                exprList[i] = this.typeCastToParameter(expr);\n              } else {\n                this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n              }\n\n              break;\n          }\n        }\n\n        return _get(_getPrototypeOf(_class4.prototype), \"toAssignableList\", this).apply(this, arguments);\n      }\n    }, {\n      key: \"typeCastToParameter\",\n      value: function typeCastToParameter(node) {\n        node.expression.typeAnnotation = node.typeAnnotation;\n        this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n        return node.expression;\n      }\n    }, {\n      key: \"shouldParseArrow\",\n      value: function shouldParseArrow(params) {\n        var _this43 = this;\n\n        if (this.match(14)) {\n          return params.every(function (expr) {\n            return _this43.isAssignable(expr, true);\n          });\n        }\n\n        return _get(_getPrototypeOf(_class4.prototype), \"shouldParseArrow\", this).call(this, params);\n      }\n    }, {\n      key: \"shouldParseAsyncArrow\",\n      value: function shouldParseAsyncArrow() {\n        return this.match(14) || _get(_getPrototypeOf(_class4.prototype), \"shouldParseAsyncArrow\", this).call(this);\n      }\n    }, {\n      key: \"canHaveLeadingDecorator\",\n      value: function canHaveLeadingDecorator() {\n        return _get(_getPrototypeOf(_class4.prototype), \"canHaveLeadingDecorator\", this).call(this) || this.isAbstractClass();\n      }\n    }, {\n      key: \"jsxParseOpeningElementAfterName\",\n      value: function jsxParseOpeningElementAfterName(node) {\n        var _this44 = this;\n\n        if (this.match(45)) {\n          var typeArguments = this.tsTryParseAndCatch(function () {\n            return _this44.tsParseTypeArguments();\n          });\n          if (typeArguments) node.typeParameters = typeArguments;\n        }\n\n        return _get(_getPrototypeOf(_class4.prototype), \"jsxParseOpeningElementAfterName\", this).call(this, node);\n      }\n    }, {\n      key: \"getGetterSetterExpectedParamCount\",\n      value: function getGetterSetterExpectedParamCount(method) {\n        var baseCount = _get(_getPrototypeOf(_class4.prototype), \"getGetterSetterExpectedParamCount\", this).call(this, method);\n\n        var params = this.getObjectOrClassMethodParams(method);\n        var firstParam = params[0];\n        var hasContextParam = firstParam && this.isThisParam(firstParam);\n        return hasContextParam ? baseCount + 1 : baseCount;\n      }\n    }, {\n      key: \"parseCatchClauseParam\",\n      value: function parseCatchClauseParam() {\n        var param = _get(_getPrototypeOf(_class4.prototype), \"parseCatchClauseParam\", this).call(this);\n\n        var type = this.tsTryParseTypeAnnotation();\n\n        if (type) {\n          param.typeAnnotation = type;\n          this.resetEndLocation(param);\n        }\n\n        return param;\n      }\n    }, {\n      key: \"tsInAmbientContext\",\n      value: function tsInAmbientContext(cb) {\n        var oldIsAmbientContext = this.state.isAmbientContext;\n        this.state.isAmbientContext = true;\n\n        try {\n          return cb();\n        } finally {\n          this.state.isAmbientContext = oldIsAmbientContext;\n        }\n      }\n    }, {\n      key: \"parseClass\",\n      value: function parseClass(node) {\n        var oldInAbstractClass = this.state.inAbstractClass;\n        this.state.inAbstractClass = !!node.abstract;\n\n        try {\n          var _get15;\n\n          for (var _len17 = arguments.length, args = new Array(_len17 > 1 ? _len17 - 1 : 0), _key17 = 1; _key17 < _len17; _key17++) {\n            args[_key17 - 1] = arguments[_key17];\n          }\n\n          return (_get15 = _get(_getPrototypeOf(_class4.prototype), \"parseClass\", this)).call.apply(_get15, [this, node].concat(args));\n        } finally {\n          this.state.inAbstractClass = oldInAbstractClass;\n        }\n      }\n    }, {\n      key: \"tsParseAbstractDeclaration\",\n      value: function tsParseAbstractDeclaration(node) {\n        if (this.match(76)) {\n          node.abstract = true;\n          return this.parseClass(node, true, false);\n        } else if (this.isContextual(121)) {\n          if (!this.hasFollowingLineBreak()) {\n            node.abstract = true;\n            this.raise(node.start, TSErrors.NonClassMethodPropertyHasAbstractModifer);\n            this.next();\n            return this.tsParseInterfaceDeclaration(node);\n          }\n        } else {\n          this.unexpected(null, 76);\n        }\n      }\n    }, {\n      key: \"parseMethod\",\n      value: function parseMethod() {\n        var _get16;\n\n        for (var _len18 = arguments.length, args = new Array(_len18), _key18 = 0; _key18 < _len18; _key18++) {\n          args[_key18] = arguments[_key18];\n        }\n\n        var method = (_get16 = _get(_getPrototypeOf(_class4.prototype), \"parseMethod\", this)).call.apply(_get16, [this].concat(args));\n\n        if (method.abstract) {\n          var hasBody = this.hasPlugin(\"estree\") ? !!method.value.body : !!method.body;\n\n          if (hasBody) {\n            var key = method.key;\n            this.raise(method.start, TSErrors.AbstractMethodHasImplementation, key.type === \"Identifier\" && !method.computed ? key.name : \"[\".concat(this.input.slice(key.start, key.end), \"]\"));\n          }\n        }\n\n        return method;\n      }\n    }, {\n      key: \"tsParseTypeParameterName\",\n      value: function tsParseTypeParameterName() {\n        var typeName = this.parseIdentifier();\n        return typeName.name;\n      }\n    }, {\n      key: \"shouldParseAsAmbientContext\",\n      value: function shouldParseAsAmbientContext() {\n        return !!this.getPluginOption(\"typescript\", \"dts\");\n      }\n    }, {\n      key: \"parse\",\n      value: function parse() {\n        if (this.shouldParseAsAmbientContext()) {\n          this.state.isAmbientContext = true;\n        }\n\n        return _get(_getPrototypeOf(_class4.prototype), \"parse\", this).call(this);\n      }\n    }, {\n      key: \"getExpression\",\n      value: function getExpression() {\n        if (this.shouldParseAsAmbientContext()) {\n          this.state.isAmbientContext = true;\n        }\n\n        return _get(_getPrototypeOf(_class4.prototype), \"getExpression\", this).call(this);\n      }\n    }, {\n      key: \"parseExportSpecifier\",\n      value: function parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly) {\n        if (!isString && isMaybeTypeOnly) {\n          this.parseTypeOnlyImportExportSpecifier(node, false, isInTypeExport);\n          return this.finishNode(node, \"ExportSpecifier\");\n        }\n\n        node.exportKind = \"value\";\n        return _get(_getPrototypeOf(_class4.prototype), \"parseExportSpecifier\", this).call(this, node, isString, isInTypeExport, isMaybeTypeOnly);\n      }\n    }, {\n      key: \"parseImportSpecifier\",\n      value: function parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly) {\n        if (!importedIsString && isMaybeTypeOnly) {\n          this.parseTypeOnlyImportExportSpecifier(specifier, true, isInTypeOnlyImport);\n          return this.finishNode(specifier, \"ImportSpecifier\");\n        }\n\n        specifier.importKind = \"value\";\n        return _get(_getPrototypeOf(_class4.prototype), \"parseImportSpecifier\", this).call(this, specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly);\n      }\n    }, {\n      key: \"parseTypeOnlyImportExportSpecifier\",\n      value: function parseTypeOnlyImportExportSpecifier(node, isImport, isInTypeOnlyImportExport) {\n        var leftOfAsKey = isImport ? \"imported\" : \"local\";\n        var rightOfAsKey = isImport ? \"local\" : \"exported\";\n        var leftOfAs = node[leftOfAsKey];\n        var rightOfAs;\n        var hasTypeSpecifier = false;\n        var canParseAsKeyword = true;\n        var pos = leftOfAs.start;\n\n        if (this.isContextual(89)) {\n          var firstAs = this.parseIdentifier();\n\n          if (this.isContextual(89)) {\n            var secondAs = this.parseIdentifier();\n\n            if (tokenIsKeywordOrIdentifier(this.state.type)) {\n              hasTypeSpecifier = true;\n              leftOfAs = firstAs;\n              rightOfAs = this.parseIdentifier();\n              canParseAsKeyword = false;\n            } else {\n              rightOfAs = secondAs;\n              canParseAsKeyword = false;\n            }\n          } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n            canParseAsKeyword = false;\n            rightOfAs = this.parseIdentifier();\n          } else {\n            hasTypeSpecifier = true;\n            leftOfAs = firstAs;\n          }\n        } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n          hasTypeSpecifier = true;\n          leftOfAs = this.parseIdentifier();\n        }\n\n        if (hasTypeSpecifier && isInTypeOnlyImportExport) {\n          this.raise(pos, isImport ? TSErrors.TypeModifierIsUsedInTypeImports : TSErrors.TypeModifierIsUsedInTypeExports);\n        }\n\n        node[leftOfAsKey] = leftOfAs;\n        node[rightOfAsKey] = rightOfAs;\n        var kindKey = isImport ? \"importKind\" : \"exportKind\";\n        node[kindKey] = hasTypeSpecifier ? \"type\" : \"value\";\n\n        if (canParseAsKeyword && this.eatContextual(89)) {\n          node[rightOfAsKey] = isImport ? this.parseIdentifier() : this.parseModuleExportName();\n        }\n\n        if (!node[rightOfAsKey]) {\n          node[rightOfAsKey] = cloneIdentifier(node[leftOfAsKey]);\n        }\n\n        if (isImport) {\n          this.checkLVal(node[rightOfAsKey], \"import specifier\", BIND_LEXICAL);\n        }\n      }\n    }]);\n\n    return _class4;\n  }(superClass);\n};\n\nvar PlaceHolderErrors = makeErrorTemplates({\n  ClassNameIsRequired: \"A class name is required.\"\n}, ErrorCodes.SyntaxError);\n\nvar placeholders = function placeholders(superClass) {\n  return /*#__PURE__*/function (_superClass5) {\n    _inherits(_class5, _superClass5);\n\n    var _super15 = _createSuper(_class5);\n\n    function _class5() {\n      _classCallCheck(this, _class5);\n\n      return _super15.apply(this, arguments);\n    }\n\n    _createClass(_class5, [{\n      key: \"parsePlaceholder\",\n      value: function parsePlaceholder(expectedNode) {\n        if (this.match(136)) {\n          var node = this.startNode();\n          this.next();\n          this.assertNoSpace(\"Unexpected space in placeholder.\");\n          node.name = _get(_getPrototypeOf(_class5.prototype), \"parseIdentifier\", this).call(this, true);\n          this.assertNoSpace(\"Unexpected space in placeholder.\");\n          this.expect(136);\n          return this.finishPlaceholder(node, expectedNode);\n        }\n      }\n    }, {\n      key: \"finishPlaceholder\",\n      value: function finishPlaceholder(node, expectedNode) {\n        var isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n        node.expectedNode = expectedNode;\n        return isFinished ? node : this.finishNode(node, \"Placeholder\");\n      }\n    }, {\n      key: \"getTokenFromCode\",\n      value: function getTokenFromCode(code) {\n        if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n          return this.finishOp(136, 2);\n        }\n\n        return _get(_getPrototypeOf(_class5.prototype), \"getTokenFromCode\", this).apply(this, arguments);\n      }\n    }, {\n      key: \"parseExprAtom\",\n      value: function parseExprAtom() {\n        return this.parsePlaceholder(\"Expression\") || _get(_getPrototypeOf(_class5.prototype), \"parseExprAtom\", this).apply(this, arguments);\n      }\n    }, {\n      key: \"parseIdentifier\",\n      value: function parseIdentifier() {\n        return this.parsePlaceholder(\"Identifier\") || _get(_getPrototypeOf(_class5.prototype), \"parseIdentifier\", this).apply(this, arguments);\n      }\n    }, {\n      key: \"checkReservedWord\",\n      value: function checkReservedWord(word) {\n        if (word !== undefined) _get(_getPrototypeOf(_class5.prototype), \"checkReservedWord\", this).apply(this, arguments);\n      }\n    }, {\n      key: \"parseBindingAtom\",\n      value: function parseBindingAtom() {\n        return this.parsePlaceholder(\"Pattern\") || _get(_getPrototypeOf(_class5.prototype), \"parseBindingAtom\", this).apply(this, arguments);\n      }\n    }, {\n      key: \"checkLVal\",\n      value: function checkLVal(expr) {\n        if (expr.type !== \"Placeholder\") _get(_getPrototypeOf(_class5.prototype), \"checkLVal\", this).apply(this, arguments);\n      }\n    }, {\n      key: \"toAssignable\",\n      value: function toAssignable(node) {\n        if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n          node.expectedNode = \"Pattern\";\n          return node;\n        }\n\n        return _get(_getPrototypeOf(_class5.prototype), \"toAssignable\", this).apply(this, arguments);\n      }\n    }, {\n      key: \"isLet\",\n      value: function isLet(context) {\n        if (_get(_getPrototypeOf(_class5.prototype), \"isLet\", this).call(this, context)) {\n          return true;\n        }\n\n        if (!this.isContextual(95)) {\n          return false;\n        }\n\n        if (context) return false;\n        var nextToken = this.lookahead();\n\n        if (nextToken.type === 136) {\n          return true;\n        }\n\n        return false;\n      }\n    }, {\n      key: \"verifyBreakContinue\",\n      value: function verifyBreakContinue(node) {\n        if (node.label && node.label.type === \"Placeholder\") return;\n\n        _get(_getPrototypeOf(_class5.prototype), \"verifyBreakContinue\", this).apply(this, arguments);\n      }\n    }, {\n      key: \"parseExpressionStatement\",\n      value: function parseExpressionStatement(node, expr) {\n        if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n          return _get(_getPrototypeOf(_class5.prototype), \"parseExpressionStatement\", this).apply(this, arguments);\n        }\n\n        if (this.match(14)) {\n          var stmt = node;\n          stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n          this.next();\n          stmt.body = this.parseStatement(\"label\");\n          return this.finishNode(stmt, \"LabeledStatement\");\n        }\n\n        this.semicolon();\n        node.name = expr.name;\n        return this.finishPlaceholder(node, \"Statement\");\n      }\n    }, {\n      key: \"parseBlock\",\n      value: function parseBlock() {\n        return this.parsePlaceholder(\"BlockStatement\") || _get(_getPrototypeOf(_class5.prototype), \"parseBlock\", this).apply(this, arguments);\n      }\n    }, {\n      key: \"parseFunctionId\",\n      value: function parseFunctionId() {\n        return this.parsePlaceholder(\"Identifier\") || _get(_getPrototypeOf(_class5.prototype), \"parseFunctionId\", this).apply(this, arguments);\n      }\n    }, {\n      key: \"parseClass\",\n      value: function parseClass(node, isStatement, optionalId) {\n        var type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n        this.next();\n        this.takeDecorators(node);\n        var oldStrict = this.state.strict;\n        var placeholder = this.parsePlaceholder(\"Identifier\");\n\n        if (placeholder) {\n          if (this.match(77) || this.match(136) || this.match(5)) {\n            node.id = placeholder;\n          } else if (optionalId || !isStatement) {\n            node.id = null;\n            node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n            return this.finishNode(node, type);\n          } else {\n            this.unexpected(null, PlaceHolderErrors.ClassNameIsRequired);\n          }\n        } else {\n          this.parseClassId(node, isStatement, optionalId);\n        }\n\n        this.parseClassSuper(node);\n        node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\n        return this.finishNode(node, type);\n      }\n    }, {\n      key: \"parseExport\",\n      value: function parseExport(node) {\n        var placeholder = this.parsePlaceholder(\"Identifier\");\n        if (!placeholder) return _get(_getPrototypeOf(_class5.prototype), \"parseExport\", this).apply(this, arguments);\n\n        if (!this.isContextual(93) && !this.match(12)) {\n          node.specifiers = [];\n          node.source = null;\n          node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n          return this.finishNode(node, \"ExportNamedDeclaration\");\n        }\n\n        this.expectPlugin(\"exportDefaultFrom\");\n        var specifier = this.startNode();\n        specifier.exported = placeholder;\n        node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n        return _get(_getPrototypeOf(_class5.prototype), \"parseExport\", this).call(this, node);\n      }\n    }, {\n      key: \"isExportDefaultSpecifier\",\n      value: function isExportDefaultSpecifier() {\n        if (this.match(61)) {\n          var next = this.nextTokenStart();\n\n          if (this.isUnparsedContextual(next, \"from\")) {\n            if (this.input.startsWith(tokenLabelName(136), this.nextTokenStartSince(next + 4))) {\n              return true;\n            }\n          }\n        }\n\n        return _get(_getPrototypeOf(_class5.prototype), \"isExportDefaultSpecifier\", this).call(this);\n      }\n    }, {\n      key: \"maybeParseExportDefaultSpecifier\",\n      value: function maybeParseExportDefaultSpecifier(node) {\n        if (node.specifiers && node.specifiers.length > 0) {\n          return true;\n        }\n\n        return _get(_getPrototypeOf(_class5.prototype), \"maybeParseExportDefaultSpecifier\", this).apply(this, arguments);\n      }\n    }, {\n      key: \"checkExport\",\n      value: function checkExport(node) {\n        var specifiers = node.specifiers;\n\n        if (specifiers != null && specifiers.length) {\n          node.specifiers = specifiers.filter(function (node) {\n            return node.exported.type === \"Placeholder\";\n          });\n        }\n\n        _get(_getPrototypeOf(_class5.prototype), \"checkExport\", this).call(this, node);\n\n        node.specifiers = specifiers;\n      }\n    }, {\n      key: \"parseImport\",\n      value: function parseImport(node) {\n        var placeholder = this.parsePlaceholder(\"Identifier\");\n        if (!placeholder) return _get(_getPrototypeOf(_class5.prototype), \"parseImport\", this).apply(this, arguments);\n        node.specifiers = [];\n\n        if (!this.isContextual(93) && !this.match(12)) {\n          node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n          this.semicolon();\n          return this.finishNode(node, \"ImportDeclaration\");\n        }\n\n        var specifier = this.startNodeAtNode(placeholder);\n        specifier.local = placeholder;\n        this.finishNode(specifier, \"ImportDefaultSpecifier\");\n        node.specifiers.push(specifier);\n\n        if (this.eat(12)) {\n          var hasStarImport = this.maybeParseStarImportSpecifier(node);\n          if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n        }\n\n        this.expectContextual(93);\n        node.source = this.parseImportSource();\n        this.semicolon();\n        return this.finishNode(node, \"ImportDeclaration\");\n      }\n    }, {\n      key: \"parseImportSource\",\n      value: function parseImportSource() {\n        return this.parsePlaceholder(\"StringLiteral\") || _get(_getPrototypeOf(_class5.prototype), \"parseImportSource\", this).apply(this, arguments);\n      }\n    }]);\n\n    return _class5;\n  }(superClass);\n};\n\nvar v8intrinsic = function v8intrinsic(superClass) {\n  return /*#__PURE__*/function (_superClass6) {\n    _inherits(_class6, _superClass6);\n\n    var _super16 = _createSuper(_class6);\n\n    function _class6() {\n      _classCallCheck(this, _class6);\n\n      return _super16.apply(this, arguments);\n    }\n\n    _createClass(_class6, [{\n      key: \"parseV8Intrinsic\",\n      value: function parseV8Intrinsic() {\n        if (this.match(50)) {\n          var v8IntrinsicStart = this.state.start;\n          var node = this.startNode();\n          this.next();\n\n          if (tokenIsIdentifier(this.state.type)) {\n            var name = this.parseIdentifierName(this.state.start);\n            var identifier = this.createIdentifier(node, name);\n            identifier.type = \"V8IntrinsicIdentifier\";\n\n            if (this.match(10)) {\n              return identifier;\n            }\n          }\n\n          this.unexpected(v8IntrinsicStart);\n        }\n      }\n    }, {\n      key: \"parseExprAtom\",\n      value: function parseExprAtom() {\n        return this.parseV8Intrinsic() || _get(_getPrototypeOf(_class6.prototype), \"parseExprAtom\", this).apply(this, arguments);\n      }\n    }]);\n\n    return _class6;\n  }(superClass);\n};\n\nfunction hasPlugin(plugins, expectedConfig) {\n  var _ref18 = typeof expectedConfig === \"string\" ? [expectedConfig, {}] : expectedConfig,\n      _ref19 = _slicedToArray(_ref18, 2),\n      expectedName = _ref19[0],\n      expectedOptions = _ref19[1];\n\n  var expectedKeys = Object.keys(expectedOptions);\n  var expectedOptionsIsEmpty = expectedKeys.length === 0;\n  return plugins.some(function (p) {\n    if (typeof p === \"string\") {\n      return expectedOptionsIsEmpty && p === expectedName;\n    } else {\n      var _p = _slicedToArray(p, 2),\n          pluginName = _p[0],\n          pluginOptions = _p[1];\n\n      if (pluginName !== expectedName) {\n        return false;\n      }\n\n      var _iterator6 = _createForOfIteratorHelper(expectedKeys),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var key = _step6.value;\n\n          if (pluginOptions[key] !== expectedOptions[key]) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n\n      return true;\n    }\n  });\n}\n\nfunction getPluginOption(plugins, name, option) {\n  var plugin = plugins.find(function (plugin) {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\n\nvar PIPELINE_PROPOSALS = [\"minimal\", \"fsharp\", \"hack\", \"smart\"];\nvar TOPIC_TOKENS = [\"^\", \"%\", \"#\"];\nvar RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\n\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    var decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\")) {\n    var proposal = getPluginOption(plugins, \"pipelineOperator\", \"proposal\");\n\n    if (!PIPELINE_PROPOSALS.includes(proposal)) {\n      var proposalList = PIPELINE_PROPOSALS.map(function (p) {\n        return \"\\\"\".concat(p, \"\\\"\");\n      }).join(\", \");\n      throw new Error(\"\\\"pipelineOperator\\\" requires \\\"proposal\\\" option whose value must be one of: \".concat(proposalList, \".\"));\n    }\n\n    var tupleSyntaxIsHash = hasPlugin(plugins, [\"recordAndTuple\", {\n      syntaxType: \"hash\"\n    }]);\n\n    if (proposal === \"hack\") {\n      if (hasPlugin(plugins, \"placeholders\")) {\n        throw new Error(\"Cannot combine placeholders plugin and Hack-style pipes.\");\n      }\n\n      if (hasPlugin(plugins, \"v8intrinsic\")) {\n        throw new Error(\"Cannot combine v8intrinsic plugin and Hack-style pipes.\");\n      }\n\n      var topicToken = getPluginOption(plugins, \"pipelineOperator\", \"topicToken\");\n\n      if (!TOPIC_TOKENS.includes(topicToken)) {\n        var tokenList = TOPIC_TOKENS.map(function (t) {\n          return \"\\\"\".concat(t, \"\\\"\");\n        }).join(\", \");\n        throw new Error(\"\\\"pipelineOperator\\\" in \\\"proposal\\\": \\\"hack\\\" mode also requires a \\\"topicToken\\\" option whose value must be one of: \".concat(tokenList, \".\"));\n      }\n\n      if (topicToken === \"#\" && tupleSyntaxIsHash) {\n        throw new Error('Plugin conflict between `[\"pipelineOperator\", { proposal: \"hack\", topicToken: \"#\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.');\n      }\n    } else if (proposal === \"smart\" && tupleSyntaxIsHash) {\n      throw new Error('Plugin conflict between `[\"pipelineOperator\", { proposal: \"smart\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.');\n    }\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n      }\n\n      var moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n      if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n        throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n      }\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(function (p) {\n      return \"'\".concat(p, \"'\");\n    }).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"asyncDoExpressions\") && !hasPlugin(plugins, \"doExpressions\")) {\n    var error = new Error(\"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\");\n    error.missingPlugins = \"doExpressions\";\n    throw error;\n  }\n}\n\nvar mixinPlugins = {\n  estree: estree,\n  jsx: jsx,\n  flow: flow,\n  typescript: typescript,\n  v8intrinsic: v8intrinsic,\n  placeholders: placeholders\n};\nvar mixinPluginNames = Object.keys(mixinPlugins);\nvar defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startColumn: 0,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false,\n  attachComment: true\n};\n\nfunction getOptions(opts) {\n  var options = {};\n\n  for (var _i3 = 0, _Object$keys2 = Object.keys(defaultOptions); _i3 < _Object$keys2.length; _i3++) {\n    var key = _Object$keys2[_i3];\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nvar unwrapParenthesizedExpression = function unwrapParenthesizedExpression(node) {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nvar LValParser = /*#__PURE__*/function (_NodeUtils) {\n  _inherits(LValParser, _NodeUtils);\n\n  var _super17 = _createSuper(LValParser);\n\n  function LValParser() {\n    _classCallCheck(this, LValParser);\n\n    return _super17.apply(this, arguments);\n  }\n\n  _createClass(LValParser, [{\n    key: \"toAssignable\",\n    value: function toAssignable(node) {\n      var isLHS = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var _node$extra, _node$extra3;\n\n      var parenthesized = undefined;\n\n      if (node.type === \"ParenthesizedExpression\" || (_node$extra = node.extra) != null && _node$extra.parenthesized) {\n        parenthesized = unwrapParenthesizedExpression(node);\n\n        if (isLHS) {\n          if (parenthesized.type === \"Identifier\") {\n            this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n          } else if (parenthesized.type !== \"MemberExpression\") {\n            this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n          }\n        } else {\n          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        }\n      }\n\n      switch (node.type) {\n        case \"Identifier\":\n        case \"ObjectPattern\":\n        case \"ArrayPattern\":\n        case \"AssignmentPattern\":\n        case \"RestElement\":\n          break;\n\n        case \"ObjectExpression\":\n          node.type = \"ObjectPattern\";\n\n          for (var i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n            var _node$extra2;\n\n            var prop = node.properties[i];\n            var isLast = i === last;\n            this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n            if (isLast && prop.type === \"RestElement\" && (_node$extra2 = node.extra) != null && _node$extra2.trailingComma) {\n              this.raiseRestNotLast(node.extra.trailingComma);\n            }\n          }\n\n          break;\n\n        case \"ObjectProperty\":\n          this.toAssignable(node.value, isLHS);\n          break;\n\n        case \"SpreadElement\":\n          {\n            this.checkToRestConversion(node);\n            node.type = \"RestElement\";\n            var arg = node.argument;\n            this.toAssignable(arg, isLHS);\n            break;\n          }\n\n        case \"ArrayExpression\":\n          node.type = \"ArrayPattern\";\n          this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);\n          break;\n\n        case \"AssignmentExpression\":\n          if (node.operator !== \"=\") {\n            this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\n          }\n\n          node.type = \"AssignmentPattern\";\n          delete node.operator;\n          this.toAssignable(node.left, isLHS);\n          break;\n\n        case \"ParenthesizedExpression\":\n          this.toAssignable(parenthesized, isLHS);\n          break;\n      }\n\n      return node;\n    }\n  }, {\n    key: \"toAssignableObjectExpressionProp\",\n    value: function toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n      if (prop.type === \"ObjectMethod\") {\n        var error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\n        this.raise(prop.key.start, error);\n      } else if (prop.type === \"SpreadElement\" && !isLast) {\n        this.raiseRestNotLast(prop.start);\n      } else {\n        this.toAssignable(prop, isLHS);\n      }\n    }\n  }, {\n    key: \"toAssignableList\",\n    value: function toAssignableList(exprList, trailingCommaPos, isLHS) {\n      var end = exprList.length;\n\n      if (end) {\n        var last = exprList[end - 1];\n\n        if ((last == null ? void 0 : last.type) === \"RestElement\") {\n          --end;\n        } else if ((last == null ? void 0 : last.type) === \"SpreadElement\") {\n          last.type = \"RestElement\";\n          var arg = last.argument;\n          this.toAssignable(arg, isLHS);\n          arg = unwrapParenthesizedExpression(arg);\n\n          if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\n            this.unexpected(arg.start);\n          }\n\n          if (trailingCommaPos) {\n            this.raiseTrailingCommaAfterRest(trailingCommaPos);\n          }\n\n          --end;\n        }\n      }\n\n      for (var i = 0; i < end; i++) {\n        var elt = exprList[i];\n\n        if (elt) {\n          this.toAssignable(elt, isLHS);\n\n          if (elt.type === \"RestElement\") {\n            this.raiseRestNotLast(elt.start);\n          }\n        }\n      }\n\n      return exprList;\n    }\n  }, {\n    key: \"isAssignable\",\n    value: function isAssignable(node, isBinding) {\n      var _this45 = this;\n\n      switch (node.type) {\n        case \"Identifier\":\n        case \"ObjectPattern\":\n        case \"ArrayPattern\":\n        case \"AssignmentPattern\":\n        case \"RestElement\":\n          return true;\n\n        case \"ObjectExpression\":\n          {\n            var last = node.properties.length - 1;\n            return node.properties.every(function (prop, i) {\n              return prop.type !== \"ObjectMethod\" && (i === last || prop.type !== \"SpreadElement\") && _this45.isAssignable(prop);\n            });\n          }\n\n        case \"ObjectProperty\":\n          return this.isAssignable(node.value);\n\n        case \"SpreadElement\":\n          return this.isAssignable(node.argument);\n\n        case \"ArrayExpression\":\n          return node.elements.every(function (element) {\n            return element === null || _this45.isAssignable(element);\n          });\n\n        case \"AssignmentExpression\":\n          return node.operator === \"=\";\n\n        case \"ParenthesizedExpression\":\n          return this.isAssignable(node.expression);\n\n        case \"MemberExpression\":\n        case \"OptionalMemberExpression\":\n          return !isBinding;\n\n        default:\n          return false;\n      }\n    }\n  }, {\n    key: \"toReferencedList\",\n    value: function toReferencedList(exprList, isParenthesizedExpr) {\n      return exprList;\n    }\n  }, {\n    key: \"toReferencedListDeep\",\n    value: function toReferencedListDeep(exprList, isParenthesizedExpr) {\n      this.toReferencedList(exprList, isParenthesizedExpr);\n\n      var _iterator7 = _createForOfIteratorHelper(exprList),\n          _step7;\n\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var expr = _step7.value;\n\n          if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n            this.toReferencedListDeep(expr.elements);\n          }\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n    }\n  }, {\n    key: \"parseSpread\",\n    value: function parseSpread(refExpressionErrors, refNeedsArrowPos) {\n      var node = this.startNode();\n      this.next();\n      node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\n      return this.finishNode(node, \"SpreadElement\");\n    }\n  }, {\n    key: \"parseRestBinding\",\n    value: function parseRestBinding() {\n      var node = this.startNode();\n      this.next();\n      node.argument = this.parseBindingAtom();\n      return this.finishNode(node, \"RestElement\");\n    }\n  }, {\n    key: \"parseBindingAtom\",\n    value: function parseBindingAtom() {\n      switch (this.state.type) {\n        case 0:\n          {\n            var node = this.startNode();\n            this.next();\n            node.elements = this.parseBindingList(3, 93, true);\n            return this.finishNode(node, \"ArrayPattern\");\n          }\n\n        case 5:\n          return this.parseObjectLike(8, true);\n      }\n\n      return this.parseIdentifier();\n    }\n  }, {\n    key: \"parseBindingList\",\n    value: function parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n      var elts = [];\n      var first = true;\n\n      while (!this.eat(close)) {\n        if (first) {\n          first = false;\n        } else {\n          this.expect(12);\n        }\n\n        if (allowEmpty && this.match(12)) {\n          elts.push(null);\n        } else if (this.eat(close)) {\n          break;\n        } else if (this.match(21)) {\n          elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n          this.checkCommaAfterRest(closeCharCode);\n          this.expect(close);\n          break;\n        } else {\n          var decorators = [];\n\n          if (this.match(26) && this.hasPlugin(\"decorators\")) {\n            this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\n          }\n\n          while (this.match(26)) {\n            decorators.push(this.parseDecorator());\n          }\n\n          elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n        }\n      }\n\n      return elts;\n    }\n  }, {\n    key: \"parseBindingRestProperty\",\n    value: function parseBindingRestProperty(prop) {\n      this.next();\n      prop.argument = this.parseIdentifier();\n      this.checkCommaAfterRest(125);\n      return this.finishNode(prop, \"RestElement\");\n    }\n  }, {\n    key: \"parseBindingProperty\",\n    value: function parseBindingProperty() {\n      var prop = this.startNode();\n      var _this$state3 = this.state,\n          type = _this$state3.type,\n          startPos = _this$state3.start,\n          startLoc = _this$state3.startLoc;\n\n      if (type === 21) {\n        return this.parseBindingRestProperty(prop);\n      } else {\n        this.parsePropertyName(prop);\n      }\n\n      prop.method = false;\n      this.parseObjPropValue(prop, startPos, startLoc, false, false, true, false);\n      return prop;\n    }\n  }, {\n    key: \"parseAssignableListItem\",\n    value: function parseAssignableListItem(allowModifiers, decorators) {\n      var left = this.parseMaybeDefault();\n      this.parseAssignableListItemTypes(left);\n      var elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n      if (decorators.length) {\n        left.decorators = decorators;\n      }\n\n      return elt;\n    }\n  }, {\n    key: \"parseAssignableListItemTypes\",\n    value: function parseAssignableListItemTypes(param) {\n      return param;\n    }\n  }, {\n    key: \"parseMaybeDefault\",\n    value: function parseMaybeDefault(startPos, startLoc, left) {\n      var _startLoc, _startPos, _left;\n\n      startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n      startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n      left = (_left = left) != null ? _left : this.parseBindingAtom();\n      if (!this.eat(29)) return left;\n      var node = this.startNodeAt(startPos, startLoc);\n      node.left = left;\n      node.right = this.parseMaybeAssignAllowIn();\n      return this.finishNode(node, \"AssignmentPattern\");\n    }\n  }, {\n    key: \"checkLVal\",\n    value: function checkLVal(expr, contextDescription) {\n      var bindingType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : BIND_NONE;\n      var checkClashes = arguments.length > 3 ? arguments[3] : undefined;\n      var disallowLetBinding = arguments.length > 4 ? arguments[4] : undefined;\n      var strictModeChanged = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n\n      switch (expr.type) {\n        case \"Identifier\":\n          {\n            var name = expr.name;\n\n            if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\n              this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\n            }\n\n            if (checkClashes) {\n              if (checkClashes.has(name)) {\n                this.raise(expr.start, ErrorMessages.ParamDupe);\n              } else {\n                checkClashes.add(name);\n              }\n            }\n\n            if (disallowLetBinding && name === \"let\") {\n              this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n            }\n\n            if (!(bindingType & BIND_NONE)) {\n              this.scope.declareName(name, bindingType, expr.start);\n            }\n\n            break;\n          }\n\n        case \"MemberExpression\":\n          if (bindingType !== BIND_NONE) {\n            this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n          }\n\n          break;\n\n        case \"ObjectPattern\":\n          var _iterator8 = _createForOfIteratorHelper(expr.properties),\n              _step8;\n\n          try {\n            for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n              var prop = _step8.value;\n              if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;\n              this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n            }\n          } catch (err) {\n            _iterator8.e(err);\n          } finally {\n            _iterator8.f();\n          }\n\n          break;\n\n        case \"ArrayPattern\":\n          var _iterator9 = _createForOfIteratorHelper(expr.elements),\n              _step9;\n\n          try {\n            for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n              var elem = _step9.value;\n\n              if (elem) {\n                this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n              }\n            }\n          } catch (err) {\n            _iterator9.e(err);\n          } finally {\n            _iterator9.f();\n          }\n\n          break;\n\n        case \"AssignmentPattern\":\n          this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\n          break;\n\n        case \"RestElement\":\n          this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\n          break;\n\n        case \"ParenthesizedExpression\":\n          this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\n          break;\n\n        default:\n          {\n            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n          }\n      }\n    }\n  }, {\n    key: \"checkToRestConversion\",\n    value: function checkToRestConversion(node) {\n      if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\n        this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\n      }\n    }\n  }, {\n    key: \"checkCommaAfterRest\",\n    value: function checkCommaAfterRest(close) {\n      if (this.match(12)) {\n        if (this.lookaheadCharCode() === close) {\n          this.raiseTrailingCommaAfterRest(this.state.start);\n        } else {\n          this.raiseRestNotLast(this.state.start);\n        }\n      }\n    }\n  }, {\n    key: \"raiseRestNotLast\",\n    value: function raiseRestNotLast(pos) {\n      throw this.raise(pos, ErrorMessages.ElementAfterRest);\n    }\n  }, {\n    key: \"raiseTrailingCommaAfterRest\",\n    value: function raiseTrailingCommaAfterRest(pos) {\n      this.raise(pos, ErrorMessages.RestTrailingComma);\n    }\n  }]);\n\n  return LValParser;\n}(NodeUtils);\n\nvar invalidHackPipeBodies = new Map([[\"ArrowFunctionExpression\", \"arrow function\"], [\"AssignmentExpression\", \"assignment\"], [\"ConditionalExpression\", \"conditional\"], [\"YieldExpression\", \"yield\"]]);\n\nvar ExpressionParser = /*#__PURE__*/function (_LValParser) {\n  _inherits(ExpressionParser, _LValParser);\n\n  var _super18 = _createSuper(ExpressionParser);\n\n  function ExpressionParser() {\n    _classCallCheck(this, ExpressionParser);\n\n    return _super18.apply(this, arguments);\n  }\n\n  _createClass(ExpressionParser, [{\n    key: \"checkProto\",\n    value: function checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n      if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n        return;\n      }\n\n      var key = prop.key;\n      var name = key.type === \"Identifier\" ? key.name : key.value;\n\n      if (name === \"__proto__\") {\n        if (isRecord) {\n          this.raise(key.start, ErrorMessages.RecordNoProto);\n          return;\n        }\n\n        if (protoRef.used) {\n          if (refExpressionErrors) {\n            if (refExpressionErrors.doubleProto === -1) {\n              refExpressionErrors.doubleProto = key.start;\n            }\n          } else {\n            this.raise(key.start, ErrorMessages.DuplicateProto);\n          }\n        }\n\n        protoRef.used = true;\n      }\n    }\n  }, {\n    key: \"shouldExitDescending\",\n    value: function shouldExitDescending(expr, potentialArrowAt) {\n      return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n    }\n  }, {\n    key: \"getExpression\",\n    value: function getExpression() {\n      this.enterInitialScopes();\n      this.nextToken();\n      var expr = this.parseExpression();\n\n      if (!this.match(131)) {\n        this.unexpected();\n      }\n\n      this.finalizeRemainingComments();\n      expr.comments = this.state.comments;\n      expr.errors = this.state.errors;\n\n      if (this.options.tokens) {\n        expr.tokens = this.tokens;\n      }\n\n      return expr;\n    }\n  }, {\n    key: \"parseExpression\",\n    value: function parseExpression(disallowIn, refExpressionErrors) {\n      var _this46 = this;\n\n      if (disallowIn) {\n        return this.disallowInAnd(function () {\n          return _this46.parseExpressionBase(refExpressionErrors);\n        });\n      }\n\n      return this.allowInAnd(function () {\n        return _this46.parseExpressionBase(refExpressionErrors);\n      });\n    }\n  }, {\n    key: \"parseExpressionBase\",\n    value: function parseExpressionBase(refExpressionErrors) {\n      var startPos = this.state.start;\n      var startLoc = this.state.startLoc;\n      var expr = this.parseMaybeAssign(refExpressionErrors);\n\n      if (this.match(12)) {\n        var node = this.startNodeAt(startPos, startLoc);\n        node.expressions = [expr];\n\n        while (this.eat(12)) {\n          node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n        }\n\n        this.toReferencedList(node.expressions);\n        return this.finishNode(node, \"SequenceExpression\");\n      }\n\n      return expr;\n    }\n  }, {\n    key: \"parseMaybeAssignDisallowIn\",\n    value: function parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse) {\n      var _this47 = this;\n\n      return this.disallowInAnd(function () {\n        return _this47.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n      });\n    }\n  }, {\n    key: \"parseMaybeAssignAllowIn\",\n    value: function parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse) {\n      var _this48 = this;\n\n      return this.allowInAnd(function () {\n        return _this48.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n      });\n    }\n  }, {\n    key: \"setOptionalParametersError\",\n    value: function setOptionalParametersError(refExpressionErrors, resultError) {\n      var _resultError$pos;\n\n      refExpressionErrors.optionalParameters = (_resultError$pos = resultError == null ? void 0 : resultError.pos) != null ? _resultError$pos : this.state.start;\n    }\n  }, {\n    key: \"parseMaybeAssign\",\n    value: function parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n      var startPos = this.state.start;\n      var startLoc = this.state.startLoc;\n\n      if (this.isContextual(101)) {\n        if (this.prodParam.hasYield) {\n          var _left2 = this.parseYield();\n\n          if (afterLeftParse) {\n            _left2 = afterLeftParse.call(this, _left2, startPos, startLoc);\n          }\n\n          return _left2;\n        }\n      }\n\n      var ownExpressionErrors;\n\n      if (refExpressionErrors) {\n        ownExpressionErrors = false;\n      } else {\n        refExpressionErrors = new ExpressionErrors();\n        ownExpressionErrors = true;\n      }\n\n      var type = this.state.type;\n\n      if (type === 10 || tokenIsIdentifier(type)) {\n        this.state.potentialArrowAt = this.state.start;\n      }\n\n      var left = this.parseMaybeConditional(refExpressionErrors);\n\n      if (afterLeftParse) {\n        left = afterLeftParse.call(this, left, startPos, startLoc);\n      }\n\n      if (tokenIsAssignment(this.state.type)) {\n        var node = this.startNodeAt(startPos, startLoc);\n        var operator = this.state.value;\n        node.operator = operator;\n\n        if (this.match(29)) {\n          node.left = this.toAssignable(left, true);\n\n          if (refExpressionErrors.doubleProto >= startPos) {\n            refExpressionErrors.doubleProto = -1;\n          }\n\n          if (refExpressionErrors.shorthandAssign >= startPos) {\n            refExpressionErrors.shorthandAssign = -1;\n          }\n        } else {\n          node.left = left;\n        }\n\n        this.checkLVal(left, \"assignment expression\");\n        this.next();\n        node.right = this.parseMaybeAssign();\n        return this.finishNode(node, \"AssignmentExpression\");\n      } else if (ownExpressionErrors) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n      }\n\n      return left;\n    }\n  }, {\n    key: \"parseMaybeConditional\",\n    value: function parseMaybeConditional(refExpressionErrors) {\n      var startPos = this.state.start;\n      var startLoc = this.state.startLoc;\n      var potentialArrowAt = this.state.potentialArrowAt;\n      var expr = this.parseExprOps(refExpressionErrors);\n\n      if (this.shouldExitDescending(expr, potentialArrowAt)) {\n        return expr;\n      }\n\n      return this.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n    }\n  }, {\n    key: \"parseConditional\",\n    value: function parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n      if (this.eat(17)) {\n        var node = this.startNodeAt(startPos, startLoc);\n        node.test = expr;\n        node.consequent = this.parseMaybeAssignAllowIn();\n        this.expect(14);\n        node.alternate = this.parseMaybeAssign();\n        return this.finishNode(node, \"ConditionalExpression\");\n      }\n\n      return expr;\n    }\n  }, {\n    key: \"parseMaybeUnaryOrPrivate\",\n    value: function parseMaybeUnaryOrPrivate(refExpressionErrors) {\n      return this.match(130) ? this.parsePrivateName() : this.parseMaybeUnary(refExpressionErrors);\n    }\n  }, {\n    key: \"parseExprOps\",\n    value: function parseExprOps(refExpressionErrors) {\n      var startPos = this.state.start;\n      var startLoc = this.state.startLoc;\n      var potentialArrowAt = this.state.potentialArrowAt;\n      var expr = this.parseMaybeUnaryOrPrivate(refExpressionErrors);\n\n      if (this.shouldExitDescending(expr, potentialArrowAt)) {\n        return expr;\n      }\n\n      return this.parseExprOp(expr, startPos, startLoc, -1);\n    }\n  }, {\n    key: \"parseExprOp\",\n    value: function parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n      if (this.isPrivateName(left)) {\n        var value = this.getPrivateNameSV(left);\n        var start = left.start;\n\n        if (minPrec >= tokenOperatorPrecedence(54) || !this.prodParam.hasIn || !this.match(54)) {\n          this.raise(start, ErrorMessages.PrivateInExpectedIn, value);\n        }\n\n        this.classScope.usePrivateName(value, start);\n      }\n\n      var op = this.state.type;\n\n      if (tokenIsOperator(op) && (this.prodParam.hasIn || !this.match(54))) {\n        var prec = tokenOperatorPrecedence(op);\n\n        if (prec > minPrec) {\n          if (op === 37) {\n            this.expectPlugin(\"pipelineOperator\");\n\n            if (this.state.inFSharpPipelineDirectBody) {\n              return left;\n            }\n\n            this.checkPipelineAtInfixOperator(left, leftStartPos);\n          }\n\n          var node = this.startNodeAt(leftStartPos, leftStartLoc);\n          node.left = left;\n          node.operator = this.state.value;\n          var logical = op === 39 || op === 40;\n          var coalesce = op === 38;\n\n          if (coalesce) {\n            prec = tokenOperatorPrecedence(40);\n          }\n\n          this.next();\n\n          if (op === 37 && this.hasPlugin([\"pipelineOperator\", {\n            proposal: \"minimal\"\n          }])) {\n            if (this.state.type === 92 && this.prodParam.hasAwait) {\n              throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n            }\n          }\n\n          node.right = this.parseExprOpRightExpr(op, prec);\n          this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n          var nextOp = this.state.type;\n\n          if (coalesce && (nextOp === 39 || nextOp === 40) || logical && nextOp === 38) {\n            throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n          }\n\n          return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n        }\n      }\n\n      return left;\n    }\n  }, {\n    key: \"parseExprOpRightExpr\",\n    value: function parseExprOpRightExpr(op, prec) {\n      var _this49 = this;\n\n      var startPos = this.state.start;\n      var startLoc = this.state.startLoc;\n\n      switch (op) {\n        case 37:\n          switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n            case \"hack\":\n              return this.withTopicBindingContext(function () {\n                return _this49.parseHackPipeBody();\n              });\n\n            case \"smart\":\n              return this.withTopicBindingContext(function () {\n                if (_this49.prodParam.hasYield && _this49.isContextual(101)) {\n                  throw _this49.raise(_this49.state.start, ErrorMessages.PipeBodyIsTighter, _this49.state.value);\n                }\n\n                return _this49.parseSmartPipelineBodyInStyle(_this49.parseExprOpBaseRightExpr(op, prec), startPos, startLoc);\n              });\n\n            case \"fsharp\":\n              return this.withSoloAwaitPermittingContext(function () {\n                return _this49.parseFSharpPipelineBody(prec);\n              });\n          }\n\n        default:\n          return this.parseExprOpBaseRightExpr(op, prec);\n      }\n    }\n  }, {\n    key: \"parseExprOpBaseRightExpr\",\n    value: function parseExprOpBaseRightExpr(op, prec) {\n      var startPos = this.state.start;\n      var startLoc = this.state.startLoc;\n      return this.parseExprOp(this.parseMaybeUnaryOrPrivate(), startPos, startLoc, tokenIsRightAssociative(op) ? prec - 1 : prec);\n    }\n  }, {\n    key: \"parseHackPipeBody\",\n    value: function parseHackPipeBody() {\n      var _body$extra;\n\n      var start = this.state.start;\n      var body = this.parseMaybeAssign();\n\n      if (invalidHackPipeBodies.has(body.type) && !((_body$extra = body.extra) != null && _body$extra.parenthesized)) {\n        this.raise(start, ErrorMessages.PipeUnparenthesizedBody, invalidHackPipeBodies.get(body.type));\n      }\n\n      if (!this.topicReferenceWasUsedInCurrentContext()) {\n        this.raise(start, ErrorMessages.PipeTopicUnused);\n      }\n\n      return body;\n    }\n  }, {\n    key: \"checkExponentialAfterUnary\",\n    value: function checkExponentialAfterUnary(node) {\n      if (this.match(53)) {\n        this.raise(node.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n      }\n    }\n  }, {\n    key: \"parseMaybeUnary\",\n    value: function parseMaybeUnary(refExpressionErrors, sawUnary) {\n      var startPos = this.state.start;\n      var startLoc = this.state.startLoc;\n      var isAwait = this.isContextual(92);\n\n      if (isAwait && this.isAwaitAllowed()) {\n        this.next();\n\n        var _expr = this.parseAwait(startPos, startLoc);\n\n        if (!sawUnary) this.checkExponentialAfterUnary(_expr);\n        return _expr;\n      }\n\n      var update = this.match(34);\n      var node = this.startNode();\n\n      if (tokenIsPrefix(this.state.type)) {\n        node.operator = this.state.value;\n        node.prefix = true;\n\n        if (this.match(68)) {\n          this.expectPlugin(\"throwExpressions\");\n        }\n\n        var isDelete = this.match(85);\n        this.next();\n        node.argument = this.parseMaybeUnary(null, true);\n        this.checkExpressionErrors(refExpressionErrors, true);\n\n        if (this.state.strict && isDelete) {\n          var arg = node.argument;\n\n          if (arg.type === \"Identifier\") {\n            this.raise(node.start, ErrorMessages.StrictDelete);\n          } else if (this.hasPropertyAsPrivateName(arg)) {\n            this.raise(node.start, ErrorMessages.DeletePrivateField);\n          }\n        }\n\n        if (!update) {\n          if (!sawUnary) this.checkExponentialAfterUnary(node);\n          return this.finishNode(node, \"UnaryExpression\");\n        }\n      }\n\n      var expr = this.parseUpdate(node, update, refExpressionErrors);\n\n      if (isAwait) {\n        var type = this.state.type;\n\n        var _startsExpr = this.hasPlugin(\"v8intrinsic\") ? tokenCanStartExpression(type) : tokenCanStartExpression(type) && !this.match(50);\n\n        if (_startsExpr && !this.isAmbiguousAwait()) {\n          this.raiseOverwrite(startPos, ErrorMessages.AwaitNotInAsyncContext);\n          return this.parseAwait(startPos, startLoc);\n        }\n      }\n\n      return expr;\n    }\n  }, {\n    key: \"parseUpdate\",\n    value: function parseUpdate(node, update, refExpressionErrors) {\n      if (update) {\n        this.checkLVal(node.argument, \"prefix operation\");\n        return this.finishNode(node, \"UpdateExpression\");\n      }\n\n      var startPos = this.state.start;\n      var startLoc = this.state.startLoc;\n      var expr = this.parseExprSubscripts(refExpressionErrors);\n      if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n      while (tokenIsPostfix(this.state.type) && !this.canInsertSemicolon()) {\n        var _node9 = this.startNodeAt(startPos, startLoc);\n\n        _node9.operator = this.state.value;\n        _node9.prefix = false;\n        _node9.argument = expr;\n        this.checkLVal(expr, \"postfix operation\");\n        this.next();\n        expr = this.finishNode(_node9, \"UpdateExpression\");\n      }\n\n      return expr;\n    }\n  }, {\n    key: \"parseExprSubscripts\",\n    value: function parseExprSubscripts(refExpressionErrors) {\n      var startPos = this.state.start;\n      var startLoc = this.state.startLoc;\n      var potentialArrowAt = this.state.potentialArrowAt;\n      var expr = this.parseExprAtom(refExpressionErrors);\n\n      if (this.shouldExitDescending(expr, potentialArrowAt)) {\n        return expr;\n      }\n\n      return this.parseSubscripts(expr, startPos, startLoc);\n    }\n  }, {\n    key: \"parseSubscripts\",\n    value: function parseSubscripts(base, startPos, startLoc, noCalls) {\n      var state = {\n        optionalChainMember: false,\n        maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n        stop: false\n      };\n\n      do {\n        base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n        state.maybeAsyncArrow = false;\n      } while (!state.stop);\n\n      return base;\n    }\n  }, {\n    key: \"parseSubscript\",\n    value: function parseSubscript(base, startPos, startLoc, noCalls, state) {\n      var type = this.state.type;\n\n      if (!noCalls && type === 15) {\n        return this.parseBind(base, startPos, startLoc, noCalls, state);\n      } else if (tokenIsTemplate(type)) {\n        return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n      }\n\n      var optional = false;\n\n      if (type === 18) {\n        if (noCalls && this.lookaheadCharCode() === 40) {\n          state.stop = true;\n          return base;\n        }\n\n        state.optionalChainMember = optional = true;\n        this.next();\n      }\n\n      if (!noCalls && this.match(10)) {\n        return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n      } else {\n        var computed = this.eat(0);\n\n        if (computed || optional || this.eat(16)) {\n          return this.parseMember(base, startPos, startLoc, state, computed, optional);\n        } else {\n          state.stop = true;\n          return base;\n        }\n      }\n    }\n  }, {\n    key: \"parseMember\",\n    value: function parseMember(base, startPos, startLoc, state, computed, optional) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.object = base;\n      node.computed = computed;\n\n      if (computed) {\n        node.property = this.parseExpression();\n        this.expect(3);\n      } else if (this.match(130)) {\n        if (base.type === \"Super\") {\n          this.raise(startPos, ErrorMessages.SuperPrivateField);\n        }\n\n        this.classScope.usePrivateName(this.state.value, this.state.start);\n        node.property = this.parsePrivateName();\n      } else {\n        node.property = this.parseIdentifier(true);\n      }\n\n      if (state.optionalChainMember) {\n        node.optional = optional;\n        return this.finishNode(node, \"OptionalMemberExpression\");\n      } else {\n        return this.finishNode(node, \"MemberExpression\");\n      }\n    }\n  }, {\n    key: \"parseBind\",\n    value: function parseBind(base, startPos, startLoc, noCalls, state) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.object = base;\n      this.next();\n      node.callee = this.parseNoCallExpr();\n      state.stop = true;\n      return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n    }\n  }, {\n    key: \"parseCoverCallAndAsyncArrowHead\",\n    value: function parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n      var oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n      var refExpressionErrors = null;\n      this.state.maybeInArrowParameters = true;\n      this.next();\n      var node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n\n      if (state.maybeAsyncArrow) {\n        this.expressionScope.enter(newAsyncArrowScope());\n        refExpressionErrors = new ExpressionErrors();\n      }\n\n      if (state.optionalChainMember) {\n        node.optional = optional;\n      }\n\n      if (optional) {\n        node.arguments = this.parseCallExpressionArguments(11);\n      } else {\n        node.arguments = this.parseCallExpressionArguments(11, base.type === \"Import\", base.type !== \"Super\", node, refExpressionErrors);\n      }\n\n      this.finishCallExpression(node, state.optionalChainMember);\n\n      if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n        state.stop = true;\n        this.expressionScope.validateAsPattern();\n        this.expressionScope.exit();\n        node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\n      } else {\n        if (state.maybeAsyncArrow) {\n          this.checkExpressionErrors(refExpressionErrors, true);\n          this.expressionScope.exit();\n        }\n\n        this.toReferencedArguments(node);\n      }\n\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n      return node;\n    }\n  }, {\n    key: \"toReferencedArguments\",\n    value: function toReferencedArguments(node, isParenthesizedExpr) {\n      this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n    }\n  }, {\n    key: \"parseTaggedTemplateExpression\",\n    value: function parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.tag = base;\n      node.quasi = this.parseTemplate(true);\n\n      if (state.optionalChainMember) {\n        this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\n      }\n\n      return this.finishNode(node, \"TaggedTemplateExpression\");\n    }\n  }, {\n    key: \"atPossibleAsyncArrow\",\n    value: function atPossibleAsyncArrow(base) {\n      return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n    }\n  }, {\n    key: \"finishCallExpression\",\n    value: function finishCallExpression(node, optional) {\n      if (node.callee.type === \"Import\") {\n        if (node.arguments.length === 2) {\n          {\n            if (!this.hasPlugin(\"moduleAttributes\")) {\n              this.expectPlugin(\"importAssertions\");\n            }\n          }\n        }\n\n        if (node.arguments.length === 0 || node.arguments.length > 2) {\n          this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\n        } else {\n          var _iterator10 = _createForOfIteratorHelper(node.arguments),\n              _step10;\n\n          try {\n            for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n              var arg = _step10.value;\n\n              if (arg.type === \"SpreadElement\") {\n                this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\n              }\n            }\n          } catch (err) {\n            _iterator10.e(err);\n          } finally {\n            _iterator10.f();\n          }\n        }\n      }\n\n      return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n    }\n  }, {\n    key: \"parseCallExpressionArguments\",\n    value: function parseCallExpressionArguments(close, dynamicImport, allowPlaceholder, nodeForExtra, refExpressionErrors) {\n      var elts = [];\n      var first = true;\n      var oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n      this.state.inFSharpPipelineDirectBody = false;\n\n      while (!this.eat(close)) {\n        if (first) {\n          first = false;\n        } else {\n          this.expect(12);\n\n          if (this.match(close)) {\n            if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n              this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\n            }\n\n            if (nodeForExtra) {\n              this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n            }\n\n            this.next();\n            break;\n          }\n        }\n\n        elts.push(this.parseExprListItem(false, refExpressionErrors, allowPlaceholder));\n      }\n\n      this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n      return elts;\n    }\n  }, {\n    key: \"shouldParseAsyncArrow\",\n    value: function shouldParseAsyncArrow() {\n      return this.match(19) && !this.canInsertSemicolon();\n    }\n  }, {\n    key: \"parseAsyncArrowFromCallExpression\",\n    value: function parseAsyncArrowFromCallExpression(node, call) {\n      var _call$extra;\n\n      this.resetPreviousNodeTrailingComments(call);\n      this.expect(19);\n      this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\n\n      if (call.innerComments) {\n        setInnerComments(node, call.innerComments);\n      }\n\n      if (call.callee.trailingComments) {\n        setInnerComments(node, call.callee.trailingComments);\n      }\n\n      return node;\n    }\n  }, {\n    key: \"parseNoCallExpr\",\n    value: function parseNoCallExpr() {\n      var startPos = this.state.start;\n      var startLoc = this.state.startLoc;\n      return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n    }\n  }, {\n    key: \"parseExprAtom\",\n    value: function parseExprAtom(refExpressionErrors) {\n      var node;\n      var type = this.state.type;\n\n      switch (type) {\n        case 75:\n          return this.parseSuper();\n\n        case 79:\n          node = this.startNode();\n          this.next();\n\n          if (this.match(16)) {\n            return this.parseImportMetaProperty(node);\n          }\n\n          if (!this.match(10)) {\n            this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n          }\n\n          return this.finishNode(node, \"Import\");\n\n        case 74:\n          node = this.startNode();\n          this.next();\n          return this.finishNode(node, \"ThisExpression\");\n\n        case 86:\n          {\n            return this.parseDo(this.startNode(), false);\n          }\n\n        case 52:\n        case 31:\n          {\n            this.readRegexp();\n            return this.parseRegExpLiteral(this.state.value);\n          }\n\n        case 126:\n          return this.parseNumericLiteral(this.state.value);\n\n        case 127:\n          return this.parseBigIntLiteral(this.state.value);\n\n        case 128:\n          return this.parseDecimalLiteral(this.state.value);\n\n        case 125:\n          return this.parseStringLiteral(this.state.value);\n\n        case 80:\n          return this.parseNullLiteral();\n\n        case 81:\n          return this.parseBooleanLiteral(true);\n\n        case 82:\n          return this.parseBooleanLiteral(false);\n\n        case 10:\n          {\n            var canBeArrow = this.state.potentialArrowAt === this.state.start;\n            return this.parseParenAndDistinguishExpression(canBeArrow);\n          }\n\n        case 2:\n        case 1:\n          {\n            return this.parseArrayLike(this.state.type === 2 ? 4 : 3, false, true);\n          }\n\n        case 0:\n          {\n            return this.parseArrayLike(3, true, false, refExpressionErrors);\n          }\n\n        case 6:\n        case 7:\n          {\n            return this.parseObjectLike(this.state.type === 6 ? 9 : 8, false, true);\n          }\n\n        case 5:\n          {\n            return this.parseObjectLike(8, false, false, refExpressionErrors);\n          }\n\n        case 64:\n          return this.parseFunctionOrFunctionSent();\n\n        case 26:\n          this.parseDecorators();\n\n        case 76:\n          node = this.startNode();\n          this.takeDecorators(node);\n          return this.parseClass(node, false);\n\n        case 73:\n          return this.parseNewOrNewTarget();\n\n        case 25:\n        case 24:\n          return this.parseTemplate(false);\n\n        case 15:\n          {\n            node = this.startNode();\n            this.next();\n            node.object = null;\n            var callee = node.callee = this.parseNoCallExpr();\n\n            if (callee.type === \"MemberExpression\") {\n              return this.finishNode(node, \"BindExpression\");\n            } else {\n              throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n            }\n          }\n\n        case 130:\n          {\n            this.raise(this.state.start, ErrorMessages.PrivateInExpectedIn, this.state.value);\n            return this.parsePrivateName();\n          }\n\n        case 33:\n          {\n            return this.parseTopicReferenceThenEqualsSign(50, \"%\");\n          }\n\n        case 32:\n          {\n            return this.parseTopicReferenceThenEqualsSign(42, \"^\");\n          }\n\n        case 42:\n        case 50:\n        case 27:\n          {\n            var pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n            if (pipeProposal) {\n              return this.parseTopicReference(pipeProposal);\n            } else {\n              throw this.unexpected();\n            }\n          }\n\n        case 45:\n          {\n            var lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n            if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n              this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n              break;\n            } else {\n              throw this.unexpected();\n            }\n          }\n\n        default:\n          if (tokenIsIdentifier(type)) {\n            if (this.isContextual(119) && this.lookaheadCharCode() === 123 && !this.hasFollowingLineBreak()) {\n              return this.parseModuleExpression();\n            }\n\n            var _canBeArrow = this.state.potentialArrowAt === this.state.start;\n\n            var containsEsc = this.state.containsEsc;\n            var id = this.parseIdentifier();\n\n            if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n              var _type = this.state.type;\n\n              if (_type === 64) {\n                this.resetPreviousNodeTrailingComments(id);\n                this.next();\n                return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n              } else if (tokenIsIdentifier(_type)) {\n                if (this.lookaheadCharCode() === 61) {\n                  return this.parseAsyncArrowUnaryFunction(this.startNodeAtNode(id));\n                } else {\n                  return id;\n                }\n              } else if (_type === 86) {\n                this.resetPreviousNodeTrailingComments(id);\n                return this.parseDo(this.startNodeAtNode(id), true);\n              }\n            }\n\n            if (_canBeArrow && this.match(19) && !this.canInsertSemicolon()) {\n              this.next();\n              return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n            }\n\n            return id;\n          } else {\n            throw this.unexpected();\n          }\n\n      }\n    }\n  }, {\n    key: \"parseTopicReferenceThenEqualsSign\",\n    value: function parseTopicReferenceThenEqualsSign(topicTokenType, topicTokenValue) {\n      var pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n      if (pipeProposal) {\n        this.state.type = topicTokenType;\n        this.state.value = topicTokenValue;\n        this.state.pos--;\n        this.state.end--;\n        this.state.endLoc.column--;\n        return this.parseTopicReference(pipeProposal);\n      } else {\n        throw this.unexpected();\n      }\n    }\n  }, {\n    key: \"parseTopicReference\",\n    value: function parseTopicReference(pipeProposal) {\n      var node = this.startNode();\n      var start = this.state.start;\n      var tokenType = this.state.type;\n      this.next();\n      return this.finishTopicReference(node, start, pipeProposal, tokenType);\n    }\n  }, {\n    key: \"finishTopicReference\",\n    value: function finishTopicReference(node, start, pipeProposal, tokenType) {\n      if (this.testTopicReferenceConfiguration(pipeProposal, start, tokenType)) {\n        var nodeType;\n\n        if (pipeProposal === \"smart\") {\n          nodeType = \"PipelinePrimaryTopicReference\";\n        } else {\n          nodeType = \"TopicReference\";\n        }\n\n        if (!this.topicReferenceIsAllowedInCurrentContext()) {\n          if (pipeProposal === \"smart\") {\n            this.raise(start, ErrorMessages.PrimaryTopicNotAllowed);\n          } else {\n            this.raise(start, ErrorMessages.PipeTopicUnbound);\n          }\n        }\n\n        this.registerTopicReference();\n        return this.finishNode(node, nodeType);\n      } else {\n        throw this.raise(start, ErrorMessages.PipeTopicUnconfiguredToken, tokenLabelName(tokenType));\n      }\n    }\n  }, {\n    key: \"testTopicReferenceConfiguration\",\n    value: function testTopicReferenceConfiguration(pipeProposal, start, tokenType) {\n      switch (pipeProposal) {\n        case \"hack\":\n          {\n            return this.hasPlugin([\"pipelineOperator\", {\n              topicToken: tokenLabelName(tokenType)\n            }]);\n          }\n\n        case \"smart\":\n          return tokenType === 27;\n\n        default:\n          throw this.raise(start, ErrorMessages.PipeTopicRequiresHackPipes);\n      }\n    }\n  }, {\n    key: \"parseAsyncArrowUnaryFunction\",\n    value: function parseAsyncArrowUnaryFunction(node) {\n      this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n      var params = [this.parseIdentifier()];\n      this.prodParam.exit();\n\n      if (this.hasPrecedingLineBreak()) {\n        this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\n      }\n\n      this.expect(19);\n      this.parseArrowExpression(node, params, true);\n      return node;\n    }\n  }, {\n    key: \"parseDo\",\n    value: function parseDo(node, isAsync) {\n      this.expectPlugin(\"doExpressions\");\n\n      if (isAsync) {\n        this.expectPlugin(\"asyncDoExpressions\");\n      }\n\n      node.async = isAsync;\n      this.next();\n      var oldLabels = this.state.labels;\n      this.state.labels = [];\n\n      if (isAsync) {\n        this.prodParam.enter(PARAM_AWAIT);\n        node.body = this.parseBlock();\n        this.prodParam.exit();\n      } else {\n        node.body = this.parseBlock();\n      }\n\n      this.state.labels = oldLabels;\n      return this.finishNode(node, \"DoExpression\");\n    }\n  }, {\n    key: \"parseSuper\",\n    value: function parseSuper() {\n      var node = this.startNode();\n      this.next();\n\n      if (this.match(10) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n        this.raise(node.start, ErrorMessages.SuperNotAllowed);\n      } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n        this.raise(node.start, ErrorMessages.UnexpectedSuper);\n      }\n\n      if (!this.match(10) && !this.match(0) && !this.match(16)) {\n        this.raise(node.start, ErrorMessages.UnsupportedSuper);\n      }\n\n      return this.finishNode(node, \"Super\");\n    }\n  }, {\n    key: \"parsePrivateName\",\n    value: function parsePrivateName() {\n      var node = this.startNode();\n      var id = this.startNodeAt(this.state.start + 1, new Position(this.state.curLine, this.state.start + 1 - this.state.lineStart));\n      var name = this.state.value;\n      this.next();\n      node.id = this.createIdentifier(id, name);\n      return this.finishNode(node, \"PrivateName\");\n    }\n  }, {\n    key: \"parseFunctionOrFunctionSent\",\n    value: function parseFunctionOrFunctionSent() {\n      var node = this.startNode();\n      this.next();\n\n      if (this.prodParam.hasYield && this.match(16)) {\n        var meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n        this.next();\n\n        if (this.match(98)) {\n          this.expectPlugin(\"functionSent\");\n        } else if (!this.hasPlugin(\"functionSent\")) {\n          this.unexpected();\n        }\n\n        return this.parseMetaProperty(node, meta, \"sent\");\n      }\n\n      return this.parseFunction(node);\n    }\n  }, {\n    key: \"parseMetaProperty\",\n    value: function parseMetaProperty(node, meta, propertyName) {\n      node.meta = meta;\n      var containsEsc = this.state.containsEsc;\n      node.property = this.parseIdentifier(true);\n\n      if (node.property.name !== propertyName || containsEsc) {\n        this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\n      }\n\n      return this.finishNode(node, \"MetaProperty\");\n    }\n  }, {\n    key: \"parseImportMetaProperty\",\n    value: function parseImportMetaProperty(node) {\n      var id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n      this.next();\n\n      if (this.isContextual(96)) {\n        if (!this.inModule) {\n          this.raise(id.start, SourceTypeModuleErrorMessages.ImportMetaOutsideModule);\n        }\n\n        this.sawUnambiguousESM = true;\n      }\n\n      return this.parseMetaProperty(node, id, \"meta\");\n    }\n  }, {\n    key: \"parseLiteralAtNode\",\n    value: function parseLiteralAtNode(value, type, node) {\n      this.addExtra(node, \"rawValue\", value);\n      this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n      node.value = value;\n      this.next();\n      return this.finishNode(node, type);\n    }\n  }, {\n    key: \"parseLiteral\",\n    value: function parseLiteral(value, type) {\n      var node = this.startNode();\n      return this.parseLiteralAtNode(value, type, node);\n    }\n  }, {\n    key: \"parseStringLiteral\",\n    value: function parseStringLiteral(value) {\n      return this.parseLiteral(value, \"StringLiteral\");\n    }\n  }, {\n    key: \"parseNumericLiteral\",\n    value: function parseNumericLiteral(value) {\n      return this.parseLiteral(value, \"NumericLiteral\");\n    }\n  }, {\n    key: \"parseBigIntLiteral\",\n    value: function parseBigIntLiteral(value) {\n      return this.parseLiteral(value, \"BigIntLiteral\");\n    }\n  }, {\n    key: \"parseDecimalLiteral\",\n    value: function parseDecimalLiteral(value) {\n      return this.parseLiteral(value, \"DecimalLiteral\");\n    }\n  }, {\n    key: \"parseRegExpLiteral\",\n    value: function parseRegExpLiteral(value) {\n      var node = this.parseLiteral(value.value, \"RegExpLiteral\");\n      node.pattern = value.pattern;\n      node.flags = value.flags;\n      return node;\n    }\n  }, {\n    key: \"parseBooleanLiteral\",\n    value: function parseBooleanLiteral(value) {\n      var node = this.startNode();\n      node.value = value;\n      this.next();\n      return this.finishNode(node, \"BooleanLiteral\");\n    }\n  }, {\n    key: \"parseNullLiteral\",\n    value: function parseNullLiteral() {\n      var node = this.startNode();\n      this.next();\n      return this.finishNode(node, \"NullLiteral\");\n    }\n  }, {\n    key: \"parseParenAndDistinguishExpression\",\n    value: function parseParenAndDistinguishExpression(canBeArrow) {\n      var startPos = this.state.start;\n      var startLoc = this.state.startLoc;\n      var val;\n      this.next();\n      this.expressionScope.enter(newArrowHeadScope());\n      var oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n      var oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n      this.state.maybeInArrowParameters = true;\n      this.state.inFSharpPipelineDirectBody = false;\n      var innerStartPos = this.state.start;\n      var innerStartLoc = this.state.startLoc;\n      var exprList = [];\n      var refExpressionErrors = new ExpressionErrors();\n      var first = true;\n      var spreadStart;\n      var optionalCommaStart;\n\n      while (!this.match(11)) {\n        if (first) {\n          first = false;\n        } else {\n          this.expect(12, refExpressionErrors.optionalParameters === -1 ? null : refExpressionErrors.optionalParameters);\n\n          if (this.match(11)) {\n            optionalCommaStart = this.state.start;\n            break;\n          }\n        }\n\n        if (this.match(21)) {\n          var spreadNodeStartPos = this.state.start;\n          var spreadNodeStartLoc = this.state.startLoc;\n          spreadStart = this.state.start;\n          exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n          this.checkCommaAfterRest(41);\n          break;\n        } else {\n          exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem));\n        }\n      }\n\n      var innerEndPos = this.state.lastTokEnd;\n      var innerEndLoc = this.state.lastTokEndLoc;\n      this.expect(11);\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n      this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n      var arrowNode = this.startNodeAt(startPos, startLoc);\n\n      if (canBeArrow && this.shouldParseArrow(exprList) && (arrowNode = this.parseArrow(arrowNode))) {\n        this.expressionScope.validateAsPattern();\n        this.expressionScope.exit();\n        this.parseArrowExpression(arrowNode, exprList, false);\n        return arrowNode;\n      }\n\n      this.expressionScope.exit();\n\n      if (!exprList.length) {\n        this.unexpected(this.state.lastTokStart);\n      }\n\n      if (optionalCommaStart) this.unexpected(optionalCommaStart);\n      if (spreadStart) this.unexpected(spreadStart);\n      this.checkExpressionErrors(refExpressionErrors, true);\n      this.toReferencedListDeep(exprList, true);\n\n      if (exprList.length > 1) {\n        val = this.startNodeAt(innerStartPos, innerStartLoc);\n        val.expressions = exprList;\n        this.finishNode(val, \"SequenceExpression\");\n        this.resetEndLocation(val, innerEndPos, innerEndLoc);\n      } else {\n        val = exprList[0];\n      }\n\n      if (!this.options.createParenthesizedExpressions) {\n        this.addExtra(val, \"parenthesized\", true);\n        this.addExtra(val, \"parenStart\", startPos);\n        this.takeSurroundingComments(val, startPos, this.state.lastTokEnd);\n        return val;\n      }\n\n      var parenExpression = this.startNodeAt(startPos, startLoc);\n      parenExpression.expression = val;\n      this.finishNode(parenExpression, \"ParenthesizedExpression\");\n      return parenExpression;\n    }\n  }, {\n    key: \"shouldParseArrow\",\n    value: function shouldParseArrow(params) {\n      return !this.canInsertSemicolon();\n    }\n  }, {\n    key: \"parseArrow\",\n    value: function parseArrow(node) {\n      if (this.eat(19)) {\n        return node;\n      }\n    }\n  }, {\n    key: \"parseParenItem\",\n    value: function parseParenItem(node, startPos, startLoc) {\n      return node;\n    }\n  }, {\n    key: \"parseNewOrNewTarget\",\n    value: function parseNewOrNewTarget() {\n      var node = this.startNode();\n      this.next();\n\n      if (this.match(16)) {\n        var meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n        this.next();\n        var metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n        if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n          this.raise(metaProp.start, ErrorMessages.UnexpectedNewTarget);\n        }\n\n        return metaProp;\n      }\n\n      return this.parseNew(node);\n    }\n  }, {\n    key: \"parseNew\",\n    value: function parseNew(node) {\n      node.callee = this.parseNoCallExpr();\n\n      if (node.callee.type === \"Import\") {\n        this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\n      } else if (this.isOptionalChain(node.callee)) {\n        this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\n      } else if (this.eat(18)) {\n        this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\n      }\n\n      this.parseNewArguments(node);\n      return this.finishNode(node, \"NewExpression\");\n    }\n  }, {\n    key: \"parseNewArguments\",\n    value: function parseNewArguments(node) {\n      if (this.eat(10)) {\n        var args = this.parseExprList(11);\n        this.toReferencedList(args);\n        node.arguments = args;\n      } else {\n        node.arguments = [];\n      }\n    }\n  }, {\n    key: \"parseTemplateElement\",\n    value: function parseTemplateElement(isTagged) {\n      var _this$state4 = this.state,\n          start = _this$state4.start,\n          end = _this$state4.end,\n          value = _this$state4.value;\n      var elemStart = start + 1;\n      var elem = this.startNodeAt(elemStart, createPositionWithColumnOffset(this.state.startLoc, 1));\n\n      if (value === null) {\n        if (!isTagged) {\n          this.raise(start + 2, ErrorMessages.InvalidEscapeSequenceTemplate);\n        }\n      }\n\n      var isTail = this.match(24);\n      var endOffset = isTail ? -1 : -2;\n      var elemEnd = end + endOffset;\n      elem.value = {\n        raw: this.input.slice(elemStart, elemEnd).replace(/\\r\\n?/g, \"\\n\"),\n        cooked: value === null ? null : value.slice(1, endOffset)\n      };\n      elem.tail = isTail;\n      this.next();\n      this.finishNode(elem, \"TemplateElement\");\n      this.resetEndLocation(elem, elemEnd, createPositionWithColumnOffset(this.state.lastTokEndLoc, endOffset));\n      return elem;\n    }\n  }, {\n    key: \"parseTemplate\",\n    value: function parseTemplate(isTagged) {\n      var node = this.startNode();\n      node.expressions = [];\n      var curElt = this.parseTemplateElement(isTagged);\n      node.quasis = [curElt];\n\n      while (!curElt.tail) {\n        node.expressions.push(this.parseTemplateSubstitution());\n        this.readTemplateContinuation();\n        node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n      }\n\n      return this.finishNode(node, \"TemplateLiteral\");\n    }\n  }, {\n    key: \"parseTemplateSubstitution\",\n    value: function parseTemplateSubstitution() {\n      return this.parseExpression();\n    }\n  }, {\n    key: \"parseObjectLike\",\n    value: function parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n      if (isRecord) {\n        this.expectPlugin(\"recordAndTuple\");\n      }\n\n      var oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n      this.state.inFSharpPipelineDirectBody = false;\n      var propHash = Object.create(null);\n      var first = true;\n      var node = this.startNode();\n      node.properties = [];\n      this.next();\n\n      while (!this.match(close)) {\n        if (first) {\n          first = false;\n        } else {\n          this.expect(12);\n\n          if (this.match(close)) {\n            this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n            break;\n          }\n        }\n\n        var prop = void 0;\n\n        if (isPattern) {\n          prop = this.parseBindingProperty();\n        } else {\n          prop = this.parsePropertyDefinition(refExpressionErrors);\n          this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n        }\n\n        if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n          this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\n        }\n\n        if (prop.shorthand) {\n          this.addExtra(prop, \"shorthand\", true);\n        }\n\n        node.properties.push(prop);\n      }\n\n      this.next();\n      this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n      var type = \"ObjectExpression\";\n\n      if (isPattern) {\n        type = \"ObjectPattern\";\n      } else if (isRecord) {\n        type = \"RecordExpression\";\n      }\n\n      return this.finishNode(node, type);\n    }\n  }, {\n    key: \"maybeAsyncOrAccessorProp\",\n    value: function maybeAsyncOrAccessorProp(prop) {\n      return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(0) || this.match(51));\n    }\n  }, {\n    key: \"parsePropertyDefinition\",\n    value: function parsePropertyDefinition(refExpressionErrors) {\n      var decorators = [];\n\n      if (this.match(26)) {\n        if (this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\n        }\n\n        while (this.match(26)) {\n          decorators.push(this.parseDecorator());\n        }\n      }\n\n      var prop = this.startNode();\n      var isAsync = false;\n      var isAccessor = false;\n      var startPos;\n      var startLoc;\n\n      if (this.match(21)) {\n        if (decorators.length) this.unexpected();\n        return this.parseSpread();\n      }\n\n      if (decorators.length) {\n        prop.decorators = decorators;\n        decorators = [];\n      }\n\n      prop.method = false;\n\n      if (refExpressionErrors) {\n        startPos = this.state.start;\n        startLoc = this.state.startLoc;\n      }\n\n      var isGenerator = this.eat(51);\n      this.parsePropertyNamePrefixOperator(prop);\n      var containsEsc = this.state.containsEsc;\n      var key = this.parsePropertyName(prop);\n\n      if (!isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n        var keyName = key.name;\n\n        if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n          isAsync = true;\n          this.resetPreviousNodeTrailingComments(key);\n          isGenerator = this.eat(51);\n          this.parsePropertyName(prop);\n        }\n\n        if (keyName === \"get\" || keyName === \"set\") {\n          isAccessor = true;\n          this.resetPreviousNodeTrailingComments(key);\n          prop.kind = keyName;\n\n          if (this.match(51)) {\n            isGenerator = true;\n            this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\n            this.next();\n          }\n\n          this.parsePropertyName(prop);\n        }\n      }\n\n      this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, false, isAccessor, refExpressionErrors);\n      return prop;\n    }\n  }, {\n    key: \"getGetterSetterExpectedParamCount\",\n    value: function getGetterSetterExpectedParamCount(method) {\n      return method.kind === \"get\" ? 0 : 1;\n    }\n  }, {\n    key: \"getObjectOrClassMethodParams\",\n    value: function getObjectOrClassMethodParams(method) {\n      return method.params;\n    }\n  }, {\n    key: \"checkGetterSetterParams\",\n    value: function checkGetterSetterParams(method) {\n      var _params;\n\n      var paramCount = this.getGetterSetterExpectedParamCount(method);\n      var params = this.getObjectOrClassMethodParams(method);\n      var start = method.start;\n\n      if (params.length !== paramCount) {\n        if (method.kind === \"get\") {\n          this.raise(start, ErrorMessages.BadGetterArity);\n        } else {\n          this.raise(start, ErrorMessages.BadSetterArity);\n        }\n      }\n\n      if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n        this.raise(start, ErrorMessages.BadSetterRestParameter);\n      }\n    }\n  }, {\n    key: \"parseObjectMethod\",\n    value: function parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n      if (isAccessor) {\n        this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n        this.checkGetterSetterParams(prop);\n        return prop;\n      }\n\n      if (isAsync || isGenerator || this.match(10)) {\n        if (isPattern) this.unexpected();\n        prop.kind = \"method\";\n        prop.method = true;\n        return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n      }\n    }\n  }, {\n    key: \"parseObjectProperty\",\n    value: function parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n      prop.shorthand = false;\n\n      if (this.eat(14)) {\n        prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n        return this.finishNode(prop, \"ObjectProperty\");\n      }\n\n      if (!prop.computed && prop.key.type === \"Identifier\") {\n        this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n        if (isPattern) {\n          prop.value = this.parseMaybeDefault(startPos, startLoc, cloneIdentifier(prop.key));\n        } else if (this.match(29)) {\n          var shorthandAssign = this.state.start;\n\n          if (refExpressionErrors != null) {\n            if (refExpressionErrors.shorthandAssign === -1) {\n              refExpressionErrors.shorthandAssign = shorthandAssign;\n            }\n          } else {\n            this.raise(shorthandAssign, ErrorMessages.InvalidCoverInitializedName);\n          }\n\n          prop.value = this.parseMaybeDefault(startPos, startLoc, cloneIdentifier(prop.key));\n        } else {\n          prop.value = cloneIdentifier(prop.key);\n        }\n\n        prop.shorthand = true;\n        return this.finishNode(prop, \"ObjectProperty\");\n      }\n    }\n  }, {\n    key: \"parseObjPropValue\",\n    value: function parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n      var node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n      if (!node) this.unexpected();\n      return node;\n    }\n  }, {\n    key: \"parsePropertyName\",\n    value: function parsePropertyName(prop) {\n      if (this.eat(0)) {\n        prop.computed = true;\n        prop.key = this.parseMaybeAssignAllowIn();\n        this.expect(3);\n      } else {\n        var _this$state5 = this.state,\n            type = _this$state5.type,\n            value = _this$state5.value;\n        var key;\n\n        if (tokenIsKeywordOrIdentifier(type)) {\n          key = this.parseIdentifier(true);\n        } else {\n          switch (type) {\n            case 126:\n              key = this.parseNumericLiteral(value);\n              break;\n\n            case 125:\n              key = this.parseStringLiteral(value);\n              break;\n\n            case 127:\n              key = this.parseBigIntLiteral(value);\n              break;\n\n            case 128:\n              key = this.parseDecimalLiteral(value);\n              break;\n\n            case 130:\n              {\n                var privateKeyPos = this.state.start + 1;\n                this.raise(privateKeyPos, ErrorMessages.UnexpectedPrivateField);\n                key = this.parsePrivateName();\n                break;\n              }\n\n            default:\n              throw this.unexpected();\n          }\n        }\n\n        prop.key = key;\n\n        if (type !== 130) {\n          prop.computed = false;\n        }\n      }\n\n      return prop.key;\n    }\n  }, {\n    key: \"initFunction\",\n    value: function initFunction(node, isAsync) {\n      node.id = null;\n      node.generator = false;\n      node.async = !!isAsync;\n    }\n  }, {\n    key: \"parseMethod\",\n    value: function parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type) {\n      var inClassScope = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n      this.initFunction(node, isAsync);\n      node.generator = !!isGenerator;\n      var allowModifiers = isConstructor;\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n      this.prodParam.enter(functionFlags(isAsync, node.generator));\n      this.parseFunctionParams(node, allowModifiers);\n      this.parseFunctionBodyAndFinish(node, type, true);\n      this.prodParam.exit();\n      this.scope.exit();\n      return node;\n    }\n  }, {\n    key: \"parseArrayLike\",\n    value: function parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n      if (isTuple) {\n        this.expectPlugin(\"recordAndTuple\");\n      }\n\n      var oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n      this.state.inFSharpPipelineDirectBody = false;\n      var node = this.startNode();\n      this.next();\n      node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n      this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n      return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n    }\n  }, {\n    key: \"parseArrowExpression\",\n    value: function parseArrowExpression(node, params, isAsync, trailingCommaPos) {\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      var flags = functionFlags(isAsync, false);\n\n      if (!this.match(0) && this.prodParam.hasIn) {\n        flags |= PARAM_IN;\n      }\n\n      this.prodParam.enter(flags);\n      this.initFunction(node, isAsync);\n      var oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n      if (params) {\n        this.state.maybeInArrowParameters = true;\n        this.setArrowFunctionParameters(node, params, trailingCommaPos);\n      }\n\n      this.state.maybeInArrowParameters = false;\n      this.parseFunctionBody(node, true);\n      this.prodParam.exit();\n      this.scope.exit();\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n      return this.finishNode(node, \"ArrowFunctionExpression\");\n    }\n  }, {\n    key: \"setArrowFunctionParameters\",\n    value: function setArrowFunctionParameters(node, params, trailingCommaPos) {\n      node.params = this.toAssignableList(params, trailingCommaPos, false);\n    }\n  }, {\n    key: \"parseFunctionBodyAndFinish\",\n    value: function parseFunctionBodyAndFinish(node, type) {\n      var isMethod = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      this.parseFunctionBody(node, false, isMethod);\n      this.finishNode(node, type);\n    }\n  }, {\n    key: \"parseFunctionBody\",\n    value: function parseFunctionBody(node, allowExpression) {\n      var _this50 = this;\n\n      var isMethod = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var isExpression = allowExpression && !this.match(5);\n      this.expressionScope.enter(newExpressionScope());\n\n      if (isExpression) {\n        node.body = this.parseMaybeAssign();\n        this.checkParams(node, false, allowExpression, false);\n      } else {\n        var oldStrict = this.state.strict;\n        var oldLabels = this.state.labels;\n        this.state.labels = [];\n        this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n        node.body = this.parseBlock(true, false, function (hasStrictModeDirective) {\n          var nonSimple = !_this50.isSimpleParamList(node.params);\n\n          if (hasStrictModeDirective && nonSimple) {\n            var errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\n\n            _this50.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\n          }\n\n          var strictModeChanged = !oldStrict && _this50.state.strict;\n\n          _this50.checkParams(node, !_this50.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n          if (_this50.state.strict && node.id) {\n            _this50.checkLVal(node.id, \"function name\", BIND_OUTSIDE, undefined, undefined, strictModeChanged);\n          }\n        });\n        this.prodParam.exit();\n        this.state.labels = oldLabels;\n      }\n\n      this.expressionScope.exit();\n    }\n  }, {\n    key: \"isSimpleParamList\",\n    value: function isSimpleParamList(params) {\n      for (var i = 0, len = params.length; i < len; i++) {\n        if (params[i].type !== \"Identifier\") return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"checkParams\",\n    value: function checkParams(node, allowDuplicates, isArrowFunction) {\n      var strictModeChanged = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n      var checkClashes = new Set();\n\n      var _iterator11 = _createForOfIteratorHelper(node.params),\n          _step11;\n\n      try {\n        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n          var param = _step11.value;\n          this.checkLVal(param, \"function parameter list\", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);\n        }\n      } catch (err) {\n        _iterator11.e(err);\n      } finally {\n        _iterator11.f();\n      }\n    }\n  }, {\n    key: \"parseExprList\",\n    value: function parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n      var elts = [];\n      var first = true;\n\n      while (!this.eat(close)) {\n        if (first) {\n          first = false;\n        } else {\n          this.expect(12);\n\n          if (this.match(close)) {\n            if (nodeForExtra) {\n              this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n            }\n\n            this.next();\n            break;\n          }\n        }\n\n        elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n      }\n\n      return elts;\n    }\n  }, {\n    key: \"parseExprListItem\",\n    value: function parseExprListItem(allowEmpty, refExpressionErrors, allowPlaceholder) {\n      var elt;\n\n      if (this.match(12)) {\n        if (!allowEmpty) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\n        }\n\n        elt = null;\n      } else if (this.match(21)) {\n        var spreadNodeStartPos = this.state.start;\n        var spreadNodeStartLoc = this.state.startLoc;\n        elt = this.parseParenItem(this.parseSpread(refExpressionErrors), spreadNodeStartPos, spreadNodeStartLoc);\n      } else if (this.match(17)) {\n        this.expectPlugin(\"partialApplication\");\n\n        if (!allowPlaceholder) {\n          this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\n        }\n\n        var node = this.startNode();\n        this.next();\n        elt = this.finishNode(node, \"ArgumentPlaceholder\");\n      } else {\n        elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem);\n      }\n\n      return elt;\n    }\n  }, {\n    key: \"parseIdentifier\",\n    value: function parseIdentifier(liberal) {\n      var node = this.startNode();\n      var name = this.parseIdentifierName(node.start, liberal);\n      return this.createIdentifier(node, name);\n    }\n  }, {\n    key: \"createIdentifier\",\n    value: function createIdentifier(node, name) {\n      node.name = name;\n      node.loc.identifierName = name;\n      return this.finishNode(node, \"Identifier\");\n    }\n  }, {\n    key: \"parseIdentifierName\",\n    value: function parseIdentifierName(pos, liberal) {\n      var name;\n      var _this$state6 = this.state,\n          start = _this$state6.start,\n          type = _this$state6.type;\n\n      if (tokenIsKeywordOrIdentifier(type)) {\n        name = this.state.value;\n      } else {\n        throw this.unexpected();\n      }\n\n      var tokenIsKeyword = tokenKeywordOrIdentifierIsKeyword(type);\n\n      if (liberal) {\n        if (tokenIsKeyword) {\n          this.replaceToken(124);\n        }\n      } else {\n        this.checkReservedWord(name, start, tokenIsKeyword, false);\n      }\n\n      this.next();\n      return name;\n    }\n  }, {\n    key: \"checkReservedWord\",\n    value: function checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n      if (word.length > 10) {\n        return;\n      }\n\n      if (!canBeReservedWord(word)) {\n        return;\n      }\n\n      if (word === \"yield\") {\n        if (this.prodParam.hasYield) {\n          this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n          return;\n        }\n      } else if (word === \"await\") {\n        if (this.prodParam.hasAwait) {\n          this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n          return;\n        } else if (this.scope.inStaticBlock) {\n          this.raise(startLoc, ErrorMessages.AwaitBindingIdentifierInStaticBlock);\n          return;\n        } else {\n          this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        }\n      } else if (word === \"arguments\") {\n        if (this.scope.inClassAndNotInNonArrowFunction) {\n          this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n          return;\n        }\n      }\n\n      if (checkKeywords && isKeyword(word)) {\n        this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n        return;\n      }\n\n      var reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n      if (reservedTest(word, this.inModule)) {\n        this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n      }\n    }\n  }, {\n    key: \"isAwaitAllowed\",\n    value: function isAwaitAllowed() {\n      if (this.prodParam.hasAwait) return true;\n\n      if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"parseAwait\",\n    value: function parseAwait(startPos, startLoc) {\n      var node = this.startNodeAt(startPos, startLoc);\n      this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);\n\n      if (this.eat(51)) {\n        this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\n      }\n\n      if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n        if (this.isAmbiguousAwait()) {\n          this.ambiguousScriptDifferentAst = true;\n        } else {\n          this.sawUnambiguousESM = true;\n        }\n      }\n\n      if (!this.state.soloAwait) {\n        node.argument = this.parseMaybeUnary(null, true);\n      }\n\n      return this.finishNode(node, \"AwaitExpression\");\n    }\n  }, {\n    key: \"isAmbiguousAwait\",\n    value: function isAmbiguousAwait() {\n      if (this.hasPrecedingLineBreak()) return true;\n      var type = this.state.type;\n      return type === 49 || type === 10 || type === 0 || tokenIsTemplate(type) || type === 129 || type === 52 || this.hasPlugin(\"v8intrinsic\") && type === 50;\n    }\n  }, {\n    key: \"parseYield\",\n    value: function parseYield() {\n      var node = this.startNode();\n      this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);\n      this.next();\n      var delegating = false;\n      var argument = null;\n\n      if (!this.hasPrecedingLineBreak()) {\n        delegating = this.eat(51);\n\n        switch (this.state.type) {\n          case 13:\n          case 131:\n          case 8:\n          case 11:\n          case 3:\n          case 9:\n          case 14:\n          case 12:\n            if (!delegating) break;\n\n          default:\n            argument = this.parseMaybeAssign();\n        }\n      }\n\n      node.delegate = delegating;\n      node.argument = argument;\n      return this.finishNode(node, \"YieldExpression\");\n    }\n  }, {\n    key: \"checkPipelineAtInfixOperator\",\n    value: function checkPipelineAtInfixOperator(left, leftStartPos) {\n      if (this.hasPlugin([\"pipelineOperator\", {\n        proposal: \"smart\"\n      }])) {\n        if (left.type === \"SequenceExpression\") {\n          this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\n        }\n      }\n    }\n  }, {\n    key: \"checkHackPipeBodyEarlyErrors\",\n    value: function checkHackPipeBodyEarlyErrors(startPos) {\n      if (!this.topicReferenceWasUsedInCurrentContext()) {\n        this.raise(startPos, ErrorMessages.PipeTopicUnused);\n      }\n    }\n  }, {\n    key: \"parseSmartPipelineBodyInStyle\",\n    value: function parseSmartPipelineBodyInStyle(childExpr, startPos, startLoc) {\n      var bodyNode = this.startNodeAt(startPos, startLoc);\n\n      if (this.isSimpleReference(childExpr)) {\n        bodyNode.callee = childExpr;\n        return this.finishNode(bodyNode, \"PipelineBareFunction\");\n      } else {\n        this.checkSmartPipeTopicBodyEarlyErrors(startPos);\n        bodyNode.expression = childExpr;\n        return this.finishNode(bodyNode, \"PipelineTopicExpression\");\n      }\n    }\n  }, {\n    key: \"isSimpleReference\",\n    value: function isSimpleReference(expression) {\n      switch (expression.type) {\n        case \"MemberExpression\":\n          return !expression.computed && this.isSimpleReference(expression.object);\n\n        case \"Identifier\":\n          return true;\n\n        default:\n          return false;\n      }\n    }\n  }, {\n    key: \"checkSmartPipeTopicBodyEarlyErrors\",\n    value: function checkSmartPipeTopicBodyEarlyErrors(startPos) {\n      if (this.match(19)) {\n        throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\n      } else if (!this.topicReferenceWasUsedInCurrentContext()) {\n        this.raise(startPos, ErrorMessages.PipelineTopicUnused);\n      }\n    }\n  }, {\n    key: \"withTopicBindingContext\",\n    value: function withTopicBindingContext(callback) {\n      var outerContextTopicState = this.state.topicContext;\n      this.state.topicContext = {\n        maxNumOfResolvableTopics: 1,\n        maxTopicIndex: null\n      };\n\n      try {\n        return callback();\n      } finally {\n        this.state.topicContext = outerContextTopicState;\n      }\n    }\n  }, {\n    key: \"withSmartMixTopicForbiddingContext\",\n    value: function withSmartMixTopicForbiddingContext(callback) {\n      if (this.hasPlugin([\"pipelineOperator\", {\n        proposal: \"smart\"\n      }])) {\n        var outerContextTopicState = this.state.topicContext;\n        this.state.topicContext = {\n          maxNumOfResolvableTopics: 0,\n          maxTopicIndex: null\n        };\n\n        try {\n          return callback();\n        } finally {\n          this.state.topicContext = outerContextTopicState;\n        }\n      } else {\n        return callback();\n      }\n    }\n  }, {\n    key: \"withSoloAwaitPermittingContext\",\n    value: function withSoloAwaitPermittingContext(callback) {\n      var outerContextSoloAwaitState = this.state.soloAwait;\n      this.state.soloAwait = true;\n\n      try {\n        return callback();\n      } finally {\n        this.state.soloAwait = outerContextSoloAwaitState;\n      }\n    }\n  }, {\n    key: \"allowInAnd\",\n    value: function allowInAnd(callback) {\n      var flags = this.prodParam.currentFlags();\n      var prodParamToSet = PARAM_IN & ~flags;\n\n      if (prodParamToSet) {\n        this.prodParam.enter(flags | PARAM_IN);\n\n        try {\n          return callback();\n        } finally {\n          this.prodParam.exit();\n        }\n      }\n\n      return callback();\n    }\n  }, {\n    key: \"disallowInAnd\",\n    value: function disallowInAnd(callback) {\n      var flags = this.prodParam.currentFlags();\n      var prodParamToClear = PARAM_IN & flags;\n\n      if (prodParamToClear) {\n        this.prodParam.enter(flags & ~PARAM_IN);\n\n        try {\n          return callback();\n        } finally {\n          this.prodParam.exit();\n        }\n      }\n\n      return callback();\n    }\n  }, {\n    key: \"registerTopicReference\",\n    value: function registerTopicReference() {\n      this.state.topicContext.maxTopicIndex = 0;\n    }\n  }, {\n    key: \"topicReferenceIsAllowedInCurrentContext\",\n    value: function topicReferenceIsAllowedInCurrentContext() {\n      return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n    }\n  }, {\n    key: \"topicReferenceWasUsedInCurrentContext\",\n    value: function topicReferenceWasUsedInCurrentContext() {\n      return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n    }\n  }, {\n    key: \"parseFSharpPipelineBody\",\n    value: function parseFSharpPipelineBody(prec) {\n      var startPos = this.state.start;\n      var startLoc = this.state.startLoc;\n      this.state.potentialArrowAt = this.state.start;\n      var oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n      this.state.inFSharpPipelineDirectBody = true;\n      var ret = this.parseExprOp(this.parseMaybeUnaryOrPrivate(), startPos, startLoc, prec);\n      this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n      return ret;\n    }\n  }, {\n    key: \"parseModuleExpression\",\n    value: function parseModuleExpression() {\n      this.expectPlugin(\"moduleBlocks\");\n      var node = this.startNode();\n      this.next();\n      this.eat(5);\n      var revertScopes = this.initializeScopes(true);\n      this.enterInitialScopes();\n      var program = this.startNode();\n\n      try {\n        node.body = this.parseProgram(program, 8, \"module\");\n      } finally {\n        revertScopes();\n      }\n\n      this.eat(8);\n      return this.finishNode(node, \"ModuleExpression\");\n    }\n  }, {\n    key: \"parsePropertyNamePrefixOperator\",\n    value: function parsePropertyNamePrefixOperator(prop) {}\n  }]);\n\n  return ExpressionParser;\n}(LValParser);\n\nvar loopLabel = {\n  kind: \"loop\"\n},\n    switchLabel = {\n  kind: \"switch\"\n};\nvar FUNC_NO_FLAGS = 0,\n    FUNC_STATEMENT = 1,\n    FUNC_HANGING_STATEMENT = 2,\n    FUNC_NULLABLE_ID = 4;\nvar loneSurrogate = /(?:[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/;\nvar keywordRelationalOperator = new RegExp(\"in(?:stanceof)?\", \"y\");\n\nfunction babel7CompatTokens(tokens, input) {\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n    var type = token.type;\n\n    if (typeof type === \"number\") {\n      {\n        if (type === 130) {\n          var loc = token.loc,\n              start = token.start,\n              value = token.value,\n              end = token.end;\n          var hashEndPos = start + 1;\n          var hashEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          tokens.splice(i, 1, new Token({\n            type: getExportedToken(27),\n            value: \"#\",\n            start: start,\n            end: hashEndPos,\n            startLoc: loc.start,\n            endLoc: hashEndLoc\n          }), new Token({\n            type: getExportedToken(124),\n            value: value,\n            start: hashEndPos,\n            end: end,\n            startLoc: hashEndLoc,\n            endLoc: loc.end\n          }));\n          i++;\n          continue;\n        }\n\n        if (tokenIsTemplate(type)) {\n          var _loc = token.loc,\n              _start = token.start,\n              _value = token.value,\n              _end = token.end;\n          var backquoteEnd = _start + 1;\n          var backquoteEndLoc = createPositionWithColumnOffset(_loc.start, 1);\n          var startToken = void 0;\n\n          if (input.charCodeAt(_start) === 96) {\n            startToken = new Token({\n              type: getExportedToken(22),\n              value: \"`\",\n              start: _start,\n              end: backquoteEnd,\n              startLoc: _loc.start,\n              endLoc: backquoteEndLoc\n            });\n          } else {\n            startToken = new Token({\n              type: getExportedToken(8),\n              value: \"}\",\n              start: _start,\n              end: backquoteEnd,\n              startLoc: _loc.start,\n              endLoc: backquoteEndLoc\n            });\n          }\n\n          var templateValue = void 0,\n              templateElementEnd = void 0,\n              templateElementEndLoc = void 0,\n              endToken = void 0;\n\n          if (type === 24) {\n            templateElementEnd = _end - 1;\n            templateElementEndLoc = createPositionWithColumnOffset(_loc.end, -1);\n            templateValue = _value === null ? null : _value.slice(1, -1);\n            endToken = new Token({\n              type: getExportedToken(22),\n              value: \"`\",\n              start: templateElementEnd,\n              end: _end,\n              startLoc: templateElementEndLoc,\n              endLoc: _loc.end\n            });\n          } else {\n            templateElementEnd = _end - 2;\n            templateElementEndLoc = createPositionWithColumnOffset(_loc.end, -2);\n            templateValue = _value === null ? null : _value.slice(1, -2);\n            endToken = new Token({\n              type: getExportedToken(23),\n              value: \"${\",\n              start: templateElementEnd,\n              end: _end,\n              startLoc: templateElementEndLoc,\n              endLoc: _loc.end\n            });\n          }\n\n          tokens.splice(i, 1, startToken, new Token({\n            type: getExportedToken(20),\n            value: templateValue,\n            start: backquoteEnd,\n            end: templateElementEnd,\n            startLoc: backquoteEndLoc,\n            endLoc: templateElementEndLoc\n          }), endToken);\n          i += 2;\n          continue;\n        }\n      }\n      token.type = getExportedToken(type);\n    }\n  }\n\n  return tokens;\n}\n\nvar StatementParser = /*#__PURE__*/function (_ExpressionParser) {\n  _inherits(StatementParser, _ExpressionParser);\n\n  var _super19 = _createSuper(StatementParser);\n\n  function StatementParser() {\n    _classCallCheck(this, StatementParser);\n\n    return _super19.apply(this, arguments);\n  }\n\n  _createClass(StatementParser, [{\n    key: \"parseTopLevel\",\n    value: function parseTopLevel(file, program) {\n      file.program = this.parseProgram(program);\n      file.comments = this.state.comments;\n\n      if (this.options.tokens) {\n        file.tokens = babel7CompatTokens(this.tokens, this.input);\n      }\n\n      return this.finishNode(file, \"File\");\n    }\n  }, {\n    key: \"parseProgram\",\n    value: function parseProgram(program) {\n      var end = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 131;\n      var sourceType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.options.sourceType;\n      program.sourceType = sourceType;\n      program.interpreter = this.parseInterpreterDirective();\n      this.parseBlockBody(program, true, true, end);\n\n      if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n        for (var _i4 = 0, _Array$from2 = Array.from(this.scope.undefinedExports); _i4 < _Array$from2.length; _i4++) {\n          var _Array$from2$_i = _slicedToArray(_Array$from2[_i4], 1),\n              name = _Array$from2$_i[0];\n\n          var pos = this.scope.undefinedExports.get(name);\n          this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n        }\n      }\n\n      return this.finishNode(program, \"Program\");\n    }\n  }, {\n    key: \"stmtToDirective\",\n    value: function stmtToDirective(stmt) {\n      var directive = stmt;\n      directive.type = \"Directive\";\n      directive.value = directive.expression;\n      delete directive.expression;\n      var directiveLiteral = directive.value;\n      var expressionValue = directiveLiteral.value;\n      var raw = this.input.slice(directiveLiteral.start, directiveLiteral.end);\n      var val = directiveLiteral.value = raw.slice(1, -1);\n      this.addExtra(directiveLiteral, \"raw\", raw);\n      this.addExtra(directiveLiteral, \"rawValue\", val);\n      this.addExtra(directiveLiteral, \"expressionValue\", expressionValue);\n      directiveLiteral.type = \"DirectiveLiteral\";\n      return directive;\n    }\n  }, {\n    key: \"parseInterpreterDirective\",\n    value: function parseInterpreterDirective() {\n      if (!this.match(28)) {\n        return null;\n      }\n\n      var node = this.startNode();\n      node.value = this.state.value;\n      this.next();\n      return this.finishNode(node, \"InterpreterDirective\");\n    }\n  }, {\n    key: \"isLet\",\n    value: function isLet(context) {\n      if (!this.isContextual(95)) {\n        return false;\n      }\n\n      return this.isLetKeyword(context);\n    }\n  }, {\n    key: \"isLetKeyword\",\n    value: function isLetKeyword(context) {\n      var next = this.nextTokenStart();\n      var nextCh = this.codePointAtPos(next);\n\n      if (nextCh === 92 || nextCh === 91) {\n        return true;\n      }\n\n      if (context) return false;\n      if (nextCh === 123) return true;\n\n      if (isIdentifierStart(nextCh)) {\n        keywordRelationalOperator.lastIndex = next;\n\n        if (keywordRelationalOperator.test(this.input)) {\n          var endCh = this.codePointAtPos(keywordRelationalOperator.lastIndex);\n\n          if (!isIdentifierChar(endCh) && endCh !== 92) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"parseStatement\",\n    value: function parseStatement(context, topLevel) {\n      if (this.match(26)) {\n        this.parseDecorators(true);\n      }\n\n      return this.parseStatementContent(context, topLevel);\n    }\n  }, {\n    key: \"parseStatementContent\",\n    value: function parseStatementContent(context, topLevel) {\n      var starttype = this.state.type;\n      var node = this.startNode();\n      var kind;\n\n      if (this.isLet(context)) {\n        starttype = 70;\n        kind = \"let\";\n      }\n\n      switch (starttype) {\n        case 56:\n          return this.parseBreakContinueStatement(node, true);\n\n        case 59:\n          return this.parseBreakContinueStatement(node, false);\n\n        case 60:\n          return this.parseDebuggerStatement(node);\n\n        case 86:\n          return this.parseDoStatement(node);\n\n        case 87:\n          return this.parseForStatement(node);\n\n        case 64:\n          if (this.lookaheadCharCode() === 46) break;\n\n          if (context) {\n            if (this.state.strict) {\n              this.raise(this.state.start, ErrorMessages.StrictFunction);\n            } else if (context !== \"if\" && context !== \"label\") {\n              this.raise(this.state.start, ErrorMessages.SloppyFunction);\n            }\n          }\n\n          return this.parseFunctionStatement(node, false, !context);\n\n        case 76:\n          if (context) this.unexpected();\n          return this.parseClass(node, true);\n\n        case 65:\n          return this.parseIfStatement(node);\n\n        case 66:\n          return this.parseReturnStatement(node);\n\n        case 67:\n          return this.parseSwitchStatement(node);\n\n        case 68:\n          return this.parseThrowStatement(node);\n\n        case 69:\n          return this.parseTryStatement(node);\n\n        case 71:\n        case 70:\n          kind = kind || this.state.value;\n\n          if (context && kind !== \"var\") {\n            this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n          }\n\n          return this.parseVarStatement(node, kind);\n\n        case 88:\n          return this.parseWhileStatement(node);\n\n        case 72:\n          return this.parseWithStatement(node);\n\n        case 5:\n          return this.parseBlock();\n\n        case 13:\n          return this.parseEmptyStatement(node);\n\n        case 79:\n          {\n            var nextTokenCharCode = this.lookaheadCharCode();\n\n            if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n              break;\n            }\n          }\n\n        case 78:\n          {\n            if (!this.options.allowImportExportEverywhere && !topLevel) {\n              this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n            }\n\n            this.next();\n            var result;\n\n            if (starttype === 79) {\n              result = this.parseImport(node);\n\n              if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n                this.sawUnambiguousESM = true;\n              }\n            } else {\n              result = this.parseExport(node);\n\n              if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n                this.sawUnambiguousESM = true;\n              }\n            }\n\n            this.assertModuleNodeAllowed(node);\n            return result;\n          }\n\n        default:\n          {\n            if (this.isAsyncFunction()) {\n              if (context) {\n                this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n              }\n\n              this.next();\n              return this.parseFunctionStatement(node, true, !context);\n            }\n          }\n      }\n\n      var maybeName = this.state.value;\n      var expr = this.parseExpression();\n\n      if (tokenIsIdentifier(starttype) && expr.type === \"Identifier\" && this.eat(14)) {\n        return this.parseLabeledStatement(node, maybeName, expr, context);\n      } else {\n        return this.parseExpressionStatement(node, expr);\n      }\n    }\n  }, {\n    key: \"assertModuleNodeAllowed\",\n    value: function assertModuleNodeAllowed(node) {\n      if (!this.options.allowImportExportEverywhere && !this.inModule) {\n        this.raise(node.start, SourceTypeModuleErrorMessages.ImportOutsideModule);\n      }\n    }\n  }, {\n    key: \"takeDecorators\",\n    value: function takeDecorators(node) {\n      var decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n      if (decorators.length) {\n        node.decorators = decorators;\n        this.resetStartLocationFromNode(node, decorators[0]);\n        this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n      }\n    }\n  }, {\n    key: \"canHaveLeadingDecorator\",\n    value: function canHaveLeadingDecorator() {\n      return this.match(76);\n    }\n  }, {\n    key: \"parseDecorators\",\n    value: function parseDecorators(allowExport) {\n      var currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n      while (this.match(26)) {\n        var decorator = this.parseDecorator();\n        currentContextDecorators.push(decorator);\n      }\n\n      if (this.match(78)) {\n        if (!allowExport) {\n          this.unexpected();\n        }\n\n        if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\n        }\n      } else if (!this.canHaveLeadingDecorator()) {\n        throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\n      }\n    }\n  }, {\n    key: \"parseDecorator\",\n    value: function parseDecorator() {\n      this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n      var node = this.startNode();\n      this.next();\n\n      if (this.hasPlugin(\"decorators\")) {\n        this.state.decoratorStack.push([]);\n        var startPos = this.state.start;\n        var startLoc = this.state.startLoc;\n        var expr;\n\n        if (this.eat(10)) {\n          expr = this.parseExpression();\n          this.expect(11);\n        } else {\n          expr = this.parseIdentifier(false);\n\n          while (this.eat(16)) {\n            var _node10 = this.startNodeAt(startPos, startLoc);\n\n            _node10.object = expr;\n            _node10.property = this.parseIdentifier(true);\n            _node10.computed = false;\n            expr = this.finishNode(_node10, \"MemberExpression\");\n          }\n        }\n\n        node.expression = this.parseMaybeDecoratorArguments(expr);\n        this.state.decoratorStack.pop();\n      } else {\n        node.expression = this.parseExprSubscripts();\n      }\n\n      return this.finishNode(node, \"Decorator\");\n    }\n  }, {\n    key: \"parseMaybeDecoratorArguments\",\n    value: function parseMaybeDecoratorArguments(expr) {\n      if (this.eat(10)) {\n        var node = this.startNodeAtNode(expr);\n        node.callee = expr;\n        node.arguments = this.parseCallExpressionArguments(11, false);\n        this.toReferencedList(node.arguments);\n        return this.finishNode(node, \"CallExpression\");\n      }\n\n      return expr;\n    }\n  }, {\n    key: \"parseBreakContinueStatement\",\n    value: function parseBreakContinueStatement(node, isBreak) {\n      this.next();\n\n      if (this.isLineTerminator()) {\n        node.label = null;\n      } else {\n        node.label = this.parseIdentifier();\n        this.semicolon();\n      }\n\n      this.verifyBreakContinue(node, isBreak);\n      return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n    }\n  }, {\n    key: \"verifyBreakContinue\",\n    value: function verifyBreakContinue(node, isBreak) {\n      var i;\n\n      for (i = 0; i < this.state.labels.length; ++i) {\n        var lab = this.state.labels[i];\n\n        if (node.label == null || lab.name === node.label.name) {\n          if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n          if (node.label && isBreak) break;\n        }\n      }\n\n      if (i === this.state.labels.length) {\n        this.raise(node.start, ErrorMessages.IllegalBreakContinue, isBreak ? \"break\" : \"continue\");\n      }\n    }\n  }, {\n    key: \"parseDebuggerStatement\",\n    value: function parseDebuggerStatement(node) {\n      this.next();\n      this.semicolon();\n      return this.finishNode(node, \"DebuggerStatement\");\n    }\n  }, {\n    key: \"parseHeaderExpression\",\n    value: function parseHeaderExpression() {\n      this.expect(10);\n      var val = this.parseExpression();\n      this.expect(11);\n      return val;\n    }\n  }, {\n    key: \"parseDoStatement\",\n    value: function parseDoStatement(node) {\n      var _this51 = this;\n\n      this.next();\n      this.state.labels.push(loopLabel);\n      node.body = this.withSmartMixTopicForbiddingContext(function () {\n        return _this51.parseStatement(\"do\");\n      });\n      this.state.labels.pop();\n      this.expect(88);\n      node.test = this.parseHeaderExpression();\n      this.eat(13);\n      return this.finishNode(node, \"DoWhileStatement\");\n    }\n  }, {\n    key: \"parseForStatement\",\n    value: function parseForStatement(node) {\n      this.next();\n      this.state.labels.push(loopLabel);\n      var awaitAt = -1;\n\n      if (this.isAwaitAllowed() && this.eatContextual(92)) {\n        awaitAt = this.state.lastTokStart;\n      }\n\n      this.scope.enter(SCOPE_OTHER);\n      this.expect(10);\n\n      if (this.match(13)) {\n        if (awaitAt > -1) {\n          this.unexpected(awaitAt);\n        }\n\n        return this.parseFor(node, null);\n      }\n\n      var startsWithLet = this.isContextual(95);\n      var isLet = startsWithLet && this.isLetKeyword();\n\n      if (this.match(70) || this.match(71) || isLet) {\n        var _init = this.startNode();\n\n        var kind = isLet ? \"let\" : this.state.value;\n        this.next();\n        this.parseVar(_init, true, kind);\n        this.finishNode(_init, \"VariableDeclaration\");\n\n        if ((this.match(54) || this.isContextual(97)) && _init.declarations.length === 1) {\n          return this.parseForIn(node, _init, awaitAt);\n        }\n\n        if (awaitAt > -1) {\n          this.unexpected(awaitAt);\n        }\n\n        return this.parseFor(node, _init);\n      }\n\n      var startsWithAsync = this.isContextual(91);\n      var refExpressionErrors = new ExpressionErrors();\n      var init = this.parseExpression(true, refExpressionErrors);\n      var isForOf = this.isContextual(97);\n\n      if (isForOf) {\n        if (startsWithLet) {\n          this.raise(init.start, ErrorMessages.ForOfLet);\n        } else if (awaitAt === -1 && startsWithAsync && init.type === \"Identifier\") {\n          this.raise(init.start, ErrorMessages.ForOfAsync);\n        }\n      }\n\n      if (isForOf || this.match(54)) {\n        this.toAssignable(init, true);\n        var description = isForOf ? \"for-of statement\" : \"for-in statement\";\n        this.checkLVal(init, description);\n        return this.parseForIn(node, init, awaitAt);\n      } else {\n        this.checkExpressionErrors(refExpressionErrors, true);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n  }, {\n    key: \"parseFunctionStatement\",\n    value: function parseFunctionStatement(node, isAsync, declarationPosition) {\n      this.next();\n      return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n    }\n  }, {\n    key: \"parseIfStatement\",\n    value: function parseIfStatement(node) {\n      this.next();\n      node.test = this.parseHeaderExpression();\n      node.consequent = this.parseStatement(\"if\");\n      node.alternate = this.eat(62) ? this.parseStatement(\"if\") : null;\n      return this.finishNode(node, \"IfStatement\");\n    }\n  }, {\n    key: \"parseReturnStatement\",\n    value: function parseReturnStatement(node) {\n      if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n        this.raise(this.state.start, ErrorMessages.IllegalReturn);\n      }\n\n      this.next();\n\n      if (this.isLineTerminator()) {\n        node.argument = null;\n      } else {\n        node.argument = this.parseExpression();\n        this.semicolon();\n      }\n\n      return this.finishNode(node, \"ReturnStatement\");\n    }\n  }, {\n    key: \"parseSwitchStatement\",\n    value: function parseSwitchStatement(node) {\n      this.next();\n      node.discriminant = this.parseHeaderExpression();\n      var cases = node.cases = [];\n      this.expect(5);\n      this.state.labels.push(switchLabel);\n      this.scope.enter(SCOPE_OTHER);\n      var cur;\n\n      for (var sawDefault; !this.match(8);) {\n        if (this.match(57) || this.match(61)) {\n          var isCase = this.match(57);\n          if (cur) this.finishNode(cur, \"SwitchCase\");\n          cases.push(cur = this.startNode());\n          cur.consequent = [];\n          this.next();\n\n          if (isCase) {\n            cur.test = this.parseExpression();\n          } else {\n            if (sawDefault) {\n              this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\n            }\n\n            sawDefault = true;\n            cur.test = null;\n          }\n\n          this.expect(14);\n        } else {\n          if (cur) {\n            cur.consequent.push(this.parseStatement(null));\n          } else {\n            this.unexpected();\n          }\n        }\n      }\n\n      this.scope.exit();\n      if (cur) this.finishNode(cur, \"SwitchCase\");\n      this.next();\n      this.state.labels.pop();\n      return this.finishNode(node, \"SwitchStatement\");\n    }\n  }, {\n    key: \"parseThrowStatement\",\n    value: function parseThrowStatement(node) {\n      this.next();\n\n      if (this.hasPrecedingLineBreak()) {\n        this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\n      }\n\n      node.argument = this.parseExpression();\n      this.semicolon();\n      return this.finishNode(node, \"ThrowStatement\");\n    }\n  }, {\n    key: \"parseCatchClauseParam\",\n    value: function parseCatchClauseParam() {\n      var param = this.parseBindingAtom();\n      var simple = param.type === \"Identifier\";\n      this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n      this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n      return param;\n    }\n  }, {\n    key: \"parseTryStatement\",\n    value: function parseTryStatement(node) {\n      var _this52 = this;\n\n      this.next();\n      node.block = this.parseBlock();\n      node.handler = null;\n\n      if (this.match(58)) {\n        var clause = this.startNode();\n        this.next();\n\n        if (this.match(10)) {\n          this.expect(10);\n          clause.param = this.parseCatchClauseParam();\n          this.expect(11);\n        } else {\n          clause.param = null;\n          this.scope.enter(SCOPE_OTHER);\n        }\n\n        clause.body = this.withSmartMixTopicForbiddingContext(function () {\n          return _this52.parseBlock(false, false);\n        });\n        this.scope.exit();\n        node.handler = this.finishNode(clause, \"CatchClause\");\n      }\n\n      node.finalizer = this.eat(63) ? this.parseBlock() : null;\n\n      if (!node.handler && !node.finalizer) {\n        this.raise(node.start, ErrorMessages.NoCatchOrFinally);\n      }\n\n      return this.finishNode(node, \"TryStatement\");\n    }\n  }, {\n    key: \"parseVarStatement\",\n    value: function parseVarStatement(node, kind) {\n      this.next();\n      this.parseVar(node, false, kind);\n      this.semicolon();\n      return this.finishNode(node, \"VariableDeclaration\");\n    }\n  }, {\n    key: \"parseWhileStatement\",\n    value: function parseWhileStatement(node) {\n      var _this53 = this;\n\n      this.next();\n      node.test = this.parseHeaderExpression();\n      this.state.labels.push(loopLabel);\n      node.body = this.withSmartMixTopicForbiddingContext(function () {\n        return _this53.parseStatement(\"while\");\n      });\n      this.state.labels.pop();\n      return this.finishNode(node, \"WhileStatement\");\n    }\n  }, {\n    key: \"parseWithStatement\",\n    value: function parseWithStatement(node) {\n      var _this54 = this;\n\n      if (this.state.strict) {\n        this.raise(this.state.start, ErrorMessages.StrictWith);\n      }\n\n      this.next();\n      node.object = this.parseHeaderExpression();\n      node.body = this.withSmartMixTopicForbiddingContext(function () {\n        return _this54.parseStatement(\"with\");\n      });\n      return this.finishNode(node, \"WithStatement\");\n    }\n  }, {\n    key: \"parseEmptyStatement\",\n    value: function parseEmptyStatement(node) {\n      this.next();\n      return this.finishNode(node, \"EmptyStatement\");\n    }\n  }, {\n    key: \"parseLabeledStatement\",\n    value: function parseLabeledStatement(node, maybeName, expr, context) {\n      var _iterator12 = _createForOfIteratorHelper(this.state.labels),\n          _step12;\n\n      try {\n        for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n          var _label = _step12.value;\n\n          if (_label.name === maybeName) {\n            this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\n          }\n        }\n      } catch (err) {\n        _iterator12.e(err);\n      } finally {\n        _iterator12.f();\n      }\n\n      var kind = tokenIsLoop(this.state.type) ? \"loop\" : this.match(67) ? \"switch\" : null;\n\n      for (var i = this.state.labels.length - 1; i >= 0; i--) {\n        var label = this.state.labels[i];\n\n        if (label.statementStart === node.start) {\n          label.statementStart = this.state.start;\n          label.kind = kind;\n        } else {\n          break;\n        }\n      }\n\n      this.state.labels.push({\n        name: maybeName,\n        kind: kind,\n        statementStart: this.state.start\n      });\n      node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n      this.state.labels.pop();\n      node.label = expr;\n      return this.finishNode(node, \"LabeledStatement\");\n    }\n  }, {\n    key: \"parseExpressionStatement\",\n    value: function parseExpressionStatement(node, expr) {\n      node.expression = expr;\n      this.semicolon();\n      return this.finishNode(node, \"ExpressionStatement\");\n    }\n  }, {\n    key: \"parseBlock\",\n    value: function parseBlock() {\n      var allowDirectives = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var createNewLexicalScope = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var afterBlockParse = arguments.length > 2 ? arguments[2] : undefined;\n      var node = this.startNode();\n\n      if (allowDirectives) {\n        this.state.strictErrors.clear();\n      }\n\n      this.expect(5);\n\n      if (createNewLexicalScope) {\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      this.parseBlockBody(node, allowDirectives, false, 8, afterBlockParse);\n\n      if (createNewLexicalScope) {\n        this.scope.exit();\n      }\n\n      return this.finishNode(node, \"BlockStatement\");\n    }\n  }, {\n    key: \"isValidDirective\",\n    value: function isValidDirective(stmt) {\n      return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n    }\n  }, {\n    key: \"parseBlockBody\",\n    value: function parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n      var body = node.body = [];\n      var directives = node.directives = [];\n      this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n    }\n  }, {\n    key: \"parseBlockOrModuleBlockBody\",\n    value: function parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n      var oldStrict = this.state.strict;\n      var hasStrictModeDirective = false;\n      var parsedNonDirective = false;\n\n      while (!this.match(end)) {\n        var stmt = this.parseStatement(null, topLevel);\n\n        if (directives && !parsedNonDirective) {\n          if (this.isValidDirective(stmt)) {\n            var directive = this.stmtToDirective(stmt);\n            directives.push(directive);\n\n            if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n              hasStrictModeDirective = true;\n              this.setStrict(true);\n            }\n\n            continue;\n          }\n\n          parsedNonDirective = true;\n          this.state.strictErrors.clear();\n        }\n\n        body.push(stmt);\n      }\n\n      if (afterBlockParse) {\n        afterBlockParse.call(this, hasStrictModeDirective);\n      }\n\n      if (!oldStrict) {\n        this.setStrict(false);\n      }\n\n      this.next();\n    }\n  }, {\n    key: \"parseFor\",\n    value: function parseFor(node, init) {\n      var _this55 = this;\n\n      node.init = init;\n      this.semicolon(false);\n      node.test = this.match(13) ? null : this.parseExpression();\n      this.semicolon(false);\n      node.update = this.match(11) ? null : this.parseExpression();\n      this.expect(11);\n      node.body = this.withSmartMixTopicForbiddingContext(function () {\n        return _this55.parseStatement(\"for\");\n      });\n      this.scope.exit();\n      this.state.labels.pop();\n      return this.finishNode(node, \"ForStatement\");\n    }\n  }, {\n    key: \"parseForIn\",\n    value: function parseForIn(node, init, awaitAt) {\n      var _this56 = this;\n\n      var isForIn = this.match(54);\n      this.next();\n\n      if (isForIn) {\n        if (awaitAt > -1) this.unexpected(awaitAt);\n      } else {\n        node.await = awaitAt > -1;\n      }\n\n      if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n        this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\n      } else if (init.type === \"AssignmentPattern\") {\n        this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\n      }\n\n      node.left = init;\n      node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n      this.expect(11);\n      node.body = this.withSmartMixTopicForbiddingContext(function () {\n        return _this56.parseStatement(\"for\");\n      });\n      this.scope.exit();\n      this.state.labels.pop();\n      return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n    }\n  }, {\n    key: \"parseVar\",\n    value: function parseVar(node, isFor, kind) {\n      var declarations = node.declarations = [];\n      var isTypescript = this.hasPlugin(\"typescript\");\n      node.kind = kind;\n\n      for (;;) {\n        var decl = this.startNode();\n        this.parseVarId(decl, kind);\n\n        if (this.eat(29)) {\n          decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n        } else {\n          if (kind === \"const\" && !(this.match(54) || this.isContextual(97))) {\n            if (!isTypescript) {\n              this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n            }\n          } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(54) || this.isContextual(97)))) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n          }\n\n          decl.init = null;\n        }\n\n        declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n        if (!this.eat(12)) break;\n      }\n\n      return node;\n    }\n  }, {\n    key: \"parseVarId\",\n    value: function parseVarId(decl, kind) {\n      decl.id = this.parseBindingAtom();\n      this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\n    }\n  }, {\n    key: \"parseFunction\",\n    value: function parseFunction(node) {\n      var _this57 = this;\n\n      var statement = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : FUNC_NO_FLAGS;\n      var isAsync = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var isStatement = statement & FUNC_STATEMENT;\n      var isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n      var requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n      this.initFunction(node, isAsync);\n\n      if (this.match(51) && isHangingStatement) {\n        this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\n      }\n\n      node.generator = this.eat(51);\n\n      if (isStatement) {\n        node.id = this.parseFunctionId(requireId);\n      }\n\n      var oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n      this.state.maybeInArrowParameters = false;\n      this.scope.enter(SCOPE_FUNCTION);\n      this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n      if (!isStatement) {\n        node.id = this.parseFunctionId();\n      }\n\n      this.parseFunctionParams(node, false);\n      this.withSmartMixTopicForbiddingContext(function () {\n        _this57.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n      });\n      this.prodParam.exit();\n      this.scope.exit();\n\n      if (isStatement && !isHangingStatement) {\n        this.registerFunctionStatementId(node);\n      }\n\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n      return node;\n    }\n  }, {\n    key: \"parseFunctionId\",\n    value: function parseFunctionId(requireId) {\n      return requireId || tokenIsIdentifier(this.state.type) ? this.parseIdentifier() : null;\n    }\n  }, {\n    key: \"parseFunctionParams\",\n    value: function parseFunctionParams(node, allowModifiers) {\n      this.expect(10);\n      this.expressionScope.enter(newParameterDeclarationScope());\n      node.params = this.parseBindingList(11, 41, false, allowModifiers);\n      this.expressionScope.exit();\n    }\n  }, {\n    key: \"registerFunctionStatementId\",\n    value: function registerFunctionStatementId(node) {\n      if (!node.id) return;\n      this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\n    }\n  }, {\n    key: \"parseClass\",\n    value: function parseClass(node, isStatement, optionalId) {\n      this.next();\n      this.takeDecorators(node);\n      var oldStrict = this.state.strict;\n      this.state.strict = true;\n      this.parseClassId(node, isStatement, optionalId);\n      this.parseClassSuper(node);\n      node.body = this.parseClassBody(!!node.superClass, oldStrict);\n      return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n    }\n  }, {\n    key: \"isClassProperty\",\n    value: function isClassProperty() {\n      return this.match(29) || this.match(13) || this.match(8);\n    }\n  }, {\n    key: \"isClassMethod\",\n    value: function isClassMethod() {\n      return this.match(10);\n    }\n  }, {\n    key: \"isNonstaticConstructor\",\n    value: function isNonstaticConstructor(method) {\n      return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n    }\n  }, {\n    key: \"parseClassBody\",\n    value: function parseClassBody(hadSuperClass, oldStrict) {\n      var _this58 = this;\n\n      this.classScope.enter();\n      var state = {\n        hadConstructor: false,\n        hadSuperClass: hadSuperClass\n      };\n      var decorators = [];\n      var classBody = this.startNode();\n      classBody.body = [];\n      this.expect(5);\n      this.withSmartMixTopicForbiddingContext(function () {\n        while (!_this58.match(8)) {\n          if (_this58.eat(13)) {\n            if (decorators.length > 0) {\n              throw _this58.raise(_this58.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\n            }\n\n            continue;\n          }\n\n          if (_this58.match(26)) {\n            decorators.push(_this58.parseDecorator());\n            continue;\n          }\n\n          var member = _this58.startNode();\n\n          if (decorators.length) {\n            member.decorators = decorators;\n\n            _this58.resetStartLocationFromNode(member, decorators[0]);\n\n            decorators = [];\n          }\n\n          _this58.parseClassMember(classBody, member, state);\n\n          if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n            _this58.raise(member.start, ErrorMessages.DecoratorConstructor);\n          }\n        }\n      });\n      this.state.strict = oldStrict;\n      this.next();\n\n      if (decorators.length) {\n        throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\n      }\n\n      this.classScope.exit();\n      return this.finishNode(classBody, \"ClassBody\");\n    }\n  }, {\n    key: \"parseClassMemberFromModifier\",\n    value: function parseClassMemberFromModifier(classBody, member) {\n      var key = this.parseIdentifier(true);\n\n      if (this.isClassMethod()) {\n        var method = member;\n        method.kind = \"method\";\n        method.computed = false;\n        method.key = key;\n        method.static = false;\n        this.pushClassMethod(classBody, method, false, false, false, false);\n        return true;\n      } else if (this.isClassProperty()) {\n        var prop = member;\n        prop.computed = false;\n        prop.key = key;\n        prop.static = false;\n        classBody.body.push(this.parseClassProperty(prop));\n        return true;\n      }\n\n      this.resetPreviousNodeTrailingComments(key);\n      return false;\n    }\n  }, {\n    key: \"parseClassMember\",\n    value: function parseClassMember(classBody, member, state) {\n      var isStatic = this.isContextual(100);\n\n      if (isStatic) {\n        if (this.parseClassMemberFromModifier(classBody, member)) {\n          return;\n        }\n\n        if (this.eat(5)) {\n          this.parseClassStaticBlock(classBody, member);\n          return;\n        }\n      }\n\n      this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n    }\n  }, {\n    key: \"parseClassMemberWithIsStatic\",\n    value: function parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n      var publicMethod = member;\n      var privateMethod = member;\n      var publicProp = member;\n      var privateProp = member;\n      var method = publicMethod;\n      var publicMember = publicMethod;\n      member.static = isStatic;\n      this.parsePropertyNamePrefixOperator(member);\n\n      if (this.eat(51)) {\n        method.kind = \"method\";\n        var isPrivateName = this.match(130);\n        this.parseClassElementName(method);\n\n        if (isPrivateName) {\n          this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n          return;\n        }\n\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n        return;\n      }\n\n      var isContextual = tokenIsIdentifier(this.state.type) && !this.state.containsEsc;\n      var isPrivate = this.match(130);\n      var key = this.parseClassElementName(member);\n      var maybeQuestionTokenStart = this.state.start;\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (this.isClassMethod()) {\n        method.kind = \"method\";\n\n        if (isPrivate) {\n          this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n          return;\n        }\n\n        var isConstructor = this.isNonstaticConstructor(publicMethod);\n        var allowsDirectSuper = false;\n\n        if (isConstructor) {\n          publicMethod.kind = \"constructor\";\n\n          if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n            this.raise(key.start, ErrorMessages.DuplicateConstructor);\n          }\n\n          if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n            this.raise(key.start, ErrorMessages.OverrideOnConstructor);\n          }\n\n          state.hadConstructor = true;\n          allowsDirectSuper = state.hadSuperClass;\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n      } else if (this.isClassProperty()) {\n        if (isPrivate) {\n          this.pushClassPrivateProperty(classBody, privateProp);\n        } else {\n          this.pushClassProperty(classBody, publicProp);\n        }\n      } else if (isContextual && key.name === \"async\" && !this.isLineTerminator()) {\n        this.resetPreviousNodeTrailingComments(key);\n        var isGenerator = this.eat(51);\n\n        if (publicMember.optional) {\n          this.unexpected(maybeQuestionTokenStart);\n        }\n\n        method.kind = \"method\";\n\n        var _isPrivate = this.match(130);\n\n        this.parseClassElementName(method);\n        this.parsePostMemberNameModifiers(publicMember);\n\n        if (_isPrivate) {\n          this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n        } else {\n          if (this.isNonstaticConstructor(publicMethod)) {\n            this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\n          }\n\n          this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n        }\n      } else if (isContextual && (key.name === \"get\" || key.name === \"set\") && !(this.match(51) && this.isLineTerminator())) {\n        this.resetPreviousNodeTrailingComments(key);\n        method.kind = key.name;\n\n        var _isPrivate2 = this.match(130);\n\n        this.parseClassElementName(publicMethod);\n\n        if (_isPrivate2) {\n          this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        } else {\n          if (this.isNonstaticConstructor(publicMethod)) {\n            this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\n          }\n\n          this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n        }\n\n        this.checkGetterSetterParams(publicMethod);\n      } else if (this.isLineTerminator()) {\n        if (isPrivate) {\n          this.pushClassPrivateProperty(classBody, privateProp);\n        } else {\n          this.pushClassProperty(classBody, publicProp);\n        }\n      } else {\n        this.unexpected();\n      }\n    }\n  }, {\n    key: \"parseClassElementName\",\n    value: function parseClassElementName(member) {\n      var _this$state7 = this.state,\n          type = _this$state7.type,\n          value = _this$state7.value,\n          start = _this$state7.start;\n\n      if ((type === 124 || type === 125) && member.static && value === \"prototype\") {\n        this.raise(start, ErrorMessages.StaticPrototype);\n      }\n\n      if (type === 130) {\n        if (value === \"constructor\") {\n          this.raise(start, ErrorMessages.ConstructorClassPrivateField);\n        }\n\n        var key = this.parsePrivateName();\n        member.key = key;\n        return key;\n      }\n\n      return this.parsePropertyName(member);\n    }\n  }, {\n    key: \"parseClassStaticBlock\",\n    value: function parseClassStaticBlock(classBody, member) {\n      var _member$decorators;\n\n      this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n      var oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(PARAM);\n      var body = member.body = [];\n      this.parseBlockOrModuleBlockBody(body, undefined, false, 8);\n      this.prodParam.exit();\n      this.scope.exit();\n      this.state.labels = oldLabels;\n      classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n      if ((_member$decorators = member.decorators) != null && _member$decorators.length) {\n        this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\n      }\n    }\n  }, {\n    key: \"pushClassProperty\",\n    value: function pushClassProperty(classBody, prop) {\n      if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n        this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\n      }\n\n      classBody.body.push(this.parseClassProperty(prop));\n    }\n  }, {\n    key: \"pushClassPrivateProperty\",\n    value: function pushClassPrivateProperty(classBody, prop) {\n      var node = this.parseClassPrivateProperty(prop);\n      classBody.body.push(node);\n      this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.start);\n    }\n  }, {\n    key: \"pushClassMethod\",\n    value: function pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n      classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n    }\n  }, {\n    key: \"pushClassPrivateMethod\",\n    value: function pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n      var node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n      classBody.body.push(node);\n      var kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n      this.declareClassPrivateMethodInScope(node, kind);\n    }\n  }, {\n    key: \"declareClassPrivateMethodInScope\",\n    value: function declareClassPrivateMethodInScope(node, kind) {\n      this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.start);\n    }\n  }, {\n    key: \"parsePostMemberNameModifiers\",\n    value: function parsePostMemberNameModifiers(methodOrProp) {}\n  }, {\n    key: \"parseClassPrivateProperty\",\n    value: function parseClassPrivateProperty(node) {\n      this.parseInitializer(node);\n      this.semicolon();\n      return this.finishNode(node, \"ClassPrivateProperty\");\n    }\n  }, {\n    key: \"parseClassProperty\",\n    value: function parseClassProperty(node) {\n      this.parseInitializer(node);\n      this.semicolon();\n      return this.finishNode(node, \"ClassProperty\");\n    }\n  }, {\n    key: \"parseInitializer\",\n    value: function parseInitializer(node) {\n      this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n      this.expressionScope.enter(newExpressionScope());\n      this.prodParam.enter(PARAM);\n      node.value = this.eat(29) ? this.parseMaybeAssignAllowIn() : null;\n      this.expressionScope.exit();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n  }, {\n    key: \"parseClassId\",\n    value: function parseClassId(node, isStatement, optionalId) {\n      var bindingType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : BIND_CLASS;\n\n      if (tokenIsIdentifier(this.state.type)) {\n        node.id = this.parseIdentifier();\n\n        if (isStatement) {\n          this.checkLVal(node.id, \"class name\", bindingType);\n        }\n      } else {\n        if (optionalId || !isStatement) {\n          node.id = null;\n        } else {\n          this.unexpected(null, ErrorMessages.MissingClassName);\n        }\n      }\n    }\n  }, {\n    key: \"parseClassSuper\",\n    value: function parseClassSuper(node) {\n      node.superClass = this.eat(77) ? this.parseExprSubscripts() : null;\n    }\n  }, {\n    key: \"parseExport\",\n    value: function parseExport(node) {\n      var hasDefault = this.maybeParseExportDefaultSpecifier(node);\n      var parseAfterDefault = !hasDefault || this.eat(12);\n      var hasStar = parseAfterDefault && this.eatExportStar(node);\n      var hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n      var parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(12));\n      var isFromRequired = hasDefault || hasStar;\n\n      if (hasStar && !hasNamespace) {\n        if (hasDefault) this.unexpected();\n        this.parseExportFrom(node, true);\n        return this.finishNode(node, \"ExportAllDeclaration\");\n      }\n\n      var hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n      if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n        throw this.unexpected(null, 5);\n      }\n\n      var hasDeclaration;\n\n      if (isFromRequired || hasSpecifiers) {\n        hasDeclaration = false;\n        this.parseExportFrom(node, isFromRequired);\n      } else {\n        hasDeclaration = this.maybeParseExportDeclaration(node);\n      }\n\n      if (isFromRequired || hasSpecifiers || hasDeclaration) {\n        this.checkExport(node, true, false, !!node.source);\n        return this.finishNode(node, \"ExportNamedDeclaration\");\n      }\n\n      if (this.eat(61)) {\n        node.declaration = this.parseExportDefaultExpression();\n        this.checkExport(node, true, true);\n        return this.finishNode(node, \"ExportDefaultDeclaration\");\n      }\n\n      throw this.unexpected(null, 5);\n    }\n  }, {\n    key: \"eatExportStar\",\n    value: function eatExportStar(node) {\n      return this.eat(51);\n    }\n  }, {\n    key: \"maybeParseExportDefaultSpecifier\",\n    value: function maybeParseExportDefaultSpecifier(node) {\n      if (this.isExportDefaultSpecifier()) {\n        this.expectPlugin(\"exportDefaultFrom\");\n        var specifier = this.startNode();\n        specifier.exported = this.parseIdentifier(true);\n        node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"maybeParseExportNamespaceSpecifier\",\n    value: function maybeParseExportNamespaceSpecifier(node) {\n      if (this.isContextual(89)) {\n        if (!node.specifiers) node.specifiers = [];\n        var specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n        this.next();\n        specifier.exported = this.parseModuleExportName();\n        node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"maybeParseExportNamedSpecifiers\",\n    value: function maybeParseExportNamedSpecifiers(node) {\n      if (this.match(5)) {\n        var _node$specifiers;\n\n        if (!node.specifiers) node.specifiers = [];\n        var isTypeExport = node.exportKind === \"type\";\n\n        (_node$specifiers = node.specifiers).push.apply(_node$specifiers, _toConsumableArray(this.parseExportSpecifiers(isTypeExport)));\n\n        node.source = null;\n        node.declaration = null;\n\n        if (this.hasPlugin(\"importAssertions\")) {\n          node.assertions = [];\n        }\n\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"maybeParseExportDeclaration\",\n    value: function maybeParseExportDeclaration(node) {\n      if (this.shouldParseExportDeclaration()) {\n        node.specifiers = [];\n        node.source = null;\n\n        if (this.hasPlugin(\"importAssertions\")) {\n          node.assertions = [];\n        }\n\n        node.declaration = this.parseExportDeclaration(node);\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"isAsyncFunction\",\n    value: function isAsyncFunction() {\n      if (!this.isContextual(91)) return false;\n      var next = this.nextTokenStart();\n      return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n    }\n  }, {\n    key: \"parseExportDefaultExpression\",\n    value: function parseExportDefaultExpression() {\n      var expr = this.startNode();\n      var isAsync = this.isAsyncFunction();\n\n      if (this.match(64) || isAsync) {\n        this.next();\n\n        if (isAsync) {\n          this.next();\n        }\n\n        return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n      } else if (this.match(76)) {\n        return this.parseClass(expr, true, true);\n      } else if (this.match(26)) {\n        if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\n        }\n\n        this.parseDecorators(false);\n        return this.parseClass(expr, true, true);\n      } else if (this.match(71) || this.match(70) || this.isLet()) {\n        throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\n      } else {\n        var res = this.parseMaybeAssignAllowIn();\n        this.semicolon();\n        return res;\n      }\n    }\n  }, {\n    key: \"parseExportDeclaration\",\n    value: function parseExportDeclaration(node) {\n      return this.parseStatement(null);\n    }\n  }, {\n    key: \"isExportDefaultSpecifier\",\n    value: function isExportDefaultSpecifier() {\n      var type = this.state.type;\n\n      if (tokenIsIdentifier(type)) {\n        if (type === 91 && !this.state.containsEsc || type === 95) {\n          return false;\n        }\n\n        if ((type === 122 || type === 121) && !this.state.containsEsc) {\n          var _this$lookahead = this.lookahead(),\n              nextType = _this$lookahead.type;\n\n          if (tokenIsIdentifier(nextType) && nextType !== 93 || nextType === 5) {\n            this.expectOnePlugin([\"flow\", \"typescript\"]);\n            return false;\n          }\n        }\n      } else if (!this.match(61)) {\n        return false;\n      }\n\n      var next = this.nextTokenStart();\n      var hasFrom = this.isUnparsedContextual(next, \"from\");\n\n      if (this.input.charCodeAt(next) === 44 || tokenIsIdentifier(this.state.type) && hasFrom) {\n        return true;\n      }\n\n      if (this.match(61) && hasFrom) {\n        var nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n        return nextAfterFrom === 34 || nextAfterFrom === 39;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"parseExportFrom\",\n    value: function parseExportFrom(node, expect) {\n      if (this.eatContextual(93)) {\n        node.source = this.parseImportSource();\n        this.checkExport(node);\n        var assertions = this.maybeParseImportAssertions();\n\n        if (assertions) {\n          node.assertions = assertions;\n        }\n      } else if (expect) {\n        this.unexpected();\n      }\n\n      this.semicolon();\n    }\n  }, {\n    key: \"shouldParseExportDeclaration\",\n    value: function shouldParseExportDeclaration() {\n      var type = this.state.type;\n\n      if (type === 26) {\n        this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n        if (this.hasPlugin(\"decorators\")) {\n          if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n            this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\n          } else {\n            return true;\n          }\n        }\n      }\n\n      return type === 70 || type === 71 || type === 64 || type === 76 || this.isLet() || this.isAsyncFunction();\n    }\n  }, {\n    key: \"checkExport\",\n    value: function checkExport(node, checkNames, isDefault, isFrom) {\n      if (checkNames) {\n        if (isDefault) {\n          this.checkDuplicateExports(node, \"default\");\n\n          if (this.hasPlugin(\"exportDefaultFrom\")) {\n            var _declaration$extra;\n\n            var declaration = node.declaration;\n\n            if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) != null && _declaration$extra.parenthesized)) {\n              this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\n            }\n          }\n        } else if (node.specifiers && node.specifiers.length) {\n          var _iterator13 = _createForOfIteratorHelper(node.specifiers),\n              _step13;\n\n          try {\n            for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n              var specifier = _step13.value;\n              var exported = specifier.exported;\n              var exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\n              this.checkDuplicateExports(specifier, exportedName);\n\n              if (!isFrom && specifier.local) {\n                var local = specifier.local;\n\n                if (local.type !== \"Identifier\") {\n                  this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.value, exportedName);\n                } else {\n                  this.checkReservedWord(local.name, local.start, true, false);\n                  this.scope.checkLocalExport(local);\n                }\n              }\n            }\n          } catch (err) {\n            _iterator13.e(err);\n          } finally {\n            _iterator13.f();\n          }\n        } else if (node.declaration) {\n          if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n            var id = node.declaration.id;\n            if (!id) throw new Error(\"Assertion failure\");\n            this.checkDuplicateExports(node, id.name);\n          } else if (node.declaration.type === \"VariableDeclaration\") {\n            var _iterator14 = _createForOfIteratorHelper(node.declaration.declarations),\n                _step14;\n\n            try {\n              for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n                var _declaration = _step14.value;\n                this.checkDeclaration(_declaration.id);\n              }\n            } catch (err) {\n              _iterator14.e(err);\n            } finally {\n              _iterator14.f();\n            }\n          }\n        }\n      }\n\n      var currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n      if (currentContextDecorators.length) {\n        throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\n      }\n    }\n  }, {\n    key: \"checkDeclaration\",\n    value: function checkDeclaration(node) {\n      if (node.type === \"Identifier\") {\n        this.checkDuplicateExports(node, node.name);\n      } else if (node.type === \"ObjectPattern\") {\n        var _iterator15 = _createForOfIteratorHelper(node.properties),\n            _step15;\n\n        try {\n          for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n            var prop = _step15.value;\n            this.checkDeclaration(prop);\n          }\n        } catch (err) {\n          _iterator15.e(err);\n        } finally {\n          _iterator15.f();\n        }\n      } else if (node.type === \"ArrayPattern\") {\n        var _iterator16 = _createForOfIteratorHelper(node.elements),\n            _step16;\n\n        try {\n          for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n            var elem = _step16.value;\n\n            if (elem) {\n              this.checkDeclaration(elem);\n            }\n          }\n        } catch (err) {\n          _iterator16.e(err);\n        } finally {\n          _iterator16.f();\n        }\n      } else if (node.type === \"ObjectProperty\") {\n        this.checkDeclaration(node.value);\n      } else if (node.type === \"RestElement\") {\n        this.checkDeclaration(node.argument);\n      } else if (node.type === \"AssignmentPattern\") {\n        this.checkDeclaration(node.left);\n      }\n    }\n  }, {\n    key: \"checkDuplicateExports\",\n    value: function checkDuplicateExports(node, name) {\n      if (this.exportedIdentifiers.has(name)) {\n        this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\n      }\n\n      this.exportedIdentifiers.add(name);\n    }\n  }, {\n    key: \"parseExportSpecifiers\",\n    value: function parseExportSpecifiers(isInTypeExport) {\n      var nodes = [];\n      var first = true;\n      this.expect(5);\n\n      while (!this.eat(8)) {\n        if (first) {\n          first = false;\n        } else {\n          this.expect(12);\n          if (this.eat(8)) break;\n        }\n\n        var isMaybeTypeOnly = this.isContextual(122);\n        var isString = this.match(125);\n        var node = this.startNode();\n        node.local = this.parseModuleExportName();\n        nodes.push(this.parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly));\n      }\n\n      return nodes;\n    }\n  }, {\n    key: \"parseExportSpecifier\",\n    value: function parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly) {\n      if (this.eatContextual(89)) {\n        node.exported = this.parseModuleExportName();\n      } else if (isString) {\n        node.exported = cloneStringLiteral(node.local);\n      } else if (!node.exported) {\n        node.exported = cloneIdentifier(node.local);\n      }\n\n      return this.finishNode(node, \"ExportSpecifier\");\n    }\n  }, {\n    key: \"parseModuleExportName\",\n    value: function parseModuleExportName() {\n      if (this.match(125)) {\n        var result = this.parseStringLiteral(this.state.value);\n        var surrogate = result.value.match(loneSurrogate);\n\n        if (surrogate) {\n          this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\n        }\n\n        return result;\n      }\n\n      return this.parseIdentifier(true);\n    }\n  }, {\n    key: \"parseImport\",\n    value: function parseImport(node) {\n      node.specifiers = [];\n\n      if (!this.match(125)) {\n        var hasDefault = this.maybeParseDefaultImportSpecifier(node);\n        var parseNext = !hasDefault || this.eat(12);\n        var hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n        if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n        this.expectContextual(93);\n      }\n\n      node.source = this.parseImportSource();\n      var assertions = this.maybeParseImportAssertions();\n\n      if (assertions) {\n        node.assertions = assertions;\n      } else {\n        var attributes = this.maybeParseModuleAttributes();\n\n        if (attributes) {\n          node.attributes = attributes;\n        }\n      }\n\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n  }, {\n    key: \"parseImportSource\",\n    value: function parseImportSource() {\n      if (!this.match(125)) this.unexpected();\n      return this.parseExprAtom();\n    }\n  }, {\n    key: \"shouldParseDefaultImport\",\n    value: function shouldParseDefaultImport(node) {\n      return tokenIsIdentifier(this.state.type);\n    }\n  }, {\n    key: \"parseImportSpecifierLocal\",\n    value: function parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n      specifier.local = this.parseIdentifier();\n      this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, type));\n    }\n  }, {\n    key: \"parseAssertEntries\",\n    value: function parseAssertEntries() {\n      var attrs = [];\n      var attrNames = new Set();\n\n      do {\n        if (this.match(8)) {\n          break;\n        }\n\n        var node = this.startNode();\n        var keyName = this.state.value;\n\n        if (attrNames.has(keyName)) {\n          this.raise(this.state.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);\n        }\n\n        attrNames.add(keyName);\n\n        if (this.match(125)) {\n          node.key = this.parseStringLiteral(keyName);\n        } else {\n          node.key = this.parseIdentifier(true);\n        }\n\n        this.expect(14);\n\n        if (!this.match(125)) {\n          throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n        }\n\n        node.value = this.parseStringLiteral(this.state.value);\n        this.finishNode(node, \"ImportAttribute\");\n        attrs.push(node);\n      } while (this.eat(12));\n\n      return attrs;\n    }\n  }, {\n    key: \"maybeParseModuleAttributes\",\n    value: function maybeParseModuleAttributes() {\n      if (this.match(72) && !this.hasPrecedingLineBreak()) {\n        this.expectPlugin(\"moduleAttributes\");\n        this.next();\n      } else {\n        if (this.hasPlugin(\"moduleAttributes\")) return [];\n        return null;\n      }\n\n      var attrs = [];\n      var attributes = new Set();\n\n      do {\n        var node = this.startNode();\n        node.key = this.parseIdentifier(true);\n\n        if (node.key.name !== \"type\") {\n          this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n        }\n\n        if (attributes.has(node.key.name)) {\n          this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n        }\n\n        attributes.add(node.key.name);\n        this.expect(14);\n\n        if (!this.match(125)) {\n          throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n        }\n\n        node.value = this.parseStringLiteral(this.state.value);\n        this.finishNode(node, \"ImportAttribute\");\n        attrs.push(node);\n      } while (this.eat(12));\n\n      return attrs;\n    }\n  }, {\n    key: \"maybeParseImportAssertions\",\n    value: function maybeParseImportAssertions() {\n      if (this.isContextual(90) && !this.hasPrecedingLineBreak()) {\n        this.expectPlugin(\"importAssertions\");\n        this.next();\n      } else {\n        if (this.hasPlugin(\"importAssertions\")) return [];\n        return null;\n      }\n\n      this.eat(5);\n      var attrs = this.parseAssertEntries();\n      this.eat(8);\n      return attrs;\n    }\n  }, {\n    key: \"maybeParseDefaultImportSpecifier\",\n    value: function maybeParseDefaultImportSpecifier(node) {\n      if (this.shouldParseDefaultImport(node)) {\n        this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"maybeParseStarImportSpecifier\",\n    value: function maybeParseStarImportSpecifier(node) {\n      if (this.match(51)) {\n        var specifier = this.startNode();\n        this.next();\n        this.expectContextual(89);\n        this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"parseNamedImportSpecifiers\",\n    value: function parseNamedImportSpecifiers(node) {\n      var first = true;\n      this.expect(5);\n\n      while (!this.eat(8)) {\n        if (first) {\n          first = false;\n        } else {\n          if (this.eat(14)) {\n            throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\n          }\n\n          this.expect(12);\n          if (this.eat(8)) break;\n        }\n\n        var specifier = this.startNode();\n        var importedIsString = this.match(125);\n        var isMaybeTypeOnly = this.isContextual(122);\n        specifier.imported = this.parseModuleExportName();\n        var importSpecifier = this.parseImportSpecifier(specifier, importedIsString, node.importKind === \"type\" || node.importKind === \"typeof\", isMaybeTypeOnly);\n        node.specifiers.push(importSpecifier);\n      }\n    }\n  }, {\n    key: \"parseImportSpecifier\",\n    value: function parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly) {\n      if (this.eatContextual(89)) {\n        specifier.local = this.parseIdentifier();\n      } else {\n        var imported = specifier.imported;\n\n        if (importedIsString) {\n          throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\n        }\n\n        this.checkReservedWord(imported.name, specifier.start, true, true);\n\n        if (!specifier.local) {\n          specifier.local = cloneIdentifier(imported);\n        }\n      }\n\n      this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n      return this.finishNode(specifier, \"ImportSpecifier\");\n    }\n  }, {\n    key: \"isThisParam\",\n    value: function isThisParam(param) {\n      return param.type === \"Identifier\" && param.name === \"this\";\n    }\n  }]);\n\n  return StatementParser;\n}(ExpressionParser);\n\nvar Parser = /*#__PURE__*/function (_StatementParser) {\n  _inherits(Parser, _StatementParser);\n\n  var _super20 = _createSuper(Parser);\n\n  function Parser(options, input) {\n    var _this59;\n\n    _classCallCheck(this, Parser);\n\n    options = getOptions(options);\n    _this59 = _super20.call(this, options, input);\n    _this59.options = options;\n\n    _this59.initializeScopes();\n\n    _this59.plugins = pluginsMap(_this59.options.plugins);\n    _this59.filename = options.sourceFilename;\n    return _this59;\n  }\n\n  _createClass(Parser, [{\n    key: \"getScopeHandler\",\n    value: function getScopeHandler() {\n      return ScopeHandler;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse() {\n      this.enterInitialScopes();\n      var file = this.startNode();\n      var program = this.startNode();\n      this.nextToken();\n      file.errors = null;\n      this.parseTopLevel(file, program);\n      file.errors = this.state.errors;\n      return file;\n    }\n  }]);\n\n  return Parser;\n}(StatementParser);\n\nfunction pluginsMap(plugins) {\n  var pluginMap = new Map();\n\n  var _iterator17 = _createForOfIteratorHelper(plugins),\n      _step17;\n\n  try {\n    for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n      var plugin = _step17.value;\n\n      var _ref20 = Array.isArray(plugin) ? plugin : [plugin, {}],\n          _ref21 = _slicedToArray(_ref20, 2),\n          name = _ref21[0],\n          options = _ref21[1];\n\n      if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n    }\n  } catch (err) {\n    _iterator17.e(err);\n  } finally {\n    _iterator17.f();\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      var parser = getParser(options, input);\n      var ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\n\nfunction parseExpression(input, options) {\n  var parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction generateExportedTokenTypes(internalTokenTypes) {\n  var tokenTypes = {};\n\n  for (var _i5 = 0, _Object$keys3 = Object.keys(internalTokenTypes); _i5 < _Object$keys3.length; _i5++) {\n    var typeName = _Object$keys3[_i5];\n    tokenTypes[typeName] = getExportedToken(internalTokenTypes[typeName]);\n  }\n\n  return tokenTypes;\n}\n\nvar tokTypes = generateExportedTokenTypes(tt);\n\nfunction getParser(options, input) {\n  var cls = Parser;\n\n  if (options != null && options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nvar parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  var pluginList = mixinPluginNames.filter(function (name) {\n    return hasPlugin(pluginsFromOptions, name);\n  });\n  var key = pluginList.join(\"/\");\n  var cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    var _iterator18 = _createForOfIteratorHelper(pluginList),\n        _step18;\n\n    try {\n      for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n        var plugin = _step18.value;\n        cls = mixinPlugins[plugin](cls);\n      }\n    } catch (err) {\n      _iterator18.e(err);\n    } finally {\n      _iterator18.f();\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = tokTypes;","map":{"version":3,"sources":["/Users/ted/Desktop/jbook/packages/local-client/node_modules/@babel/parser/lib/index.js"],"names":["Object","defineProperty","exports","value","lineBreak","lineBreakG","RegExp","source","isNewLine","code","skipWhiteSpace","skipWhiteSpaceInLine","skipWhiteSpaceToLineBreak","isWhitespace","Position","line","col","column","SourceLocation","start","end","filename","identifierName","getLineInfo","input","offset","lineStart","match","lastIndex","exec","index","createPositionWithColumnOffset","position","columnOffset","BaseParser","sawUnambiguousESM","ambiguousScriptDifferentAst","pluginConfig","plugins","has","pluginName","pluginOptions","hasPlugin","actualOptions","get","keys","key","plugin","name","_this$plugins$get","setTrailingComments","node","comments","trailingComments","undefined","unshift","setLeadingComments","leadingComments","setInnerComments","innerComments","adjustInnerComments","elements","commentWS","lastElement","i","length","CommentsParser","comment","loc","state","push","commentStack","commentStackLength","lastCommentWS","leadingNode","nodeStart","commentEnd","containingNode","finalizeComment","splice","trailingNode","commentStart","charCodeAt","type","properties","arguments","params","specifiers","ErrorCodes","freeze","SyntaxError","SourceTypeModuleError","ErrorMessages","makeErrorTemplates","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForOfAsync","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","InvalidBigIntLiteral","InvalidCodePoint","InvalidCoverInitializedName","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","OverrideOnConstructor","ParamDupe","PatternHasAccessor","PatternHasMethod","PipeBodyIsTighter","PipeTopicRequiresHackPipes","PipeTopicUnbound","PipeTopicUnconfiguredToken","PipeTopicUnused","PipeUnparenthesizedBody","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","SourceTypeModuleErrorMessages","ImportMetaOutsideModule","ImportOutsideModule","keepReasonCodeCompat","reasonCode","syntaxPlugin","messages","templates","forEach","template","ParserError","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","raiseWithData","getLocationForPosition","message","replace","_","options","errorRecovery","errors","error","assign","_raise","data","errorTemplate","errorContext","err","isLookahead","estree","superClass","pattern","flags","regex","e","estreeParseLiteral","bigInt","BigInt","_unused","bigint","String","decimal","parseLiteral","directive","directiveLiteral","stmt","startNodeAt","expression","extra","expressionValue","raw","finishNodeAt","slice","isAsync","isObjectProperty","checkDeclaration","method","_stmt$expression$extr","parenthesized","args","directiveStatements","directives","map","d","directiveToStmt","body","concat","classBody","isGenerator","isConstructor","allowsDirectSuper","parseMethod","typeParameters","getPluginOption","convertPrivateNameToPrivateIdentifier","id","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","kind","computed","finishNode","propertyNode","prop","isPattern","isAccessor","shorthand","startPos","refExpressionErrors","isBinding","isAssignable","isLHS","toAssignable","raise","optional","callee","_node$arguments$","attributes","exported","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","TokContext","token","preserveSpace","types","brace","j_oTag","j_cTag","j_expr","beforeExpr","startsExpr","isLoop","isAssign","prefix","postfix","ExportedTokenType","label","conf","keyword","rightAssociative","binop","updateContext","keywords$1","Map","createKeyword","createToken","set","createBinop","tokenTypeCounter","tokenTypes","tokenLabels","tokenBinops","tokenBeforeExprs","tokenStartsExprs","tokenPrefixes","_options$binop","_options$beforeExpr","_options$startsExpr","_options$prefix","createKeywordLike","_options$binop2","_options$beforeExpr2","_options$startsExpr2","_options$prefix2","tt","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","ellipsis","backQuote","dollarBraceL","templateTail","templateNonTail","at","hash","interpreterDirective","eq","slashAssign","xorAssign","moduloAssign","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","lt","gt","relational","bitShift","plusMin","modulo","star","slash","exponent","_in","_instanceof","_break","_case","_catch","_continue","_debugger","_default","_else","_finally","_function","_if","_return","_switch","_throw","_try","_var","_const","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_typeof","_void","_delete","_do","_for","_while","_as","_assert","_async","_await","_from","_get","_let","_meta","_of","_sent","_set","_static","_yield","_asserts","_checks","_exports","_global","_implements","_intrinsic","_infer","_is","_mixins","_proto","_require","_keyof","_readonly","_unique","_abstract","_declare","_enum","_module","_namespace","_interface","_type","_opaque","string","num","regexp","privateName","eof","jsxName","jsxText","jsxTagStart","jsxTagEnd","placeholder","tokenIsIdentifier","tokenKeywordOrIdentifierIsKeyword","tokenIsKeywordOrIdentifier","tokenIsLiteralPropertyName","tokenComesBeforeExpression","tokenCanStartExpression","tokenIsAssignment","tokenIsFlowInterfaceOrTypeOrOpaque","tokenIsLoop","tokenIsKeyword","tokenIsOperator","tokenIsPostfix","tokenIsPrefix","tokenIsTSTypeOperator","tokenIsTSDeclarationStart","tokenLabelName","tokenOperatorPrecedence","tokenIsRightAssociative","tokenIsTemplate","getExportedToken","isTokenType","obj","context","pop","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","test","fromCharCode","isIdentifierChar","reservedWords","strict","strictBind","keywords","Set","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isKeyword","isIteratorStart","current","next","reservedWordLikeSet","canBeReservedWord","SCOPE_OTHER","SCOPE_PROGRAM","SCOPE_FUNCTION","SCOPE_ARROW","SCOPE_SIMPLE_CATCH","SCOPE_SUPER","SCOPE_DIRECT_SUPER","SCOPE_CLASS","SCOPE_STATIC_BLOCK","SCOPE_TS_MODULE","SCOPE_VAR","BIND_KIND_VALUE","BIND_KIND_TYPE","BIND_SCOPE_VAR","BIND_SCOPE_LEXICAL","BIND_SCOPE_FUNCTION","BIND_FLAGS_NONE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_CLASS","BIND_LEXICAL","BIND_VAR","BIND_FUNCTION","BIND_TS_INTERFACE","BIND_TS_TYPE","BIND_TS_ENUM","BIND_TS_AMBIENT","BIND_NONE","BIND_OUTSIDE","BIND_TS_CONST_ENUM","BIND_TS_NAMESPACE","BIND_FLOW_DECLARE_FN","CLASS_ELEMENT_FLAG_STATIC","CLASS_ELEMENT_KIND_GETTER","CLASS_ELEMENT_KIND_SETTER","CLASS_ELEMENT_KIND_ACCESSOR","CLASS_ELEMENT_STATIC_GETTER","CLASS_ELEMENT_STATIC_SETTER","CLASS_ELEMENT_INSTANCE_GETTER","CLASS_ELEMENT_INSTANCE_SETTER","CLASS_ELEMENT_OTHER","Scope","var","lexical","functions","ScopeHandler","scopeStack","undefinedExports","undefinedPrivateNames","currentVarScopeFlags","currentThisScopeFlags","treatFunctionsAsVarInScope","currentScope","createScope","scope","bindingType","checkRedeclarationInScope","add","maybeExportDefined","delete","isRedeclaredInScope","values","topLevelScope","FlowScope","declareFunctions","FlowScopeHandler","State","curLine","potentialArrowAt","noArrowAt","noArrowParamsConversionAt","maybeInArrowParameters","inType","noAnonFunctionType","hasFlowComment","isAmbientContext","inAbstractClass","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","canStartJSXElement","containsEsc","strictErrors","tokensLength","strictMode","sourceType","startLine","startColumn","skipArrays","val","Array","isArray","_isDigit","isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","bin","oct","dec","Token","Tokenizer","tokens","init","checkKeywordEscapes","pushToken","nextToken","curContext","old","createLookaheadState","curr","nextTokenStartSince","nextTokenStart","cp","trail","clear","skipSpace","curPosition","finishToken","getTokenFromCode","codePointAtPos","indexOf","startSkip","ch","spaceStart","loop","skipBlockComment","addComment","attachComment","skipLineComment","CommentWhitespace","prevType","readToken_interpreter","nextPos","expectPlugin","readWord1","finishOp","readNumber","width","size","next2","readToken_dot","readToken_question","readTemplateToken","readRadixNumber","readString","readToken_slash","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_lt","readToken_gt","readToken_eq_excl","readToken_numberSign","readWord","fromCodePoint","str","escaped","inClass","content","mods","char","includes","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","invalid","total","Infinity","prev","Number","isNaN","isBigInt","readInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","parseInt","parseFloat","throwOnInvalid","codePos","readHexChar","quote","out","chunkStart","readEscapedChar","unexpected","containsInvalid","inTemplate","readCodePoint","substr","octalStr","octal","n","firstCode","escStart","identifierCheck","esc","ClassScope","privateNames","loneAccessors","ClassScopeHandler","stack","oldClassScope","from","elementType","redefined","accessor","oldStatic","newStatic","oldKind","newKind","classScope","kExpression","kMaybeArrowParameterDeclaration","kMaybeAsyncArrowParameterDeclaration","kParameterDeclaration","ExpressionScope","ArrowHeadParsingScope","iterator","ExpressionScopeHandler","isCertainlyParameterDeclaration","canBeArrowParameterDeclaration","recordDeclarationError","iterateErrors","clearDeclarationError","newParameterDeclarationScope","newArrowHeadScope","newAsyncArrowScope","newExpressionScope","PARAM","PARAM_YIELD","PARAM_AWAIT","PARAM_RETURN","PARAM_IN","ProductionParameterHandler","stacks","currentFlags","functionFlags","UtilParser","nameStart","nameEnd","nextCh","isUnparsedContextual","isContextual","eatContextual","hasPrecedingLineBreak","eat","canInsertSemicolon","allowAsi","isLineTerminator","messageOrType","pluginConfigs","c","missingPlugin","getPluginNamesFromConfigs","JSON","stringify","some","join","fn","oldState","clone","abortSignal","failState","thrown","aborted","andThrow","shorthandAssign","doubleProto","optionalParameters","hasErrors","isPrivateName","property","oldLabels","oldExportedIdentifiers","exportedIdentifiers","oldInModule","oldScope","getScopeHandler","bind","oldProdParam","prodParam","oldExpressionScope","expressionScope","paramFlags","enter","ExpressionErrors","Node","parser","ranges","range","NodePrototype","prototype","__clone","newNode","clonePlaceholder","cloneIdentifier","cloned","create","expectedNode","cloneStringLiteral","NodeUtils","processComment","locationNode","resetStartLocation","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","PatternIsOptional","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","isEsModuleType","bodyElement","declaration","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","partition","list","list1","list2","FLOW_PRAGMA_REGEX","flow","flowPragma","matches","Error","tok","oldInType","expect","flowParseType","moduloPos","expectContextual","parseExpression","predicate","flowParsePredicate","flowParseInterfaceish","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","this","flowParseTypeAndPredicateInitialiser","returnType","typeAnnotation","resetEndLocation","semicolon","declareName","insideModule","flowParseDeclareClass","flowParseDeclareFunction","flowParseDeclareVariable","flowParseDeclareModuleExports","flowParseDeclareModule","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","parseExprAtom","bodyNode","parseImport","flowParseDeclare","exit","hasModuleExport","default","isLet","suggestion","parseExport","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","liberal","checkReservedType","right","flowParseTypeInitialiser","declare","supertype","impltype","requireDefault","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","flowParseTypeParameter","oldNoAnonFunctionType","flowParseTypeOrImplicitInstantiation","isStatic","static","lookahead","flowParseObjectPropertyKey","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","valueNode","callProperties","indexers","internalSlots","endDelim","exact","inexact","protoStart","inexactStart","flowParseObjectTypeInternalSlot","flowParseObjectTypeIndexer","flowParseObjectTypeCallProperty","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","isInexactToken","argument","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParsePrimaryType","first","lh","isThis","checkNotUnderscore","flowParseGenericType","isGroupedType","flowParseTupleType","reinterpretTypeAsFunctionTypeParam","parseLiteralAtNode","flowParseTypeofType","flowParseInterfaceType","flowIdentToTypeAnnotation","seenOptionalIndexedAccess","objectType","indexType","flowParsePrefixType","flowParsePostfixType","param","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","allowExpressionBody","forwardNoArrowParamsConversionAt","topLevel","flowParseInterface","shouldParseEnums","flowParseEnumDeclaration","isValidDirective","expr","lookaheadCharCode","setOptionalParametersError","originalNoArrowAt","tryParseConditionalConsequent","consequent","failed","getArrowLikeExpressions","valid","alternate","parseMaybeAssign","parseMaybeAssignAllowIn","disallowInvalid","arrows","finishArrowValidation","every","_node$extra","toAssignableList","trailingComma","parse","result","typeCastNode","decl","declarationNode","parseExportSpecifiers","parseExportFrom","hasNamespace","isStatement","optionalId","member","parseClassMemberFromModifier","fullWord","isIterator","readIterator","typeCastToParameter","exprList","trailingCommaPos","isParenthesizedExpr","_expr$extra","close","canBePattern","isTuple","toReferencedList","isThisParam","superTypeParameters","implemented","getObjectOrClassMethodParams","left","specifier","contextDescription","local","checkLVal","importedIsString","isInTypeOnlyImport","isMaybeTypeOnly","firstIdent","imported","specifierTypeKind","isLookaheadContextual","as_ident","specifierIsTypeImport","checkReservedWord","allowModifiers","call","afterLeftParse","_jsx","jsx","tryParse","currentContext","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","async","allowDuplicates","isArrowFunction","canBeArrow","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","finishCallExpression","shouldParseTypes","flowParseTypeParameterInstantiationCallOrNew","targs","parseFunctionParams","parseArrow","parseArrowExpression","file","program","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","ch2","ch3","enumName","memberName","toUpperCase","suppliedType","explicitType","endOfInit","literal","parseNumericLiteral","parseStringLiteral","parseBooleanLiteral","flowEnumMemberInit","expectedType","flowEnumErrorInvalidMemberInitializer","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","flowEnumMemberRaw","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","flowEnumCheckExplicitTypeMismatch","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorNumberMemberNotInitialized","initializedMembers","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumErrorInvalidExplicitType","nameLoc","flowEnumParseExplicitType","flowEnumMembers","flowEnumStringMembers","empty","boolsLen","numsLen","strsLen","defaultedLen","flowEnumErrorInconsistentMemberValues","flowEnumBody","afterNext","entities","quot","amp","apos","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","MissingClosingTagFragment","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","object","getQualifiedJSXName","namespace","jsxReadEntity","jsxReadNewLine","normalizeCRLF","count","entity","jsxParseIdentifier","jsxParseNamespacedName","setContext","jsxParseExpressionContainer","previousContext","jsxParseEmptyExpression","jsxParseAttributeValue","jsxParseElementName","jsxParseOpeningElementAfterName","jsxParseAttribute","selfClosing","children","openingElement","jsxParseOpeningElementAt","closingElement","contents","jsxParseClosingElementAt","jsxParseElementAt","jsxParseSpreadChild","openingFragment","closingFragment","newContext","jsxParseElement","replaceToken","jsxReadToken","jsxReadWord","jsxReadString","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","nonNull","x","assert","TSErrors","AbstractMethodHasImplementation","AbstractPropertyHasInitializer","AccesorCannotDeclareThisParameter","AccesorCannotHaveTypeParameters","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareAccessor","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IncompatibleModifiers","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasOverride","IndexSignatureHasStatic","InvalidModifierOnTypeMember","InvalidModifiersOrder","InvalidTupleMemberLabel","MissingInterfaceName","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","OverrideNotInSubClass","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","ReservedArrowTypeParam","ReservedTypeAssertion","SetAccesorCannotHaveOptionalParameter","SetAccesorCannotHaveRestParameter","SetAccesorCannotHaveReturnType","StaticBlockCannotHaveModifier","TypeAnnotationAfterAssign","TypeImportCannotSpecifyDefaultAndNamed","TypeModifierIsUsedInTypeExports","TypeModifierIsUsedInTypeImports","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","keywordTypeFromName","tsIsAccessModifier","modifier","typescript","isLiteralPropertyName","tsTokenCanFollowModifier","allowedModifiers","stopOnStartOfClassStaticBlock","tsIsStartOfStaticBlocks","tsTryParse","tsNextTokenCanFollowModifier","modified","disallowedModifiers","enforceOrder","before","after","incompatible","mod1","mod2","tsParseModifier","accessibility","hasOwnProperty","parseElement","tsIsListTerminator","refTrailingCommaPos","tsParseDelimitedListWorker","expectSuccess","element","bracket","skipFirstToken","tsParseDelimitedList","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","typeName","lhs","parameterName","tsParseTypeAnnotation","asserts","exprName","tsParseImportType","tsParseTypeParameterName","constraint","tsEatThenParseType","tsParseTypeParameters","tsParseBracketedList","tsParseTypeParameter","addExtra","tsParseTypeReference","returnToken","signature","returnTokenRequired","tsTryParseTypeParameters","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsFillSignature","tsParseTypeMemberSemicolon","tsLookAhead","tsIsUnambiguouslyIndexSignature","tsTryParseTypeAnnotation","readonly","nodeAny","firstParameter","tsParseSignatureMember","createIdentifier","tsParsePropertyOrMethodSignature","tsParseModifiers","idx","tsTryParseIndexSignature","parsePropertyName","tsParseObjectTypeMembers","tsParseList","tsParseTypeMember","tsIsIdentifier","tsExpectThenParseType","tsParseMappedTypeParameter","nameType","tsParseType","tsTryParseType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","_labeledElements","isLabeled","labeled","labeledNode","optionalTypeNode","restNode","abstract","parseTemplate","thisKeyword","tsParseThisTypeNode","tsParseThisTypePredicate","tsParseLiteralTypeNode","parseMaybeUnary","tsParseThisTypeOrThisTypePredicate","tsParseTypeQuery","tsIsStartOfMappedType","tsParseMappedType","tsParseTypeLiteral","tsParseTupleType","tsParseParenthesizedType","tsParseTemplateLiteralType","nodeType","tsParseNonArrayType","operator","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","isTypeOperator","tsParseTypeOperator","tsParseInferType","tsParseArrayTypeOrHigher","parseConstituentType","hasLeadingOperator","tsParseUnionOrIntersectionType","tsParseIntersectionTypeOrHigher","tsIsUnambiguouslyStartOfFunctionType","braceStackCounter","tsSkipParameterStart","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsIsStartOfFunctionType","tsParseFunctionOrConstructorType","isAbstractConstructorSignature","tsParseUnionTypeOrHigher","tsTryNextParseConstantContext","tsNextThenParseType","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseHeritageClause","cb","oldContext","tsDoThenParseType","initializer","tsParseEnumMember","parseBlockOrModuleBlockBody","nested","inner","tsParseModuleOrNamespaceDeclaration","tsParseModuleBlock","global","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","nany","starttype","tsInAmbientContext","parseFunctionStatement","parseClass","tsParseEnumDeclaration","parseVarStatement","tsParseAmbientExternalModuleDeclaration","tsParseDeclaration","tsTryParseDeclare","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","hasFollowingLineBreak","oldMaybeInArrowParameters","tsTryParseAndCatch","tsTryParseTypeOrTypePredicateAnnotation","tsInNoContext","tsIsDeclarationStart","decorators","override","parseMaybeDefault","parseAssignableListItemTypes","elt","pp","parameter","bodilessType","items","isInParens","tsCheckForInvalidTypeCasts","nonNullExpression","isOptionalCall","missingParenErrorPos","atPossibleAsyncArrow","asyncArrowFn","tsTryParseGenericAsyncArrowFunction","parseTaggedTemplateExpression","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","parseExprOp","checkKeywords","ahead","tsParseImportEqualsDeclaration","importNode","isAbstractClass","cls","interfaceNode","modifiers","callParseClassMemberWithIsStatic","tsHasSomeModifiers","parseClassStaticBlock","parseClassMemberWithIsStatic","hadSuperClass","methodOrProp","tsParseExpressionStatement","isDeclare","shouldParseExportDeclaration","tsTryParseExportDeclaration","definite","parseClassPropertyAnnotation","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","reportReservedArrowTypeParam","tsParseTypeAssertion","toAssignableParenthesizedExpression","_expr$extra2","baseCount","firstParam","hasContextParam","oldIsAmbientContext","oldInAbstractClass","hasBody","shouldParseAsAmbientContext","isString","isInTypeExport","parseTypeOnlyImportExportSpecifier","isImport","isInTypeOnlyImportExport","leftOfAsKey","rightOfAsKey","leftOfAs","rightOfAs","hasTypeSpecifier","canParseAsKeyword","firstAs","secondAs","kindKey","parseModuleExportName","PlaceHolderErrors","ClassNameIsRequired","placeholders","assertNoSpace","finishPlaceholder","isFinished","parsePlaceholder","parseStatement","takeDecorators","oldStrict","parseClassId","parseClassSuper","parseClassBody","startsWith","filter","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","v8intrinsic","v8IntrinsicStart","parseIdentifierName","identifier","parseV8Intrinsic","expectedConfig","expectedName","expectedOptions","expectedKeys","expectedOptionsIsEmpty","p","option","find","PIPELINE_PROPOSALS","TOPIC_TOKENS","RECORD_AND_TUPLE_SYNTAX_TYPES","validatePlugins","decoratorsBeforeExport","proposal","proposalList","tupleSyntaxIsHash","syntaxType","topicToken","tokenList","moduleAttributesVerionPluginOption","missingPlugins","mixinPlugins","mixinPluginNames","defaultOptions","sourceFilename","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","createParenthesizedExpressions","getOptions","opts","unwrapParenthesizedExpression","LValParser","_node$extra3","recordParenthesizedIdentifierError","last","_node$extra2","isLast","toAssignableObjectExpressionProp","raiseRestNotLast","checkToRestConversion","arg","raiseTrailingCommaAfterRest","toReferencedListDeep","refNeedsArrowPos","parseBindingAtom","parseObjectLike","closeCharCode","allowEmpty","elts","parseRestBinding","checkCommaAfterRest","parseDecorator","parseAssignableListItem","parseBindingRestProperty","parseObjPropValue","_startLoc","_startPos","_left","checkClashes","disallowLetBinding","strictModeChanged","isObjectMethod","elem","invalidHackPipeBodies","ExpressionParser","isRecord","protoRef","used","enterInitialScopes","finalizeRemainingComments","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","resultError","_resultError$pos","hasYield","parseYield","ownExpressionErrors","parseMaybeConditional","checkExpressionErrors","parseExprOps","shouldExitDescending","parseConditional","parsePrivateName","parseMaybeUnaryOrPrivate","getPrivateNameSV","hasIn","usePrivateName","op","prec","checkPipelineAtInfixOperator","logical","coalesce","hasAwait","parseExprOpRightExpr","nextOp","withTopicBindingContext","parseHackPipeBody","parseSmartPipelineBodyInStyle","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","_body$extra","topicReferenceWasUsedInCurrentContext","sawUnary","isAwait","isAwaitAllowed","parseAwait","checkExponentialAfterUnary","update","isDelete","hasPropertyAsPrivateName","parseUpdate","isAmbiguousAwait","raiseOverwrite","parseExprSubscripts","parseSubscripts","maybeAsyncArrow","parseSubscript","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseNoCallExpr","shouldParseAsyncArrow","validateAsPattern","parseAsyncArrowFromCallExpression","toReferencedArguments","tag","quasi","dynamicImport","allowPlaceholder","nodeForExtra","oldInFSharpPipelineDirectBody","parseExprListItem","_call$extra","resetPreviousNodeTrailingComments","parseSuper","parseImportMetaProperty","parseDo","readRegexp","parseRegExpLiteral","parseBigIntLiteral","parseDecimalLiteral","parseNullLiteral","parseParenAndDistinguishExpression","parseArrayLike","parseFunctionOrFunctionSent","parseDecorators","parseNewOrNewTarget","parseTopicReferenceThenEqualsSign","pipeProposal","parseTopicReference","lookaheadCh","codePointAt","expectOnePlugin","parseModuleExpression","parseFunction","parseAsyncArrowUnaryFunction","topicTokenType","topicTokenValue","tokenType","finishTopicReference","testTopicReferenceConfiguration","topicReferenceIsAllowedInCurrentContext","registerTopicReference","parseBlock","allowSuper","meta","parseMetaProperty","propertyName","innerStartPos","innerStartLoc","spreadStart","optionalCommaStart","spreadNodeStartPos","spreadNodeStartLoc","parseParenItem","innerEndPos","innerEndLoc","arrowNode","shouldParseArrow","takeSurroundingComments","parenExpression","metaProp","inNonArrowFunction","parseNew","isOptionalChain","parseNewArguments","parseExprList","isTagged","elemStart","isTail","endOffset","elemEnd","cooked","tail","curElt","parseTemplateElement","quasis","parseTemplateSubstitution","readTemplateContinuation","propHash","parseBindingProperty","parsePropertyDefinition","checkProto","parseSpread","parsePropertyNamePrefixOperator","maybeAsyncOrAccessorProp","keyName","_params","getGetterSetterExpectedParamCount","checkGetterSetterParams","parseObjectMethod","parseObjectProperty","privateKeyPos","generator","initFunction","parseFunctionBodyAndFinish","setArrowFunctionParameters","parseFunctionBody","isExpression","checkParams","hasStrictModeDirective","nonSimple","isSimpleParamList","errorPos","inStaticBlock","recordAsyncArrowParametersError","inClassAndNotInNonArrowFunction","reservedTest","inFunction","recordParameterInitializerError","delegating","delegate","childExpr","isSimpleReference","checkSmartPipeTopicBodyEarlyErrors","callback","outerContextTopicState","outerContextSoloAwaitState","prodParamToSet","prodParamToClear","ret","revertScopes","initializeScopes","parseProgram","loopLabel","switchLabel","FUNC_NO_FLAGS","FUNC_STATEMENT","FUNC_HANGING_STATEMENT","FUNC_NULLABLE_ID","loneSurrogate","keywordRelationalOperator","babel7CompatTokens","hashEndPos","hashEndLoc","backquoteEnd","backquoteEndLoc","startToken","templateValue","templateElementEnd","templateElementEndLoc","endToken","StatementParser","interpreter","parseInterpreterDirective","parseBlockBody","isLetKeyword","endCh","parseStatementContent","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","assertModuleNodeAllowed","isAsyncFunction","maybeName","parseLabeledStatement","parseExpressionStatement","allowExport","currentContextDecorators","decorator","canHaveLeadingDecorator","parseMaybeDecoratorArguments","isBreak","verifyBreakContinue","lab","withSmartMixTopicForbiddingContext","parseHeaderExpression","awaitAt","parseFor","startsWithLet","parseVar","declarations","parseForIn","startsWithAsync","isForOf","description","declarationPosition","hasReturn","discriminant","cases","cur","sawDefault","isCase","simple","block","handler","clause","parseCatchClauseParam","finalizer","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","parsedNonDirective","stmtToDirective","setStrict","isForIn","await","isFor","isTypescript","parseVarId","parseMaybeAssignDisallowIn","statement","isHangingStatement","requireId","parseFunctionId","registerFunctionStatementId","treatFunctionsAsVar","hadConstructor","parseClassMember","isClassMethod","pushClassMethod","isClassProperty","parseClassProperty","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","pushClassPrivateMethod","isNonstaticConstructor","isPrivate","maybeQuestionTokenStart","parsePostMemberNameModifiers","pushClassPrivateProperty","pushClassProperty","_member$decorators","parseClassPrivateProperty","declarePrivateName","declareClassPrivateMethodInScope","parseInitializer","hasDefault","maybeParseExportDefaultSpecifier","parseAfterDefault","hasStar","eatExportStar","maybeParseExportNamespaceSpecifier","parseAfterNamespace","isFromRequired","hasSpecifiers","maybeParseExportNamedSpecifiers","hasDeclaration","maybeParseExportDeclaration","checkExport","parseExportDefaultExpression","isExportDefaultSpecifier","isTypeExport","assertions","parseExportDeclaration","nextType","hasFrom","nextAfterFrom","maybeParseImportAssertions","checkNames","isDefault","isFrom","checkDuplicateExports","_declaration$extra","exportedName","checkLocalExport","nodes","parseExportSpecifier","surrogate","toString","maybeParseDefaultImportSpecifier","parseNext","maybeParseModuleAttributes","attrs","attrNames","parseAssertEntries","shouldParseDefaultImport","parseImportSpecifierLocal","importSpecifier","parseImportSpecifier","Parser","pluginsMap","parseTopLevel","pluginMap","_options","getParser","ast","moduleError","_unused2","getExpression","generateExportedTokenTypes","internalTokenTypes","tokTypes","getParserClass","parserClassCache","pluginsFromOptions","pluginList"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nconst skipWhiteSpaceInLine = /(?:[^\\S\\n\\r\\u2028\\u2029]|\\/\\/.*|\\/\\*.*?\\*\\/)*/y;\nconst skipWhiteSpaceToLineBreak = new RegExp(\"(?=(\" + skipWhiteSpaceInLine.source + \"))\\\\1\" + /(?=[\\n\\r\\u2028\\u2029]|\\/\\*(?!.*?\\*\\/)|$)/.source, \"y\");\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nclass Position {\n  constructor(line, col) {\n    this.line = void 0;\n    this.column = void 0;\n    this.line = line;\n    this.column = col;\n  }\n\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n\n}\nfunction getLineInfo(input, offset) {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\nfunction createPositionWithColumnOffset(position, columnOffset) {\n  const {\n    line,\n    column\n  } = position;\n  return new Position(line, column + columnOffset);\n}\n\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n\n  hasPlugin(pluginConfig) {\n    if (typeof pluginConfig === \"string\") {\n      return this.plugins.has(pluginConfig);\n    } else {\n      const [pluginName, pluginOptions] = pluginConfig;\n\n      if (!this.hasPlugin(pluginName)) {\n        return false;\n      }\n\n      const actualOptions = this.plugins.get(pluginName);\n\n      for (const key of Object.keys(pluginOptions)) {\n        if ((actualOptions == null ? void 0 : actualOptions[key]) !== pluginOptions[key]) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  getPluginOption(plugin, name) {\n    var _this$plugins$get;\n\n    return (_this$plugins$get = this.plugins.get(plugin)) == null ? void 0 : _this$plugins$get[name];\n  }\n\n}\n\nfunction setTrailingComments(node, comments) {\n  if (node.trailingComments === undefined) {\n    node.trailingComments = comments;\n  } else {\n    node.trailingComments.unshift(...comments);\n  }\n}\n\nfunction setLeadingComments(node, comments) {\n  if (node.leadingComments === undefined) {\n    node.leadingComments = comments;\n  } else {\n    node.leadingComments.unshift(...comments);\n  }\n}\n\nfunction setInnerComments(node, comments) {\n  if (node.innerComments === undefined) {\n    node.innerComments = comments;\n  } else {\n    node.innerComments.unshift(...comments);\n  }\n}\n\nfunction adjustInnerComments(node, elements, commentWS) {\n  let lastElement = null;\n  let i = elements.length;\n\n  while (lastElement === null && i > 0) {\n    lastElement = elements[--i];\n  }\n\n  if (lastElement === null || lastElement.start > commentWS.start) {\n    setInnerComments(node, commentWS.comments);\n  } else {\n    setTrailingComments(lastElement, commentWS.comments);\n  }\n}\n\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.comments.push(comment);\n  }\n\n  processComment(node) {\n    const {\n      commentStack\n    } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    const lastCommentWS = commentStack[i];\n\n    if (lastCommentWS.start === node.end) {\n      lastCommentWS.leadingNode = node;\n      i--;\n    }\n\n    const {\n      start: nodeStart\n    } = node;\n\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n\n      if (commentEnd > nodeStart) {\n        commentWS.containingNode = node;\n        this.finalizeComment(commentWS);\n        commentStack.splice(i, 1);\n      } else {\n        if (commentEnd === nodeStart) {\n          commentWS.trailingNode = node;\n        }\n\n        break;\n      }\n    }\n  }\n\n  finalizeComment(commentWS) {\n    const {\n      comments\n    } = commentWS;\n\n    if (commentWS.leadingNode !== null || commentWS.trailingNode !== null) {\n      if (commentWS.leadingNode !== null) {\n        setTrailingComments(commentWS.leadingNode, comments);\n      }\n\n      if (commentWS.trailingNode !== null) {\n        setLeadingComments(commentWS.trailingNode, comments);\n      }\n    } else {\n      const {\n        containingNode: node,\n        start: commentStart\n      } = commentWS;\n\n      if (this.input.charCodeAt(commentStart - 1) === 44) {\n        switch (node.type) {\n          case \"ObjectExpression\":\n          case \"ObjectPattern\":\n          case \"RecordExpression\":\n            adjustInnerComments(node, node.properties, commentWS);\n            break;\n\n          case \"CallExpression\":\n          case \"OptionalCallExpression\":\n            adjustInnerComments(node, node.arguments, commentWS);\n            break;\n\n          case \"FunctionDeclaration\":\n          case \"FunctionExpression\":\n          case \"ArrowFunctionExpression\":\n          case \"ObjectMethod\":\n          case \"ClassMethod\":\n          case \"ClassPrivateMethod\":\n            adjustInnerComments(node, node.params, commentWS);\n            break;\n\n          case \"ArrayExpression\":\n          case \"ArrayPattern\":\n          case \"TupleExpression\":\n            adjustInnerComments(node, node.elements, commentWS);\n            break;\n\n          case \"ExportNamedDeclaration\":\n          case \"ImportDeclaration\":\n            adjustInnerComments(node, node.specifiers, commentWS);\n            break;\n\n          default:\n            {\n              setInnerComments(node, comments);\n            }\n        }\n      } else {\n        setInnerComments(node, comments);\n      }\n    }\n  }\n\n  finalizeRemainingComments() {\n    const {\n      commentStack\n    } = this.state;\n\n    for (let i = commentStack.length - 1; i >= 0; i--) {\n      this.finalizeComment(commentStack[i]);\n    }\n\n    this.state.commentStack = [];\n  }\n\n  resetPreviousNodeTrailingComments(node) {\n    const {\n      commentStack\n    } = this.state;\n    const {\n      length\n    } = commentStack;\n    if (length === 0) return;\n    const commentWS = commentStack[length - 1];\n\n    if (commentWS.leadingNode === node) {\n      commentWS.leadingNode = null;\n    }\n  }\n\n  takeSurroundingComments(node, start, end) {\n    const {\n      commentStack\n    } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      const commentStart = commentWS.start;\n\n      if (commentStart === end) {\n        commentWS.leadingNode = node;\n      } else if (commentEnd === start) {\n        commentWS.trailingNode = node;\n      } else if (commentEnd < start) {\n        break;\n      }\n    }\n  }\n\n}\n\nconst ErrorCodes = Object.freeze({\n  SyntaxError: \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n});\n\nconst ErrorMessages = makeErrorTemplates({\n  AccessorIsGenerator: \"A %0ter cannot be a generator.\",\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter: \"'await' is not allowed in async function parameters.\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n  BadGetterArity: \"A 'get' accesor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accesor must have exactly one formal parameter.\",\n  BadSetterRestParameter: \"A 'set' accesor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: \"'%0' require an initialization value.\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'.\",\n  ForInOfLoopInitializer: \"'%0' loop variable declaration may not have an initializer.\",\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block.\",\n  IllegalBreakContinue: \"Unsyntactic %0.\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments.\",\n  ImportCallArity: \"`import()` requires exactly %0.\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidCoverInitializedName: \"Invalid shorthand property initializer.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: \"Expected number in radix %0.\",\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0.\",\n  InvalidIdentifier: \"Invalid identifier %0.\",\n  InvalidLhs: \"Invalid left-hand side in %0.\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0.\",\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'.\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined.\",\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: \"Label '%0' is already declared.\",\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes.',\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'.\",\n  ModuleExportUndefined: \"Export '%0' is not defined.\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar: \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor: \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PipeBodyIsTighter: \"Unexpected %0 after pipeline body; any %0 expression acting as Hack-style pipe body must be parenthesized due to its loose operator precedence.\",\n  PipeTopicRequiresHackPipes: 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PipeTopicUnbound: \"Topic reference is unbound; it must be inside a pipe body.\",\n  PipeTopicUnconfiguredToken: 'Invalid topic token %0. In order to use %0 as a topic reference, the pipelineOperator plugin must be configured with { \"proposal\": \"hack\", \"topicToken\": \"%0\" }.',\n  PipeTopicUnused: \"Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.\",\n  PipeUnparenthesizedBody: \"Hack-style pipe body cannot be an unparenthesized %0 expression; please wrap it in parentheses.\",\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression.\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression.\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference.\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding.\",\n  PrimaryTopicRequiresSmartPipeline: 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`).\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0.\",\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  StrictDelete: \"Deleting local variable in strict mode.\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode.\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode.\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block.\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n  StrictWith: \"'with' in strict mode.\",\n  SuperNotAllowed: \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'.\",\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget: \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Unexpected private name.\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'.\",\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: \"Unexpected token '%0'.\",\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1.\",\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper: \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  VarRedeclaration: \"Identifier '%0' has already been declared.\",\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0.\"\n}, ErrorCodes.SyntaxError);\nconst SourceTypeModuleErrorMessages = makeErrorTemplates({\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`\n}, ErrorCodes.SourceTypeModuleError);\n\nfunction keepReasonCodeCompat(reasonCode, syntaxPlugin) {\n  {\n    if (syntaxPlugin === \"flow\" && reasonCode === \"PatternIsOptional\") {\n      return \"OptionalBindingPattern\";\n    }\n  }\n  return reasonCode;\n}\n\nfunction makeErrorTemplates(messages, code, syntaxPlugin) {\n  const templates = {};\n  Object.keys(messages).forEach(reasonCode => {\n    templates[reasonCode] = Object.freeze({\n      code,\n      reasonCode: keepReasonCodeCompat(reasonCode, syntaxPlugin),\n      template: messages[reasonCode]\n    });\n  });\n  return Object.freeze(templates);\n}\nclass ParserError extends CommentsParser {\n  getLocationForPosition(pos) {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\n    return loc;\n  }\n\n  raise(pos, {\n    code,\n    reasonCode,\n    template\n  }, ...params) {\n    return this.raiseWithData(pos, {\n      code,\n      reasonCode\n    }, template, ...params);\n  }\n\n  raiseOverwrite(pos, {\n    code,\n    template\n  }, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = template.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n\n    if (this.options.errorRecovery) {\n      const errors = this.state.errors;\n\n      for (let i = errors.length - 1; i >= 0; i--) {\n        const error = errors[i];\n\n        if (error.pos === pos) {\n          return Object.assign(error, {\n            message\n          });\n        } else if (error.pos < pos) {\n          break;\n        }\n      }\n    }\n\n    return this._raise({\n      code,\n      loc,\n      pos\n    }, message);\n  }\n\n  raiseWithData(pos, data, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign({\n      loc,\n      pos\n    }, data), message);\n  }\n\n  _raise(errorContext, message) {\n    const err = new SyntaxError(message);\n    Object.assign(err, errorContext);\n\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n\n}\n\nvar estree = (superClass => class extends superClass {\n  parseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n\n  parseBigIntLiteral(value) {\n    let bigInt;\n\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n\n  parseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n\n  parseStringLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  parseNumericLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  parseNullLiteral() {\n    return this.estreeParseLiteral(null);\n  }\n\n  parseBooleanLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  directiveToStmt(directive) {\n    const directiveLiteral = directive.value;\n    const stmt = this.startNodeAt(directive.start, directive.loc.start);\n    const expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n    expression.value = directiveLiteral.extra.expressionValue;\n    expression.raw = directiveLiteral.extra.raw;\n    stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n    stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n    return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n  }\n\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) != null && _stmt$expression$extr.parenthesized);\n  }\n\n  parseBlockBody(node, ...args) {\n    super.parseBlockBody(node, ...args);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n\n    classBody.body.push(method);\n  }\n\n  parsePrivateName() {\n    const node = super.parsePrivateName();\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return node;\n      }\n    }\n    return this.convertPrivateNameToPrivateIdentifier(node);\n  }\n\n  convertPrivateNameToPrivateIdentifier(node) {\n    const name = super.getPrivateNameSV(node);\n    node = node;\n    delete node.id;\n    node.name = name;\n    node.type = \"PrivateIdentifier\";\n    return node;\n  }\n\n  isPrivateName(node) {\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return super.isPrivateName(node);\n      }\n    }\n    return node.type === \"PrivateIdentifier\";\n  }\n\n  getPrivateNameSV(node) {\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return super.getPrivateNameSV(node);\n      }\n    }\n    return node.name;\n  }\n\n  parseLiteral(value, type) {\n    const node = super.parseLiteral(value, type);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n\n    if (type === \"ClassPrivateMethod\") {\n      node.computed = false;\n    }\n\n    type = \"MethodDefinition\";\n    return this.finishNode(node, type);\n  }\n\n  parseClassProperty(...args) {\n    const propertyNode = super.parseClassProperty(...args);\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return propertyNode;\n      }\n    }\n    propertyNode.type = \"PropertyDefinition\";\n    return propertyNode;\n  }\n\n  parseClassPrivateProperty(...args) {\n    const propertyNode = super.parseClassPrivateProperty(...args);\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return propertyNode;\n      }\n    }\n    propertyNode.type = \"PropertyDefinition\";\n    propertyNode.computed = false;\n    return propertyNode;\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") node.kind = \"init\";\n      node.shorthand = false;\n    }\n\n    return node;\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n\n    return node;\n  }\n\n  isAssignable(node, isBinding) {\n    if (node != null && this.isObjectProperty(node)) {\n      return this.isAssignable(node.value, isBinding);\n    }\n\n    return super.isAssignable(node, isBinding);\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.toAssignable(node.value, isLHS);\n      return node;\n    }\n\n    return super.toAssignable(node, isLHS);\n  }\n\n  toAssignableObjectExpressionProp(prop, ...args) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\n    } else if (prop.method) {\n      this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\n    } else {\n      super.toAssignableObjectExpressionProp(prop, ...args);\n    }\n  }\n\n  finishCallExpression(node, optional) {\n    super.finishCallExpression(node, optional);\n\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n\n      if (this.hasPlugin(\"importAssertions\")) {\n        var _node$arguments$;\n\n        node.attributes = (_node$arguments$ = node.arguments[1]) != null ? _node$arguments$ : null;\n      }\n\n      delete node.arguments;\n      delete node.callee;\n    }\n\n    return node;\n  }\n\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n\n    super.toReferencedArguments(node);\n  }\n\n  parseExport(node) {\n    super.parseExport(node);\n\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n\n        break;\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n\n    return node;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n\n    return super.hasPropertyAsPrivateName(node);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"ChainExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n\n});\n\nclass TokContext {\n  constructor(token, preserveSpace) {\n    this.token = void 0;\n    this.preserveSpace = void 0;\n    this.token = token;\n    this.preserveSpace = !!preserveSpace;\n  }\n\n}\nconst types = {\n  brace: new TokContext(\"{\"),\n  j_oTag: new TokContext(\"<tag\"),\n  j_cTag: new TokContext(\"</tag\"),\n  j_expr: new TokContext(\"<tag>...</tag>\", true)\n};\n{\n  types.template = new TokContext(\"`\", true);\n}\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass ExportedTokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    {\n      this.updateContext = null;\n    }\n  }\n\n}\nconst keywords$1 = new Map();\n\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = createToken(name, options);\n  keywords$1.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return createToken(name, {\n    beforeExpr,\n    binop\n  });\n}\n\nlet tokenTypeCounter = -1;\nconst tokenTypes = [];\nconst tokenLabels = [];\nconst tokenBinops = [];\nconst tokenBeforeExprs = [];\nconst tokenStartsExprs = [];\nconst tokenPrefixes = [];\n\nfunction createToken(name, options = {}) {\n  var _options$binop, _options$beforeExpr, _options$startsExpr, _options$prefix;\n\n  ++tokenTypeCounter;\n  tokenLabels.push(name);\n  tokenBinops.push((_options$binop = options.binop) != null ? _options$binop : -1);\n  tokenBeforeExprs.push((_options$beforeExpr = options.beforeExpr) != null ? _options$beforeExpr : false);\n  tokenStartsExprs.push((_options$startsExpr = options.startsExpr) != null ? _options$startsExpr : false);\n  tokenPrefixes.push((_options$prefix = options.prefix) != null ? _options$prefix : false);\n  tokenTypes.push(new ExportedTokenType(name, options));\n  return tokenTypeCounter;\n}\n\nfunction createKeywordLike(name, options = {}) {\n  var _options$binop2, _options$beforeExpr2, _options$startsExpr2, _options$prefix2;\n\n  ++tokenTypeCounter;\n  keywords$1.set(name, tokenTypeCounter);\n  tokenLabels.push(name);\n  tokenBinops.push((_options$binop2 = options.binop) != null ? _options$binop2 : -1);\n  tokenBeforeExprs.push((_options$beforeExpr2 = options.beforeExpr) != null ? _options$beforeExpr2 : false);\n  tokenStartsExprs.push((_options$startsExpr2 = options.startsExpr) != null ? _options$startsExpr2 : false);\n  tokenPrefixes.push((_options$prefix2 = options.prefix) != null ? _options$prefix2 : false);\n  tokenTypes.push(new ExportedTokenType(\"name\", options));\n  return tokenTypeCounter;\n}\n\nconst tt = {\n  bracketL: createToken(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: createToken(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: createToken(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: createToken(\"]\"),\n  bracketBarR: createToken(\"|]\"),\n  braceL: createToken(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: createToken(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: createToken(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: createToken(\"}\", {\n    beforeExpr\n  }),\n  braceBarR: createToken(\"|}\"),\n  parenL: createToken(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: createToken(\")\"),\n  comma: createToken(\",\", {\n    beforeExpr\n  }),\n  semi: createToken(\";\", {\n    beforeExpr\n  }),\n  colon: createToken(\":\", {\n    beforeExpr\n  }),\n  doubleColon: createToken(\"::\", {\n    beforeExpr\n  }),\n  dot: createToken(\".\"),\n  question: createToken(\"?\", {\n    beforeExpr\n  }),\n  questionDot: createToken(\"?.\"),\n  arrow: createToken(\"=>\", {\n    beforeExpr\n  }),\n  template: createToken(\"template\"),\n  ellipsis: createToken(\"...\", {\n    beforeExpr\n  }),\n  backQuote: createToken(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: createToken(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  templateTail: createToken(\"...`\", {\n    startsExpr\n  }),\n  templateNonTail: createToken(\"...${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: createToken(\"@\"),\n  hash: createToken(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: createToken(\"#!...\"),\n  eq: createToken(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: createToken(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  slashAssign: createToken(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  xorAssign: createToken(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  moduloAssign: createToken(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: createToken(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: createToken(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: createToken(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  lt: createBinop(\"</>/<=/>=\", 7),\n  gt: createBinop(\"</>/<=/>=\", 7),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: createToken(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: createToken(\"%\", {\n    binop: 10,\n    startsExpr\n  }),\n  star: createToken(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: createToken(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _as: createKeywordLike(\"as\", {\n    startsExpr\n  }),\n  _assert: createKeywordLike(\"assert\", {\n    startsExpr\n  }),\n  _async: createKeywordLike(\"async\", {\n    startsExpr\n  }),\n  _await: createKeywordLike(\"await\", {\n    startsExpr\n  }),\n  _from: createKeywordLike(\"from\", {\n    startsExpr\n  }),\n  _get: createKeywordLike(\"get\", {\n    startsExpr\n  }),\n  _let: createKeywordLike(\"let\", {\n    startsExpr\n  }),\n  _meta: createKeywordLike(\"meta\", {\n    startsExpr\n  }),\n  _of: createKeywordLike(\"of\", {\n    startsExpr\n  }),\n  _sent: createKeywordLike(\"sent\", {\n    startsExpr\n  }),\n  _set: createKeywordLike(\"set\", {\n    startsExpr\n  }),\n  _static: createKeywordLike(\"static\", {\n    startsExpr\n  }),\n  _yield: createKeywordLike(\"yield\", {\n    startsExpr\n  }),\n  _asserts: createKeywordLike(\"asserts\", {\n    startsExpr\n  }),\n  _checks: createKeywordLike(\"checks\", {\n    startsExpr\n  }),\n  _exports: createKeywordLike(\"exports\", {\n    startsExpr\n  }),\n  _global: createKeywordLike(\"global\", {\n    startsExpr\n  }),\n  _implements: createKeywordLike(\"implements\", {\n    startsExpr\n  }),\n  _intrinsic: createKeywordLike(\"intrinsic\", {\n    startsExpr\n  }),\n  _infer: createKeywordLike(\"infer\", {\n    startsExpr\n  }),\n  _is: createKeywordLike(\"is\", {\n    startsExpr\n  }),\n  _mixins: createKeywordLike(\"mixins\", {\n    startsExpr\n  }),\n  _proto: createKeywordLike(\"proto\", {\n    startsExpr\n  }),\n  _require: createKeywordLike(\"require\", {\n    startsExpr\n  }),\n  _keyof: createKeywordLike(\"keyof\", {\n    startsExpr\n  }),\n  _readonly: createKeywordLike(\"readonly\", {\n    startsExpr\n  }),\n  _unique: createKeywordLike(\"unique\", {\n    startsExpr\n  }),\n  _abstract: createKeywordLike(\"abstract\", {\n    startsExpr\n  }),\n  _declare: createKeywordLike(\"declare\", {\n    startsExpr\n  }),\n  _enum: createKeywordLike(\"enum\", {\n    startsExpr\n  }),\n  _module: createKeywordLike(\"module\", {\n    startsExpr\n  }),\n  _namespace: createKeywordLike(\"namespace\", {\n    startsExpr\n  }),\n  _interface: createKeywordLike(\"interface\", {\n    startsExpr\n  }),\n  _type: createKeywordLike(\"type\", {\n    startsExpr\n  }),\n  _opaque: createKeywordLike(\"opaque\", {\n    startsExpr\n  }),\n  name: createToken(\"name\", {\n    startsExpr\n  }),\n  string: createToken(\"string\", {\n    startsExpr\n  }),\n  num: createToken(\"num\", {\n    startsExpr\n  }),\n  bigint: createToken(\"bigint\", {\n    startsExpr\n  }),\n  decimal: createToken(\"decimal\", {\n    startsExpr\n  }),\n  regexp: createToken(\"regexp\", {\n    startsExpr\n  }),\n  privateName: createToken(\"#name\", {\n    startsExpr\n  }),\n  eof: createToken(\"eof\"),\n  jsxName: createToken(\"jsxName\"),\n  jsxText: createToken(\"jsxText\", {\n    beforeExpr: true\n  }),\n  jsxTagStart: createToken(\"jsxTagStart\", {\n    startsExpr: true\n  }),\n  jsxTagEnd: createToken(\"jsxTagEnd\"),\n  placeholder: createToken(\"%%\", {\n    startsExpr: true\n  })\n};\nfunction tokenIsIdentifier(token) {\n  return token >= 89 && token <= 124;\n}\nfunction tokenKeywordOrIdentifierIsKeyword(token) {\n  return token <= 88;\n}\nfunction tokenIsKeywordOrIdentifier(token) {\n  return token >= 54 && token <= 124;\n}\nfunction tokenIsLiteralPropertyName(token) {\n  return token >= 54 && token <= 128;\n}\nfunction tokenComesBeforeExpression(token) {\n  return tokenBeforeExprs[token];\n}\nfunction tokenCanStartExpression(token) {\n  return tokenStartsExprs[token];\n}\nfunction tokenIsAssignment(token) {\n  return token >= 29 && token <= 33;\n}\nfunction tokenIsFlowInterfaceOrTypeOrOpaque(token) {\n  return token >= 121 && token <= 123;\n}\nfunction tokenIsLoop(token) {\n  return token >= 86 && token <= 88;\n}\nfunction tokenIsKeyword(token) {\n  return token >= 54 && token <= 88;\n}\nfunction tokenIsOperator(token) {\n  return token >= 37 && token <= 55;\n}\nfunction tokenIsPostfix(token) {\n  return token === 34;\n}\nfunction tokenIsPrefix(token) {\n  return tokenPrefixes[token];\n}\nfunction tokenIsTSTypeOperator(token) {\n  return token >= 113 && token <= 115;\n}\nfunction tokenIsTSDeclarationStart(token) {\n  return token >= 116 && token <= 122;\n}\nfunction tokenLabelName(token) {\n  return tokenLabels[token];\n}\nfunction tokenOperatorPrecedence(token) {\n  return tokenBinops[token];\n}\nfunction tokenIsRightAssociative(token) {\n  return token === 53;\n}\nfunction tokenIsTemplate(token) {\n  return token >= 24 && token <= 25;\n}\nfunction getExportedToken(token) {\n  return tokenTypes[token];\n}\nfunction isTokenType(obj) {\n  return typeof obj === \"number\";\n}\n{\n  tokenTypes[8].updateContext = context => {\n    context.pop();\n  };\n\n  tokenTypes[5].updateContext = tokenTypes[7].updateContext = tokenTypes[23].updateContext = context => {\n    context.push(types.brace);\n  };\n\n  tokenTypes[22].updateContext = context => {\n    if (context[context.length - 1] === types.template) {\n      context.pop();\n    } else {\n      context.push(types.template);\n    }\n  };\n\n  tokenTypes[134].updateContext = context => {\n    context.push(types.j_expr, types.j_oTag);\n  };\n}\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 68, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1070, 4050, 582, 8634, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8936, 3, 2, 6, 2, 1, 2, 290, 46, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 482, 44, 11, 6, 17, 0, 322, 29, 19, 43, 1269, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4152, 8, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 87, 9, 39, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4706, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 357, 0, 62, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords.has(word);\n}\n\nfunction isIteratorStart(current, next) {\n  return current === 64 && next === 64;\n}\nconst reservedWordLikeSet = new Set([\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\", \"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\", \"eval\", \"arguments\", \"enum\", \"await\"]);\nfunction canBeReservedWord(word) {\n  return reservedWordLikeSet.has(word);\n}\n\nconst SCOPE_OTHER = 0b000000000,\n      SCOPE_PROGRAM = 0b000000001,\n      SCOPE_FUNCTION = 0b000000010,\n      SCOPE_ARROW = 0b000000100,\n      SCOPE_SIMPLE_CATCH = 0b000001000,\n      SCOPE_SUPER = 0b000010000,\n      SCOPE_DIRECT_SUPER = 0b000100000,\n      SCOPE_CLASS = 0b001000000,\n      SCOPE_STATIC_BLOCK = 0b010000000,\n      SCOPE_TS_MODULE = 0b100000000,\n      SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b000000000001,\n      BIND_KIND_TYPE = 0b000000000010,\n      BIND_SCOPE_VAR = 0b000000000100,\n      BIND_SCOPE_LEXICAL = 0b000000001000,\n      BIND_SCOPE_FUNCTION = 0b000000010000,\n      BIND_FLAGS_NONE = 0b000001000000,\n      BIND_FLAGS_CLASS = 0b000010000000,\n      BIND_FLAGS_TS_ENUM = 0b000100000000,\n      BIND_FLAGS_TS_CONST_ENUM = 0b001000000000,\n      BIND_FLAGS_TS_EXPORT_ONLY = 0b010000000000,\n      BIND_FLAGS_FLOW_DECLARE_FN = 0b100000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n      BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n      BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n      BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n      BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n      BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n      BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n      BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n      BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n      CLASS_ELEMENT_KIND_GETTER = 0b010,\n      CLASS_ELEMENT_KIND_SETTER = 0b001,\n      CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n      CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n      CLASS_ELEMENT_OTHER = 0;\n\nclass Scope {\n  constructor(flags) {\n    this.var = new Set();\n    this.lexical = new Set();\n    this.functions = new Set();\n    this.flags = flags;\n  }\n\n}\nclass ScopeHandler {\n  constructor(raise, inModule) {\n    this.scopeStack = [];\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n\n  get allowSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_SUPER) > 0;\n  }\n\n  get allowDirectSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_DIRECT_SUPER) > 0;\n  }\n\n  get inClass() {\n    return (this.currentThisScopeFlags() & SCOPE_CLASS) > 0;\n  }\n\n  get inClassAndNotInNonArrowFunction() {\n    const flags = this.currentThisScopeFlags();\n    return (flags & SCOPE_CLASS) > 0 && (flags & SCOPE_FUNCTION) === 0;\n  }\n\n  get inStaticBlock() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & SCOPE_STATIC_BLOCK) {\n        return true;\n      }\n\n      if (flags & (SCOPE_VAR | SCOPE_CLASS)) {\n        return false;\n      }\n    }\n  }\n\n  get inNonArrowFunction() {\n    return (this.currentThisScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags) {\n    return new Scope(flags);\n  }\n\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n\n  declareName(name, bindingType, pos) {\n    let scope = this.currentScope();\n\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.add(name);\n      } else {\n        scope.lexical.add(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.add(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope, name) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(scope, name, bindingType, pos) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, ErrorMessages.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.has(name) || scope.functions.has(name) || scope.var.has(name);\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.has(name) || !this.treatFunctionsAsVarInScope(scope) && scope.var.has(name);\n    }\n\n    return scope.lexical.has(name) && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical.values().next().value === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.has(name);\n  }\n\n  checkLocalExport(id) {\n    const {\n      name\n    } = id;\n    const topLevelScope = this.scopeStack[0];\n\n    if (!topLevelScope.lexical.has(name) && !topLevelScope.var.has(name) && !topLevelScope.functions.has(name)) {\n      this.undefinedExports.set(name, id.start);\n    }\n  }\n\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & SCOPE_VAR) {\n        return flags;\n      }\n    }\n  }\n\n  currentThisScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & (SCOPE_VAR | SCOPE_CLASS) && !(flags & SCOPE_ARROW)) {\n        return flags;\n      }\n    }\n  }\n\n}\n\nclass FlowScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.declareFunctions = new Set();\n  }\n\n}\n\nclass FlowScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new FlowScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return !scope.declareFunctions.has(name) && (scope.lexical.has(name) || scope.functions.has(name));\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id) {\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.lineStart = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.hasFlowComment = false;\n    this.isAmbientContext = false;\n    this.inAbstractClass = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.comments = [];\n    this.commentStack = [];\n    this.pos = 0;\n    this.type = 131;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.lastTokEnd = 0;\n    this.context = [types.brace];\n    this.canStartJSXElement = true;\n    this.containsEsc = false;\n    this.strictErrors = new Map();\n    this.tokensLength = 0;\n  }\n\n  init({\n    strictMode,\n    sourceType,\n    startLine,\n    startColumn\n  }) {\n    this.strict = strictMode === false ? false : strictMode === true ? true : sourceType === \"module\";\n    this.curLine = startLine;\n    this.lineStart = -startColumn;\n    this.startLoc = this.endLoc = new Position(startLine, startColumn);\n  }\n\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n\n    return state;\n  }\n\n}\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst VALID_REGEX_FLAGS = new Set([103, 109, 115, 105, 121, 117, 100]);\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n  hex: [46, 88, 95, 120]\n};\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [48, 49];\nallowedNumericSeparatorSiblings.oct = [...allowedNumericSeparatorSiblings.bin, 50, 51, 52, 53, 54, 55];\nallowedNumericSeparatorSiblings.dec = [...allowedNumericSeparatorSiblings.oct, 56, 57];\nallowedNumericSeparatorSiblings.hex = [...allowedNumericSeparatorSiblings.dec, 65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102];\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n}\nclass Tokenizer extends ParserError {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  next() {\n    this.checkKeywordEscapes();\n\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  match(type) {\n    return this.state.type === type;\n  }\n\n  createLookaheadState(state) {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      lastTokEnd: state.end,\n      context: [this.curContext()],\n      inType: state.inType\n    };\n  }\n\n  lookahead() {\n    const old = this.state;\n    this.state = this.createLookaheadState(old);\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    return skipWhiteSpace.test(this.input) ? skipWhiteSpace.lastIndex : pos;\n  }\n\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  codePointAtPos(pos) {\n    let cp = this.input.charCodeAt(pos);\n\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n\n    return cp;\n  }\n\n  setStrict(strict) {\n    this.state.strict = strict;\n\n    if (strict) {\n      this.state.strictErrors.forEach((message, pos) => this.raise(pos, message));\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  nextToken() {\n    this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n\n    if (this.state.pos >= this.length) {\n      this.finishToken(131);\n      return;\n    }\n\n    this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n  }\n\n  skipBlockComment() {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", start + 2);\n    if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start + 2;\n\n    while (lineBreakG.test(this.input) && lineBreakG.lastIndex <= end) {\n      ++this.state.curLine;\n      this.state.lineStart = lineBreakG.lastIndex;\n    }\n\n    if (this.isLookahead) return;\n    const comment = {\n      type: \"CommentBlock\",\n      value: this.input.slice(start + 2, end),\n      start,\n      end: end + 2,\n      loc: new SourceLocation(startLoc, this.state.curPosition())\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    if (this.isLookahead) return;\n    const end = this.state.pos;\n    const value = this.input.slice(start + startSkip, end);\n    const comment = {\n      type: \"CommentLine\",\n      value,\n      start,\n      end,\n      loc: new SourceLocation(startLoc, this.state.curPosition())\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipSpace() {\n    const spaceStart = this.state.pos;\n    const comments = [];\n\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              {\n                const comment = this.skipBlockComment();\n\n                if (comment !== undefined) {\n                  this.addComment(comment);\n                  if (this.options.attachComment) comments.push(comment);\n                }\n\n                break;\n              }\n\n            case 47:\n              {\n                const comment = this.skipLineComment(2);\n\n                if (comment !== undefined) {\n                  this.addComment(comment);\n                  if (this.options.attachComment) comments.push(comment);\n                }\n\n                break;\n              }\n\n            default:\n              break loop;\n          }\n\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else if (ch === 45 && !this.inModule) {\n            const pos = this.state.pos;\n\n            if (this.input.charCodeAt(pos + 1) === 45 && this.input.charCodeAt(pos + 2) === 62 && (spaceStart === 0 || this.state.lineStart > spaceStart)) {\n              const comment = this.skipLineComment(3);\n\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else if (ch === 60 && !this.inModule) {\n            const pos = this.state.pos;\n\n            if (this.input.charCodeAt(pos + 1) === 33 && this.input.charCodeAt(pos + 2) === 45 && this.input.charCodeAt(pos + 3) === 45) {\n              const comment = this.skipLineComment(4);\n\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else {\n            break loop;\n          }\n\n      }\n    }\n\n    if (comments.length > 0) {\n      const end = this.state.pos;\n      const CommentWhitespace = {\n        start: spaceStart,\n        end,\n        comments,\n        leadingNode: null,\n        trailingNode: null,\n        containingNode: null\n      };\n      this.state.commentStack.push(CommentWhitespace);\n    }\n  }\n\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) {\n      this.state.endLoc = this.state.curPosition();\n      this.updateContext(prevType);\n    }\n  }\n\n  replaceToken(type) {\n    this.state.type = type;\n    this.updateContext();\n  }\n\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n\n    if (next >= 48 && next <= 57) {\n      throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\n    }\n\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\n      }\n\n      this.state.pos += 2;\n\n      if (next === 123) {\n        this.finishToken(7);\n      } else {\n        this.finishToken(1);\n      }\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(130, this.readWord1(next));\n    } else if (next === 92) {\n      ++this.state.pos;\n      this.finishToken(130, this.readWord1());\n    } else {\n      this.finishOp(27, 1);\n    }\n  }\n\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(21);\n    } else {\n      ++this.state.pos;\n      this.finishToken(16);\n    }\n  }\n\n  readToken_slash() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(31, 2);\n    } else {\n      this.finishOp(52, 1);\n    }\n  }\n\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(28, value);\n    return true;\n  }\n\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? 51 : 50;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = 53;\n    }\n\n    if (next === 61 && !this.state.inType) {\n      width++;\n      type = code === 37 ? 33 : 30;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(30, 3);\n      } else {\n        this.finishOp(code === 124 ? 39 : 40, 2);\n      }\n\n      return;\n    }\n\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(37, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.state.pos += 2;\n        this.finishToken(9);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.state.pos += 2;\n        this.finishToken(4);\n        return;\n      }\n    }\n\n    if (next === 61) {\n      this.finishOp(30, 2);\n      return;\n    }\n\n    this.finishOp(code === 124 ? 41 : 43, 1);\n  }\n\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61 && !this.state.inType) {\n      this.finishOp(32, 2);\n    } else {\n      this.finishOp(42, 1);\n    }\n  }\n\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      this.finishOp(34, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(30, 2);\n    } else {\n      this.finishOp(49, 1);\n    }\n  }\n\n  readToken_lt() {\n    const {\n      pos\n    } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n\n    if (next === 60) {\n      if (this.input.charCodeAt(pos + 2) === 61) {\n        this.finishOp(30, 3);\n        return;\n      }\n\n      this.finishOp(48, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(47, 2);\n      return;\n    }\n\n    this.finishOp(45, 1);\n  }\n\n  readToken_gt() {\n    const {\n      pos\n    } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n\n    if (next === 62) {\n      const size = this.input.charCodeAt(pos + 2) === 62 ? 3 : 2;\n\n      if (this.input.charCodeAt(pos + size) === 61) {\n        this.finishOp(30, size + 1);\n        return;\n      }\n\n      this.finishOp(48, size);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(47, 2);\n      return;\n    }\n\n    this.finishOp(46, 1);\n  }\n\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(44, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(19);\n      return;\n    }\n\n    this.finishOp(code === 61 ? 29 : 35, 1);\n  }\n\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(30, 3);\n      } else {\n        this.finishOp(38, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(18);\n    } else {\n      ++this.state.pos;\n      this.finishToken(17);\n    }\n  }\n\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n\n      case 40:\n        ++this.state.pos;\n        this.finishToken(10);\n        return;\n\n      case 41:\n        ++this.state.pos;\n        this.finishToken(11);\n        return;\n\n      case 59:\n        ++this.state.pos;\n        this.finishToken(13);\n        return;\n\n      case 44:\n        ++this.state.pos;\n        this.finishToken(12);\n        return;\n\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.state.pos += 2;\n          this.finishToken(2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(0);\n        }\n\n        return;\n\n      case 93:\n        ++this.state.pos;\n        this.finishToken(3);\n        return;\n\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.state.pos += 2;\n          this.finishToken(6);\n        } else {\n          ++this.state.pos;\n          this.finishToken(5);\n        }\n\n        return;\n\n      case 125:\n        ++this.state.pos;\n        this.finishToken(8);\n        return;\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(15, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(14);\n        }\n\n        return;\n\n      case 63:\n        this.readToken_question();\n        return;\n\n      case 96:\n        this.readTemplateToken();\n        return;\n\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n\n      case 47:\n        this.readToken_slash();\n        return;\n\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case 94:\n        this.readToken_caret();\n        return;\n\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n\n      case 60:\n        this.readToken_lt();\n        return;\n\n      case 62:\n        this.readToken_gt();\n        return;\n\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n\n      case 126:\n        this.finishOp(36, 1);\n        return;\n\n      case 64:\n        ++this.state.pos;\n        this.finishToken(26);\n        return;\n\n      case 35:\n        this.readToken_numberSign();\n        return;\n\n      case 92:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n\n    }\n\n    throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n  }\n\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp() {\n    const start = this.state.start + 1;\n    let escaped, inClass;\n    let {\n      pos\n    } = this.state;\n\n    for (;; ++pos) {\n      if (pos >= this.length) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      const ch = this.input.charCodeAt(pos);\n\n      if (isNewLine(ch)) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === 91) {\n          inClass = true;\n        } else if (ch === 93 && inClass) {\n          inClass = false;\n        } else if (ch === 47 && !inClass) {\n          break;\n        }\n\n        escaped = ch === 92;\n      }\n    }\n\n    const content = this.input.slice(start, pos);\n    ++pos;\n    let mods = \"\";\n\n    while (pos < this.length) {\n      const cp = this.codePointAtPos(pos);\n      const char = String.fromCharCode(cp);\n\n      if (VALID_REGEX_FLAGS.has(cp)) {\n        if (mods.includes(char)) {\n          this.raise(pos + 1, ErrorMessages.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(cp) || cp === 92) {\n        this.raise(pos + 1, ErrorMessages.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++pos;\n      mods += char;\n    }\n\n    this.state.pos = pos;\n    this.finishToken(129, {\n      pattern: content,\n      flags: mods\n    });\n  }\n\n  readInt(radix, len, forceLen, allowNumSeparator = true) {\n    const start = this.state.pos;\n    const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === 95) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n        }\n\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= 97) {\n        val = code - 97 + 10;\n      } else if (code >= 65) {\n        val = code - 65 + 10;\n      } else if (_isDigit(code)) {\n        val = code - 48;\n      } else {\n        val = Infinity;\n      }\n\n      if (val >= radix) {\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n\n    if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix) {\n    const start = this.state.pos;\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n\n    if (val == null) {\n      this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\n    }\n\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(start, ErrorMessages.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(127, str);\n      return;\n    }\n\n    this.finishToken(126, val);\n  }\n\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, ErrorMessages.InvalidNumber);\n    }\n\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);\n\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n        }\n      }\n\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n\n      if (this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n      }\n\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n      }\n\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(127, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(128, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(126, val);\n  }\n\n  readCodePoint(throwOnInvalid) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === 123) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\n      ++this.state.pos;\n\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, ErrorMessages.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n\n    return code;\n  }\n\n  readString(quote) {\n    let out = \"\",\n        chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (ch === 8232 || ch === 8233) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(125, out);\n  }\n\n  readTemplateContinuation() {\n    if (!this.match(8)) {\n      this.unexpected(this.state.start, 8);\n    }\n\n    this.state.pos--;\n    this.readTemplateToken();\n  }\n\n  readTemplateToken() {\n    let out = \"\",\n        chunkStart = this.state.pos,\n        containsInvalid = false;\n    ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start + 1, ErrorMessages.UnterminatedTemplate);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      if (ch === 96) {\n        ++this.state.pos;\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(24, containsInvalid ? null : out);\n        return;\n      }\n\n      if (ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n        this.state.pos += 2;\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(25, containsInvalid ? null : out);\n        return;\n      }\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n\n        switch (ch) {\n          case 13:\n            if (this.input.charCodeAt(this.state.pos) === 10) {\n              ++this.state.pos;\n            }\n\n          case 10:\n            out += \"\\n\";\n            break;\n\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos, message) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  readEscapedChar(inTemplate) {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n\n    switch (ch) {\n      case 110:\n        return \"\\n\";\n\n      case 114:\n        return \"\\r\";\n\n      case 120:\n        {\n          const code = this.readHexChar(2, false, throwOnInvalid);\n          return code === null ? null : String.fromCharCode(code);\n        }\n\n      case 117:\n        {\n          const code = this.readCodePoint(throwOnInvalid);\n          return code === null ? null : String.fromCodePoint(code);\n        }\n\n      case 116:\n        return \"\\t\";\n\n      case 98:\n        return \"\\b\";\n\n      case 118:\n        return \"\\u000b\";\n\n      case 102:\n        return \"\\f\";\n\n      case 13:\n        if (this.input.charCodeAt(this.state.pos) === 10) {\n          ++this.state.pos;\n        }\n\n      case 10:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n\n      case 8232:\n      case 8233:\n        return \"\";\n\n      case 56:\n      case 57:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\n        }\n\n      default:\n        if (ch >= 48 && ch <= 55) {\n          const codePos = this.state.pos - 1;\n          const match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\n          let octalStr = match[0];\n          let octal = parseInt(octalStr, 8);\n\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n\n          if (octalStr !== \"0\" || next === 56 || next === 57) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, ErrorMessages.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  readHexChar(len, forceLen, throwOnInvalid) {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n\n    return n;\n  }\n\n  readWord1(firstCode) {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  readWord(firstCode) {\n    const word = this.readWord1(firstCode);\n    const type = keywords$1.get(word);\n\n    if (type !== undefined) {\n      this.finishToken(type, tokenLabelName(type));\n    } else {\n      this.finishToken(124, word);\n    }\n  }\n\n  checkKeywordEscapes() {\n    const {\n      type\n    } = this.state;\n\n    if (tokenIsKeyword(type) && this.state.containsEsc) {\n      this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, tokenLabelName(type));\n    }\n  }\n\n  updateContext(prevType) {}\n\n}\n\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n\n}\nclass ClassScopeHandler {\n  constructor(raise) {\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n  }\n\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(name, elementType, pos) {\n    const {\n      privateNames,\n      loneAccessors,\n      undefinedPrivateNames\n    } = this.current();\n    let redefined = privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && loneAccessors.get(name);\n\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) loneAccessors.delete(name);\n      } else if (!redefined) {\n        loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\n    }\n\n    privateNames.add(name);\n    undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name, pos) {\n    let classScope;\n\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n    }\n  }\n\n}\n\nconst kExpression = 0,\n      kMaybeArrowParameterDeclaration = 1,\n      kMaybeAsyncArrowParameterDeclaration = 2,\n      kParameterDeclaration = 3;\n\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.errors = new Map();\n  }\n\n  recordDeclarationError(pos, template) {\n    this.errors.set(pos, template);\n  }\n\n  clearDeclarationError(pos) {\n    this.errors.delete(pos);\n  }\n\n  iterateErrors(iterator) {\n    this.errors.forEach(iterator);\n  }\n\n}\n\nclass ExpressionScopeHandler {\n  constructor(raise) {\n    this.stack = [new ExpressionScope()];\n    this.raise = raise;\n  }\n\n  enter(scope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  recordParameterInitializerError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(pos, template);\n      } else {\n        return;\n      }\n\n      scope = stack[--i];\n    }\n\n    this.raise(pos, template);\n  }\n\n  recordParenthesizedIdentifierError(pos, template) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, template);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(pos, template);\n    } else {\n      return;\n    }\n  }\n\n  recordAsyncArrowParametersError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(pos, template);\n      }\n\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors((template, pos) => {\n      this.raise(pos, template);\n      let i = stack.length - 2;\n      let scope = stack[i];\n\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nconst PARAM = 0b0000,\n      PARAM_YIELD = 0b0001,\n      PARAM_AWAIT = 0b0010,\n      PARAM_RETURN = 0b0100,\n      PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, val) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    extra[key] = val;\n  }\n\n  isContextual(token) {\n    return this.state.type === token && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(isIdentifierChar(nextCh) || (nextCh & 0xfc00) === 0xd800);\n    }\n\n    return false;\n  }\n\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  eatContextual(token) {\n    if (this.isContextual(token)) {\n      this.next();\n      return true;\n    }\n\n    return false;\n  }\n\n  expectContextual(token, template) {\n    if (!this.eatContextual(token)) this.unexpected(null, template);\n  }\n\n  canInsertSemicolon() {\n    return this.match(131) || this.match(8) || this.hasPrecedingLineBreak();\n  }\n\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n  }\n\n  hasFollowingLineBreak() {\n    skipWhiteSpaceToLineBreak.lastIndex = this.state.end;\n    return skipWhiteSpaceToLineBreak.test(this.input);\n  }\n\n  isLineTerminator() {\n    return this.eat(13) || this.canInsertSemicolon();\n  }\n\n  semicolon(allowAsi = true) {\n    if (allowAsi ? this.isLineTerminator() : this.eat(13)) return;\n    this.raise(this.state.lastTokEnd, ErrorMessages.MissingSemicolon);\n  }\n\n  expect(type, pos) {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  assertNoSpace(message = \"Unexpected space.\") {\n    if (this.state.start > this.state.lastTokEnd) {\n      this.raise(this.state.lastTokEnd, {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedSpace\",\n        template: message\n      });\n    }\n  }\n\n  unexpected(pos, messageOrType = {\n    code: ErrorCodes.SyntaxError,\n    reasonCode: \"UnexpectedToken\",\n    template: \"Unexpected token\"\n  }) {\n    if (isTokenType(messageOrType)) {\n      messageOrType = {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedToken\",\n        template: `Unexpected token, expected \"${tokenLabelName(messageOrType)}\"`\n      };\n    }\n\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n  }\n\n  getPluginNamesFromConfigs(pluginConfigs) {\n    return pluginConfigs.map(c => {\n      if (typeof c === \"string\") {\n        return c;\n      } else {\n        return c[0];\n      }\n    });\n  }\n\n  expectPlugin(pluginConfig, pos) {\n    if (!this.hasPlugin(pluginConfig)) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: this.getPluginNamesFromConfigs([pluginConfig])\n      }, `This experimental syntax requires enabling the parser plugin: ${JSON.stringify(pluginConfig)}.`);\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(pluginConfigs, pos) {\n    if (!pluginConfigs.some(c => this.hasPlugin(c))) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: this.getPluginNamesFromConfigs(pluginConfigs)\n      }, `This experimental syntax requires enabling one of the following parser plugin(s): ${pluginConfigs.map(c => JSON.stringify(c)).join(\", \")}.`);\n    }\n  }\n\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssign,\n      doubleProto,\n      optionalParameters\n    } = refExpressionErrors;\n    const hasErrors = shorthandAssign + doubleProto + optionalParameters > -3;\n\n    if (!andThrow) {\n      return hasErrors;\n    } else if (hasErrors) {\n      if (shorthandAssign >= 0) {\n        this.raise(shorthandAssign, ErrorMessages.InvalidCoverInitializedName);\n      }\n\n      if (doubleProto >= 0) {\n        this.raise(doubleProto, ErrorMessages.DuplicateProto);\n      }\n\n      if (optionalParameters >= 0) {\n        this.unexpected(optionalParameters);\n      }\n    }\n  }\n\n  isLiteralPropertyName() {\n    return tokenIsLiteralPropertyName(this.state.type);\n  }\n\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(inModule = this.options.sourceType === \"module\") {\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    const oldExportedIdentifiers = this.exportedIdentifiers;\n    this.exportedIdentifiers = new Set();\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n    return () => {\n      this.state.labels = oldLabels;\n      this.exportedIdentifiers = oldExportedIdentifiers;\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n\n    if (this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssign = -1;\n    this.doubleProto = -1;\n    this.optionalParameters = -1;\n  }\n\n}\n\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser != null && parser.options.ranges) this.range = [pos, 0];\n    if (parser != null && parser.filename) this.loc.filename = parser.filename;\n  }\n\n}\n\nconst NodePrototype = Node.prototype;\n{\n  NodePrototype.__clone = function () {\n    const newNode = new Node();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  };\n}\n\nfunction clonePlaceholder(node) {\n  return cloneIdentifier(node);\n}\n\nfunction cloneIdentifier(node) {\n  const {\n    type,\n    start,\n    end,\n    loc,\n    range,\n    extra,\n    name\n  } = node;\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.name = name;\n\n  if (type === \"Placeholder\") {\n    cloned.expectedNode = node.expectedNode;\n  }\n\n  return cloned;\n}\nfunction cloneStringLiteral(node) {\n  const {\n    type,\n    start,\n    end,\n    loc,\n    range,\n    extra\n  } = node;\n\n  if (type === \"Placeholder\") {\n    return clonePlaceholder(node);\n  }\n\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n\n  if (node.raw !== undefined) {\n    cloned.raw = node.raw;\n  } else {\n    cloned.extra = extra;\n  }\n\n  cloned.value = node.value;\n  return cloned;\n}\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt(pos, loc) {\n    return new Node(this, pos, loc);\n  }\n\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n  }\n\n  finishNodeAt(node, type, pos, loc) {\n\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    if (this.options.attachComment) this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node, start, startLoc) {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(node, end = this.state.lastTokEnd, endLoc = this.state.lastTokEndLoc) {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n\n}\n\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = makeErrorTemplates({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  AssignReservedType: \"Cannot overwrite reserved type %0.\",\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired: \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor: \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst: \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: \"Unexpected reserved type %0.\",\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead.\",\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\"\n}, ErrorCodes.SyntaxError, \"flow\");\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(type) {\n  return tokenIsKeywordOrIdentifier(type) && type !== 93;\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = (superClass => class extends superClass {\n  constructor(...args) {\n    super(...args);\n    this.flowPragma = undefined;\n  }\n\n  getScopeHandler() {\n    return FlowScopeHandler;\n  }\n\n  shouldParseTypes() {\n    return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n  }\n\n  shouldParseEnums() {\n    return !!this.getPluginOption(\"flow\", \"enums\");\n  }\n\n  finishToken(type, val) {\n    if (type !== 125 && type !== 13 && type !== 28) {\n      if (this.flowPragma === undefined) {\n        this.flowPragma = null;\n      }\n    }\n\n    return super.finishToken(type, val);\n  }\n\n  addComment(comment) {\n    if (this.flowPragma === undefined) {\n      const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n\n      if (!matches) ; else if (matches[1] === \"flow\") {\n        this.flowPragma = \"flow\";\n      } else if (matches[1] === \"noflow\") {\n        this.flowPragma = \"noflow\";\n      } else {\n        throw new Error(\"Unexpected flow pragma\");\n      }\n    }\n\n    return super.addComment(comment);\n  }\n\n  flowParseTypeInitialiser(tok) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(tok || 14);\n    const type = this.flowParseType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParsePredicate() {\n    const node = this.startNode();\n    const moduloPos = this.state.start;\n    this.next();\n    this.expectContextual(103);\n\n    if (this.state.lastTokStart > moduloPos + 1) {\n      this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n    }\n\n    if (this.eat(10)) {\n      node.value = this.parseExpression();\n      this.expect(11);\n      return this.finishNode(node, \"DeclaredPredicate\");\n    } else {\n      return this.finishNode(node, \"InferredPredicate\");\n    }\n  }\n\n  flowParseTypeAndPredicateInitialiser() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(14);\n    let type = null;\n    let predicate = null;\n\n    if (this.match(50)) {\n      this.state.inType = oldInType;\n      predicate = this.flowParsePredicate();\n    } else {\n      type = this.flowParseType();\n      this.state.inType = oldInType;\n\n      if (this.match(50)) {\n        predicate = this.flowParsePredicate();\n      }\n    }\n\n    return [type, predicate];\n  }\n\n  flowParseDeclareClass(node) {\n    this.next();\n    this.flowParseInterfaceish(node, true);\n    return this.finishNode(node, \"DeclareClass\");\n  }\n\n  flowParseDeclareFunction(node) {\n    this.next();\n    const id = node.id = this.parseIdentifier();\n    const typeNode = this.startNode();\n    const typeContainer = this.startNode();\n\n    if (this.match(45)) {\n      typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      typeNode.typeParameters = null;\n    }\n\n    this.expect(10);\n    const tmp = this.flowParseFunctionTypeParams();\n    typeNode.params = tmp.params;\n    typeNode.rest = tmp.rest;\n    typeNode.this = tmp._this;\n    this.expect(11);\n    [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n    typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n    id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n    this.resetEndLocation(id);\n    this.semicolon();\n    this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n    return this.finishNode(node, \"DeclareFunction\");\n  }\n\n  flowParseDeclare(node, insideModule) {\n    if (this.match(76)) {\n      return this.flowParseDeclareClass(node);\n    } else if (this.match(64)) {\n      return this.flowParseDeclareFunction(node);\n    } else if (this.match(70)) {\n      return this.flowParseDeclareVariable(node);\n    } else if (this.eatContextual(119)) {\n      if (this.match(16)) {\n        return this.flowParseDeclareModuleExports(node);\n      } else {\n        if (insideModule) {\n          this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n        }\n\n        return this.flowParseDeclareModule(node);\n      }\n    } else if (this.isContextual(122)) {\n      return this.flowParseDeclareTypeAlias(node);\n    } else if (this.isContextual(123)) {\n      return this.flowParseDeclareOpaqueType(node);\n    } else if (this.isContextual(121)) {\n      return this.flowParseDeclareInterface(node);\n    } else if (this.match(78)) {\n      return this.flowParseDeclareExportDeclaration(node, insideModule);\n    } else {\n      throw this.unexpected();\n    }\n  }\n\n  flowParseDeclareVariable(node) {\n    this.next();\n    node.id = this.flowParseTypeAnnotatableIdentifier(true);\n    this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n    this.semicolon();\n    return this.finishNode(node, \"DeclareVariable\");\n  }\n\n  flowParseDeclareModule(node) {\n    this.scope.enter(SCOPE_OTHER);\n\n    if (this.match(125)) {\n      node.id = this.parseExprAtom();\n    } else {\n      node.id = this.parseIdentifier();\n    }\n\n    const bodyNode = node.body = this.startNode();\n    const body = bodyNode.body = [];\n    this.expect(5);\n\n    while (!this.match(8)) {\n      let bodyNode = this.startNode();\n\n      if (this.match(79)) {\n        this.next();\n\n        if (!this.isContextual(122) && !this.match(83)) {\n          this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\n        }\n\n        this.parseImport(bodyNode);\n      } else {\n        this.expectContextual(117, FlowErrors.UnsupportedStatementInDeclareModule);\n        bodyNode = this.flowParseDeclare(bodyNode, true);\n      }\n\n      body.push(bodyNode);\n    }\n\n    this.scope.exit();\n    this.expect(8);\n    this.finishNode(bodyNode, \"BlockStatement\");\n    let kind = null;\n    let hasModuleExport = false;\n    body.forEach(bodyElement => {\n      if (isEsModuleType(bodyElement)) {\n        if (kind === \"CommonJS\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"ES\";\n      } else if (bodyElement.type === \"DeclareModuleExports\") {\n        if (hasModuleExport) {\n          this.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\n        }\n\n        if (kind === \"ES\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"CommonJS\";\n        hasModuleExport = true;\n      }\n    });\n    node.kind = kind || \"CommonJS\";\n    return this.finishNode(node, \"DeclareModule\");\n  }\n\n  flowParseDeclareExportDeclaration(node, insideModule) {\n    this.expect(78);\n\n    if (this.eat(61)) {\n      if (this.match(64) || this.match(76)) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n      } else {\n        node.declaration = this.flowParseType();\n        this.semicolon();\n      }\n\n      node.default = true;\n      return this.finishNode(node, \"DeclareExportDeclaration\");\n    } else {\n      if (this.match(71) || this.isLet() || (this.isContextual(122) || this.isContextual(121)) && !insideModule) {\n        const label = this.state.value;\n        const suggestion = exportSuggestions[label];\n        throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\n      }\n\n      if (this.match(70) || this.match(64) || this.match(76) || this.isContextual(123)) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n        node.default = false;\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else if (this.match(51) || this.match(5) || this.isContextual(121) || this.isContextual(122) || this.isContextual(123)) {\n        node = this.parseExport(node);\n\n        if (node.type === \"ExportNamedDeclaration\") {\n          node.type = \"ExportDeclaration\";\n          node.default = false;\n          delete node.exportKind;\n        }\n\n        node.type = \"Declare\" + node.type;\n        return node;\n      }\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParseDeclareModuleExports(node) {\n    this.next();\n    this.expectContextual(104);\n    node.typeAnnotation = this.flowParseTypeAnnotation();\n    this.semicolon();\n    return this.finishNode(node, \"DeclareModuleExports\");\n  }\n\n  flowParseDeclareTypeAlias(node) {\n    this.next();\n    this.flowParseTypeAlias(node);\n    node.type = \"DeclareTypeAlias\";\n    return node;\n  }\n\n  flowParseDeclareOpaqueType(node) {\n    this.next();\n    this.flowParseOpaqueType(node, true);\n    node.type = \"DeclareOpaqueType\";\n    return node;\n  }\n\n  flowParseDeclareInterface(node) {\n    this.next();\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"DeclareInterface\");\n  }\n\n  flowParseInterfaceish(node, isClass = false) {\n    node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n    this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\n\n    if (this.match(45)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.extends = [];\n    node.implements = [];\n    node.mixins = [];\n\n    if (this.eat(77)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (!isClass && this.eat(12));\n    }\n\n    if (this.isContextual(110)) {\n      this.next();\n\n      do {\n        node.mixins.push(this.flowParseInterfaceExtends());\n      } while (this.eat(12));\n    }\n\n    if (this.isContextual(106)) {\n      this.next();\n\n      do {\n        node.implements.push(this.flowParseInterfaceExtends());\n      } while (this.eat(12));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: isClass,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: isClass,\n      allowInexact: false\n    });\n  }\n\n  flowParseInterfaceExtends() {\n    const node = this.startNode();\n    node.id = this.flowParseQualifiedTypeIdentifier();\n\n    if (this.match(45)) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    } else {\n      node.typeParameters = null;\n    }\n\n    return this.finishNode(node, \"InterfaceExtends\");\n  }\n\n  flowParseInterface(node) {\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"InterfaceDeclaration\");\n  }\n\n  checkNotUnderscore(word) {\n    if (word === \"_\") {\n      this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n    }\n  }\n\n  checkReservedType(word, startLoc, declaration) {\n    if (!reservedTypes.has(word)) return;\n    this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\n  }\n\n  flowParseRestrictedIdentifier(liberal, declaration) {\n    this.checkReservedType(this.state.value, this.state.start, declaration);\n    return this.parseIdentifier(liberal);\n  }\n\n  flowParseTypeAlias(node) {\n    node.id = this.flowParseRestrictedIdentifier(false, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.match(45)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.right = this.flowParseTypeInitialiser(29);\n    this.semicolon();\n    return this.finishNode(node, \"TypeAlias\");\n  }\n\n  flowParseOpaqueType(node, declare) {\n    this.expectContextual(122);\n    node.id = this.flowParseRestrictedIdentifier(true, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.match(45)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.supertype = null;\n\n    if (this.match(14)) {\n      node.supertype = this.flowParseTypeInitialiser(14);\n    }\n\n    node.impltype = null;\n\n    if (!declare) {\n      node.impltype = this.flowParseTypeInitialiser(29);\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"OpaqueType\");\n  }\n\n  flowParseTypeParameter(requireDefault = false) {\n    const nodeStart = this.state.start;\n    const node = this.startNode();\n    const variance = this.flowParseVariance();\n    const ident = this.flowParseTypeAnnotatableIdentifier();\n    node.name = ident.name;\n    node.variance = variance;\n    node.bound = ident.typeAnnotation;\n\n    if (this.match(29)) {\n      this.eat(29);\n      node.default = this.flowParseType();\n    } else {\n      if (requireDefault) {\n        this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n      }\n    }\n\n    return this.finishNode(node, \"TypeParameter\");\n  }\n\n  flowParseTypeParameterDeclaration() {\n    const oldInType = this.state.inType;\n    const node = this.startNode();\n    node.params = [];\n    this.state.inType = true;\n\n    if (this.match(45) || this.match(134)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    let defaultRequired = false;\n\n    do {\n      const typeParameter = this.flowParseTypeParameter(defaultRequired);\n      node.params.push(typeParameter);\n\n      if (typeParameter.default) {\n        defaultRequired = true;\n      }\n\n      if (!this.match(46)) {\n        this.expect(12);\n      }\n    } while (!this.match(46));\n\n    this.expect(46);\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterDeclaration\");\n  }\n\n  flowParseTypeParameterInstantiation() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expect(45);\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n    this.state.noAnonFunctionType = false;\n\n    while (!this.match(46)) {\n      node.params.push(this.flowParseType());\n\n      if (!this.match(46)) {\n        this.expect(12);\n      }\n    }\n\n    this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    this.expect(46);\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseTypeParameterInstantiationCallOrNew() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expect(45);\n\n    while (!this.match(46)) {\n      node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n      if (!this.match(46)) {\n        this.expect(12);\n      }\n    }\n\n    this.expect(46);\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseInterfaceType() {\n    const node = this.startNode();\n    this.expectContextual(121);\n    node.extends = [];\n\n    if (this.eat(77)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (this.eat(12));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: false,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: false,\n      allowInexact: false\n    });\n    return this.finishNode(node, \"InterfaceTypeAnnotation\");\n  }\n\n  flowParseObjectPropertyKey() {\n    return this.match(126) || this.match(125) ? this.parseExprAtom() : this.parseIdentifier(true);\n  }\n\n  flowParseObjectTypeIndexer(node, isStatic, variance) {\n    node.static = isStatic;\n\n    if (this.lookahead().type === 14) {\n      node.id = this.flowParseObjectPropertyKey();\n      node.key = this.flowParseTypeInitialiser();\n    } else {\n      node.id = null;\n      node.key = this.flowParseType();\n    }\n\n    this.expect(3);\n    node.value = this.flowParseTypeInitialiser();\n    node.variance = variance;\n    return this.finishNode(node, \"ObjectTypeIndexer\");\n  }\n\n  flowParseObjectTypeInternalSlot(node, isStatic) {\n    node.static = isStatic;\n    node.id = this.flowParseObjectPropertyKey();\n    this.expect(3);\n    this.expect(3);\n\n    if (this.match(45) || this.match(10)) {\n      node.method = true;\n      node.optional = false;\n      node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n    } else {\n      node.method = false;\n\n      if (this.eat(17)) {\n        node.optional = true;\n      }\n\n      node.value = this.flowParseTypeInitialiser();\n    }\n\n    return this.finishNode(node, \"ObjectTypeInternalSlot\");\n  }\n\n  flowParseObjectTypeMethodish(node) {\n    node.params = [];\n    node.rest = null;\n    node.typeParameters = null;\n    node.this = null;\n\n    if (this.match(45)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    this.expect(10);\n\n    if (this.match(74)) {\n      node.this = this.flowParseFunctionTypeParam(true);\n      node.this.name = null;\n\n      if (!this.match(11)) {\n        this.expect(12);\n      }\n    }\n\n    while (!this.match(11) && !this.match(21)) {\n      node.params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(11)) {\n        this.expect(12);\n      }\n    }\n\n    if (this.eat(21)) {\n      node.rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    this.expect(11);\n    node.returnType = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"FunctionTypeAnnotation\");\n  }\n\n  flowParseObjectTypeCallProperty(node, isStatic) {\n    const valueNode = this.startNode();\n    node.static = isStatic;\n    node.value = this.flowParseObjectTypeMethodish(valueNode);\n    return this.finishNode(node, \"ObjectTypeCallProperty\");\n  }\n\n  flowParseObjectType({\n    allowStatic,\n    allowExact,\n    allowSpread,\n    allowProto,\n    allowInexact\n  }) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const nodeStart = this.startNode();\n    nodeStart.callProperties = [];\n    nodeStart.properties = [];\n    nodeStart.indexers = [];\n    nodeStart.internalSlots = [];\n    let endDelim;\n    let exact;\n    let inexact = false;\n\n    if (allowExact && this.match(6)) {\n      this.expect(6);\n      endDelim = 9;\n      exact = true;\n    } else {\n      this.expect(5);\n      endDelim = 8;\n      exact = false;\n    }\n\n    nodeStart.exact = exact;\n\n    while (!this.match(endDelim)) {\n      let isStatic = false;\n      let protoStart = null;\n      let inexactStart = null;\n      const node = this.startNode();\n\n      if (allowProto && this.isContextual(111)) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== 14 && lookahead.type !== 17) {\n          this.next();\n          protoStart = this.state.start;\n          allowStatic = false;\n        }\n      }\n\n      if (allowStatic && this.isContextual(100)) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== 14 && lookahead.type !== 17) {\n          this.next();\n          isStatic = true;\n        }\n      }\n\n      const variance = this.flowParseVariance();\n\n      if (this.eat(0)) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (this.eat(0)) {\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n        } else {\n          nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n        }\n      } else if (this.match(10) || this.match(45)) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n      } else {\n        let kind = \"init\";\n\n        if (this.isContextual(94) || this.isContextual(99)) {\n          const lookahead = this.lookahead();\n\n          if (tokenIsLiteralPropertyName(lookahead.type)) {\n            kind = this.state.value;\n            this.next();\n          }\n        }\n\n        const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n        if (propOrInexact === null) {\n          inexact = true;\n          inexactStart = this.state.lastTokStart;\n        } else {\n          nodeStart.properties.push(propOrInexact);\n        }\n      }\n\n      this.flowObjectTypeSemicolon();\n\n      if (inexactStart && !this.match(8) && !this.match(9)) {\n        this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\n      }\n    }\n\n    this.expect(endDelim);\n\n    if (allowSpread) {\n      nodeStart.inexact = inexact;\n    }\n\n    const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n    this.state.inType = oldInType;\n    return out;\n  }\n\n  flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\n    if (this.eat(21)) {\n      const isInexactToken = this.match(12) || this.match(13) || this.match(8) || this.match(9);\n\n      if (isInexactToken) {\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\n        } else if (!allowInexact) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n        }\n\n        if (variance) {\n          this.raise(variance.start, FlowErrors.InexactVariance);\n        }\n\n        return null;\n      }\n\n      if (!allowSpread) {\n        this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n      }\n\n      if (protoStart != null) {\n        this.unexpected(protoStart);\n      }\n\n      if (variance) {\n        this.raise(variance.start, FlowErrors.SpreadVariance);\n      }\n\n      node.argument = this.flowParseType();\n      return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n    } else {\n      node.key = this.flowParseObjectPropertyKey();\n      node.static = isStatic;\n      node.proto = protoStart != null;\n      node.kind = kind;\n      let optional = false;\n\n      if (this.match(45) || this.match(10)) {\n        node.method = true;\n\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n        if (kind === \"get\" || kind === \"set\") {\n          this.flowCheckGetterSetterParams(node);\n        }\n\n        if (!allowSpread && node.key.name === \"constructor\" && node.value.this) {\n          this.raise(node.value.this.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      } else {\n        if (kind !== \"init\") this.unexpected();\n        node.method = false;\n\n        if (this.eat(17)) {\n          optional = true;\n        }\n\n        node.value = this.flowParseTypeInitialiser();\n        node.variance = variance;\n      }\n\n      node.optional = optional;\n      return this.finishNode(node, \"ObjectTypeProperty\");\n    }\n  }\n\n  flowCheckGetterSetterParams(property) {\n    const paramCount = property.kind === \"get\" ? 0 : 1;\n    const start = property.start;\n    const length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n    if (property.value.this) {\n      this.raise(property.value.this.start, property.kind === \"get\" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam);\n    }\n\n    if (length !== paramCount) {\n      if (property.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (property.kind === \"set\" && property.value.rest) {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  flowObjectTypeSemicolon() {\n    if (!this.eat(13) && !this.eat(12) && !this.match(8) && !this.match(9)) {\n      this.unexpected();\n    }\n  }\n\n  flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    let node = id || this.flowParseRestrictedIdentifier(true);\n\n    while (this.eat(16)) {\n      const node2 = this.startNodeAt(startPos, startLoc);\n      node2.qualification = node;\n      node2.id = this.flowParseRestrictedIdentifier(true);\n      node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n    }\n\n    return node;\n  }\n\n  flowParseGenericType(startPos, startLoc, id) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.typeParameters = null;\n    node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n    if (this.match(45)) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    return this.finishNode(node, \"GenericTypeAnnotation\");\n  }\n\n  flowParseTypeofType() {\n    const node = this.startNode();\n    this.expect(83);\n    node.argument = this.flowParsePrimaryType();\n    return this.finishNode(node, \"TypeofTypeAnnotation\");\n  }\n\n  flowParseTupleType() {\n    const node = this.startNode();\n    node.types = [];\n    this.expect(0);\n\n    while (this.state.pos < this.length && !this.match(3)) {\n      node.types.push(this.flowParseType());\n      if (this.match(3)) break;\n      this.expect(12);\n    }\n\n    this.expect(3);\n    return this.finishNode(node, \"TupleTypeAnnotation\");\n  }\n\n  flowParseFunctionTypeParam(first) {\n    let name = null;\n    let optional = false;\n    let typeAnnotation = null;\n    const node = this.startNode();\n    const lh = this.lookahead();\n    const isThis = this.state.type === 74;\n\n    if (lh.type === 14 || lh.type === 17) {\n      if (isThis && !first) {\n        this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\n      }\n\n      name = this.parseIdentifier(isThis);\n\n      if (this.eat(17)) {\n        optional = true;\n\n        if (isThis) {\n          this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\n        }\n      }\n\n      typeAnnotation = this.flowParseTypeInitialiser();\n    } else {\n      typeAnnotation = this.flowParseType();\n    }\n\n    node.name = name;\n    node.optional = optional;\n    node.typeAnnotation = typeAnnotation;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  reinterpretTypeAsFunctionTypeParam(type) {\n    const node = this.startNodeAt(type.start, type.loc.start);\n    node.name = null;\n    node.optional = false;\n    node.typeAnnotation = type;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  flowParseFunctionTypeParams(params = []) {\n    let rest = null;\n    let _this = null;\n\n    if (this.match(74)) {\n      _this = this.flowParseFunctionTypeParam(true);\n      _this.name = null;\n\n      if (!this.match(11)) {\n        this.expect(12);\n      }\n    }\n\n    while (!this.match(11) && !this.match(21)) {\n      params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(11)) {\n        this.expect(12);\n      }\n    }\n\n    if (this.eat(21)) {\n      rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    return {\n      params,\n      rest,\n      _this\n    };\n  }\n\n  flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n    switch (id.name) {\n      case \"any\":\n        return this.finishNode(node, \"AnyTypeAnnotation\");\n\n      case \"bool\":\n      case \"boolean\":\n        return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n      case \"mixed\":\n        return this.finishNode(node, \"MixedTypeAnnotation\");\n\n      case \"empty\":\n        return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n      case \"number\":\n        return this.finishNode(node, \"NumberTypeAnnotation\");\n\n      case \"string\":\n        return this.finishNode(node, \"StringTypeAnnotation\");\n\n      case \"symbol\":\n        return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n      default:\n        this.checkNotUnderscore(id.name);\n        return this.flowParseGenericType(startPos, startLoc, id);\n    }\n  }\n\n  flowParsePrimaryType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const node = this.startNode();\n    let tmp;\n    let type;\n    let isGroupedType = false;\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n    switch (this.state.type) {\n      case 5:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: false,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: true\n        });\n\n      case 6:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: true,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: false\n        });\n\n      case 0:\n        this.state.noAnonFunctionType = false;\n        type = this.flowParseTupleType();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        return type;\n\n      case 45:\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n        this.expect(10);\n        tmp = this.flowParseFunctionTypeParams();\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        node.this = tmp._this;\n        this.expect(11);\n        this.expect(19);\n        node.returnType = this.flowParseType();\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n      case 10:\n        this.next();\n\n        if (!this.match(11) && !this.match(21)) {\n          if (tokenIsIdentifier(this.state.type) || this.match(74)) {\n            const token = this.lookahead().type;\n            isGroupedType = token !== 17 && token !== 14;\n          } else {\n            isGroupedType = true;\n          }\n        }\n\n        if (isGroupedType) {\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.state.noAnonFunctionType || !(this.match(12) || this.match(11) && this.lookahead().type === 19)) {\n            this.expect(11);\n            return type;\n          } else {\n            this.eat(12);\n          }\n        }\n\n        if (type) {\n          tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n        } else {\n          tmp = this.flowParseFunctionTypeParams();\n        }\n\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        node.this = tmp._this;\n        this.expect(11);\n        this.expect(19);\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n      case 125:\n        return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n      case 81:\n      case 82:\n        node.value = this.match(81);\n        this.next();\n        return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n      case 49:\n        if (this.state.value === \"-\") {\n          this.next();\n\n          if (this.match(126)) {\n            return this.parseLiteralAtNode(-this.state.value, \"NumberLiteralTypeAnnotation\", node);\n          }\n\n          if (this.match(127)) {\n            return this.parseLiteralAtNode(-this.state.value, \"BigIntLiteralTypeAnnotation\", node);\n          }\n\n          throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\n        }\n\n        throw this.unexpected();\n\n      case 126:\n        return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n      case 127:\n        return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n      case 84:\n        this.next();\n        return this.finishNode(node, \"VoidTypeAnnotation\");\n\n      case 80:\n        this.next();\n        return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n      case 74:\n        this.next();\n        return this.finishNode(node, \"ThisTypeAnnotation\");\n\n      case 51:\n        this.next();\n        return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n      case 83:\n        return this.flowParseTypeofType();\n\n      default:\n        if (tokenIsKeyword(this.state.type)) {\n          const label = tokenLabelName(this.state.type);\n          this.next();\n          return super.createIdentifier(node, label);\n        } else if (tokenIsIdentifier(this.state.type)) {\n          if (this.isContextual(121)) {\n            return this.flowParseInterfaceType();\n          }\n\n          return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n        }\n\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParsePostfixType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let type = this.flowParsePrimaryType();\n    let seenOptionalIndexedAccess = false;\n\n    while ((this.match(0) || this.match(18)) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const optional = this.eat(18);\n      seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n      this.expect(0);\n\n      if (!optional && this.match(3)) {\n        node.elementType = type;\n        this.next();\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      } else {\n        node.objectType = type;\n        node.indexType = this.flowParseType();\n        this.expect(3);\n\n        if (seenOptionalIndexedAccess) {\n          node.optional = optional;\n          type = this.finishNode(node, \"OptionalIndexedAccessType\");\n        } else {\n          type = this.finishNode(node, \"IndexedAccessType\");\n        }\n      }\n    }\n\n    return type;\n  }\n\n  flowParsePrefixType() {\n    const node = this.startNode();\n\n    if (this.eat(17)) {\n      node.typeAnnotation = this.flowParsePrefixType();\n      return this.finishNode(node, \"NullableTypeAnnotation\");\n    } else {\n      return this.flowParsePostfixType();\n    }\n  }\n\n  flowParseAnonFunctionWithoutParens() {\n    const param = this.flowParsePrefixType();\n\n    if (!this.state.noAnonFunctionType && this.eat(19)) {\n      const node = this.startNodeAt(param.start, param.loc.start);\n      node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n      node.rest = null;\n      node.this = null;\n      node.returnType = this.flowParseType();\n      node.typeParameters = null;\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    return param;\n  }\n\n  flowParseIntersectionType() {\n    const node = this.startNode();\n    this.eat(43);\n    const type = this.flowParseAnonFunctionWithoutParens();\n    node.types = [type];\n\n    while (this.eat(43)) {\n      node.types.push(this.flowParseAnonFunctionWithoutParens());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n  }\n\n  flowParseUnionType() {\n    const node = this.startNode();\n    this.eat(41);\n    const type = this.flowParseIntersectionType();\n    node.types = [type];\n\n    while (this.eat(41)) {\n      node.types.push(this.flowParseIntersectionType());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n  }\n\n  flowParseType() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const type = this.flowParseUnionType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParseTypeOrImplicitInstantiation() {\n    if (this.state.type === 124 && this.state.value === \"_\") {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.parseIdentifier();\n      return this.flowParseGenericType(startPos, startLoc, node);\n    } else {\n      return this.flowParseType();\n    }\n  }\n\n  flowParseTypeAnnotation() {\n    const node = this.startNode();\n    node.typeAnnotation = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"TypeAnnotation\");\n  }\n\n  flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n    const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n    if (this.match(14)) {\n      ident.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(ident);\n    }\n\n    return ident;\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  flowParseVariance() {\n    let variance = null;\n\n    if (this.match(49)) {\n      variance = this.startNode();\n\n      if (this.state.value === \"+\") {\n        variance.kind = \"plus\";\n      } else {\n        variance.kind = \"minus\";\n      }\n\n      this.next();\n      this.finishNode(variance, \"Variance\");\n    }\n\n    return variance;\n  }\n\n  parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n    if (allowExpressionBody) {\n      return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n    }\n\n    return super.parseFunctionBody(node, false, isMethod);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(14)) {\n      const typeNode = this.startNode();\n      [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.state.strict && this.isContextual(121)) {\n      const lookahead = this.lookahead();\n\n      if (tokenIsKeywordOrIdentifier(lookahead.type)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseInterface(node);\n      }\n    } else if (this.shouldParseEnums() && this.isContextual(118)) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    const stmt = super.parseStatement(context, topLevel);\n\n    if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n      this.flowPragma = null;\n    }\n\n    return stmt;\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type === \"Identifier\") {\n      if (expr.name === \"declare\") {\n        if (this.match(76) || tokenIsIdentifier(this.state.type) || this.match(64) || this.match(70) || this.match(78)) {\n          return this.flowParseDeclare(node);\n        }\n      } else if (tokenIsIdentifier(this.state.type)) {\n        if (expr.name === \"interface\") {\n          return this.flowParseInterface(node);\n        } else if (expr.name === \"type\") {\n          return this.flowParseTypeAlias(node);\n        } else if (expr.name === \"opaque\") {\n          return this.flowParseOpaqueType(node, false);\n        }\n      }\n    }\n\n    return super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    const {\n      type\n    } = this.state;\n\n    if (tokenIsFlowInterfaceOrTypeOrOpaque(type) || this.shouldParseEnums() && type === 118) {\n      return !this.state.containsEsc;\n    }\n\n    return super.shouldParseExportDeclaration();\n  }\n\n  isExportDefaultSpecifier() {\n    const {\n      type\n    } = this.state;\n\n    if (tokenIsFlowInterfaceOrTypeOrOpaque(type) || this.shouldParseEnums() && type === 118) {\n      return this.state.containsEsc;\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseExportDefaultExpression() {\n    if (this.shouldParseEnums() && this.isContextual(118)) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (!this.match(17)) return expr;\n\n    if (this.state.maybeInArrowParameters) {\n      const nextCh = this.lookaheadCharCode();\n\n      if (nextCh === 44 || nextCh === 61 || nextCh === 58 || nextCh === 41) {\n        this.setOptionalParametersError(refExpressionErrors);\n        return expr;\n      }\n    }\n\n    this.expect(17);\n    const state = this.state.clone();\n    const originalNoArrowAt = this.state.noArrowAt;\n    const node = this.startNodeAt(startPos, startLoc);\n    let {\n      consequent,\n      failed\n    } = this.tryParseConditionalConsequent();\n    let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n    if (failed || invalid.length > 0) {\n      const noArrowAt = [...originalNoArrowAt];\n\n      if (invalid.length > 0) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt;\n\n        for (let i = 0; i < invalid.length; i++) {\n          noArrowAt.push(invalid[i].start);\n        }\n\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n        [valid, invalid] = this.getArrowLikeExpressions(consequent);\n      }\n\n      if (failed && valid.length > 1) {\n        this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n      }\n\n      if (failed && valid.length === 1) {\n        this.state = state;\n        noArrowAt.push(valid[0].start);\n        this.state.noArrowAt = noArrowAt;\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n      }\n    }\n\n    this.getArrowLikeExpressions(consequent, true);\n    this.state.noArrowAt = originalNoArrowAt;\n    this.expect(14);\n    node.test = expr;\n    node.consequent = consequent;\n    node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined));\n    return this.finishNode(node, \"ConditionalExpression\");\n  }\n\n  tryParseConditionalConsequent() {\n    this.state.noArrowParamsConversionAt.push(this.state.start);\n    const consequent = this.parseMaybeAssignAllowIn();\n    const failed = !this.match(14);\n    this.state.noArrowParamsConversionAt.pop();\n    return {\n      consequent,\n      failed\n    };\n  }\n\n  getArrowLikeExpressions(node, disallowInvalid) {\n    const stack = [node];\n    const arrows = [];\n\n    while (stack.length !== 0) {\n      const node = stack.pop();\n\n      if (node.type === \"ArrowFunctionExpression\") {\n        if (node.typeParameters || !node.returnType) {\n          this.finishArrowValidation(node);\n        } else {\n          arrows.push(node);\n        }\n\n        stack.push(node.body);\n      } else if (node.type === \"ConditionalExpression\") {\n        stack.push(node.consequent);\n        stack.push(node.alternate);\n      }\n    }\n\n    if (disallowInvalid) {\n      arrows.forEach(node => this.finishArrowValidation(node));\n      return [arrows, []];\n    }\n\n    return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n  }\n\n  finishArrowValidation(node) {\n    var _node$extra;\n\n    this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    super.checkParams(node, false, true);\n    this.scope.exit();\n  }\n\n  forwardNoArrowParamsConversionAt(node, parse) {\n    let result;\n\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      result = parse();\n      this.state.noArrowParamsConversionAt.pop();\n    } else {\n      result = parse();\n    }\n\n    return result;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(17)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(14)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n      return;\n    }\n\n    super.assertModuleNodeAllowed(node);\n  }\n\n  parseExport(node) {\n    const decl = super.parseExport(node);\n\n    if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n      decl.exportKind = decl.exportKind || \"value\";\n    }\n\n    return decl;\n  }\n\n  parseExportDeclaration(node) {\n    if (this.isContextual(122)) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n\n      if (this.match(5)) {\n        node.specifiers = this.parseExportSpecifiers(true);\n        this.parseExportFrom(node);\n        return null;\n      } else {\n        return this.flowParseTypeAlias(declarationNode);\n      }\n    } else if (this.isContextual(123)) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseOpaqueType(declarationNode, false);\n    } else if (this.isContextual(121)) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseInterface(declarationNode);\n    } else if (this.shouldParseEnums() && this.isContextual(118)) {\n      node.exportKind = \"value\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(declarationNode);\n    } else {\n      return super.parseExportDeclaration(node);\n    }\n  }\n\n  eatExportStar(node) {\n    if (super.eatExportStar(...arguments)) return true;\n\n    if (this.isContextual(122) && this.lookahead().type === 51) {\n      node.exportKind = \"type\";\n      this.next();\n      this.next();\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    const pos = this.state.start;\n    const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n\n    if (hasNamespace && node.exportKind === \"type\") {\n      this.unexpected(pos);\n    }\n\n    return hasNamespace;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    super.parseClassId(node, isStatement, optionalId);\n\n    if (this.match(45)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n  }\n\n  parseClassMember(classBody, member, state) {\n    const pos = this.state.start;\n\n    if (this.isContextual(117)) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      member.declare = true;\n    }\n\n    super.parseClassMember(classBody, member, state);\n\n    if (member.declare) {\n      if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\" && member.type !== \"PropertyDefinition\") {\n        this.raise(pos, FlowErrors.DeclareClassElement);\n      } else if (member.value) {\n        this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\n      }\n    }\n  }\n\n  isIterator(word) {\n    return word === \"iterator\" || word === \"asyncIterator\";\n  }\n\n  readIterator() {\n    const word = super.readWord1();\n    const fullWord = \"@@\" + word;\n\n    if (!this.isIterator(word) || !this.state.inType) {\n      this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, fullWord);\n    }\n\n    this.finishToken(124, fullWord);\n  }\n\n  getTokenFromCode(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 123 && next === 124) {\n      return this.finishOp(6, 2);\n    } else if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(code === 62 ? 46 : 45, 1);\n    } else if (this.state.inType && code === 63) {\n      if (next === 46) {\n        return this.finishOp(18, 2);\n      }\n\n      return this.finishOp(17, 1);\n    } else if (isIteratorStart(code, next)) {\n      this.state.pos += 2;\n      return this.readIterator();\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  isAssignable(node, isBinding) {\n    if (node.type === \"TypeCastExpression\") {\n      return this.isAssignable(node.expression, isBinding);\n    } else {\n      return super.isAssignable(node, isBinding);\n    }\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node.type === \"TypeCastExpression\") {\n      return super.toAssignable(this.typeCastToParameter(node), isLHS);\n    } else {\n      return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n\n      if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n        exprList[i] = this.typeCastToParameter(expr);\n      }\n    }\n\n    return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    for (let i = 0; i < exprList.length; i++) {\n      var _expr$extra;\n\n      const expr = exprList[i];\n\n      if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) != null && _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n        this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n      }\n    }\n\n    return exprList;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n\n    if (canBePattern && !this.state.maybeInArrowParameters) {\n      this.toReferencedList(node.elements);\n    }\n\n    return node;\n  }\n\n  checkLVal(expr, ...args) {\n    if (expr.type !== \"TypeCastExpression\") {\n      return super.checkLVal(expr, ...args);\n    }\n  }\n\n  parseClassProperty(node) {\n    if (this.match(14)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (this.match(14)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassPrivateProperty(node);\n  }\n\n  isClassMethod() {\n    return this.match(45) || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(14) || super.isClassProperty();\n  }\n\n  isNonstaticConstructor(method) {\n    return !this.match(14) && super.isNonstaticConstructor(method);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.match(45)) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n\n    if (method.params && isConstructor) {\n      const params = method.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    } else if (method.type === \"MethodDefinition\" && isConstructor && method.value.params) {\n      const params = method.value.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    }\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.match(45)) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.match(45)) {\n      node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    if (this.isContextual(106)) {\n      this.next();\n      const implemented = node.implements = [];\n\n      do {\n        const node = this.startNode();\n        node.id = this.flowParseRestrictedIdentifier(true);\n\n        if (this.match(45)) {\n          node.typeParameters = this.flowParseTypeParameterInstantiation();\n        } else {\n          node.typeParameters = null;\n        }\n\n        implemented.push(this.finishNode(node, \"ClassImplements\"));\n      } while (this.eat(12));\n    }\n  }\n\n  checkGetterSetterParams(method) {\n    super.checkGetterSetterParams(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    if (params.length > 0) {\n      const param = params[0];\n\n      if (this.isThisParam(param) && method.kind === \"get\") {\n        this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\n      } else if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\n      }\n    }\n  }\n\n  parsePropertyNamePrefixOperator(node) {\n    node.variance = this.flowParseVariance();\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    if (prop.variance) {\n      this.unexpected(prop.variance.start);\n    }\n\n    delete prop.variance;\n    let typeParameters;\n\n    if (this.match(45) && !isAccessor) {\n      typeParameters = this.flowParseTypeParameterDeclaration();\n      if (!this.match(10)) this.unexpected();\n    }\n\n    super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n    if (typeParameters) {\n      (prop.value || prop).typeParameters = typeParameters;\n    }\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(17)) {\n      if (param.type !== \"Identifier\") {\n        this.raise(param.start, FlowErrors.PatternIsOptional);\n      }\n\n      if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\n      }\n\n      param.optional = true;\n    }\n\n    if (this.match(14)) {\n      param.typeAnnotation = this.flowParseTypeAnnotation();\n    } else if (this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\n    }\n\n    if (this.match(29) && this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamNoDefault);\n    }\n\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n    }\n\n    return node;\n  }\n\n  shouldParseDefaultImport(node) {\n    if (!hasTypeImportKind(node)) {\n      return super.shouldParseDefaultImport(node);\n    }\n\n    return isMaybeDefaultImport(this.state.type);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    node.importKind = \"value\";\n    let kind = null;\n\n    if (this.match(83)) {\n      kind = \"typeof\";\n    } else if (this.isContextual(122)) {\n      kind = \"type\";\n    }\n\n    if (kind) {\n      const lh = this.lookahead();\n      const {\n        type\n      } = lh;\n\n      if (kind === \"type\" && type === 51) {\n        this.unexpected(lh.start);\n      }\n\n      if (isMaybeDefaultImport(type) || type === 5 || type === 51) {\n        this.next();\n        node.importKind = kind;\n      }\n    }\n\n    return super.maybeParseDefaultImportSpecifier(node);\n  }\n\n  parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly) {\n    const firstIdent = specifier.imported;\n    let specifierTypeKind = null;\n\n    if (firstIdent.type === \"Identifier\") {\n      if (firstIdent.name === \"type\") {\n        specifierTypeKind = \"type\";\n      } else if (firstIdent.name === \"typeof\") {\n        specifierTypeKind = \"typeof\";\n      }\n    }\n\n    let isBinding = false;\n\n    if (this.isContextual(89) && !this.isLookaheadContextual(\"as\")) {\n      const as_ident = this.parseIdentifier(true);\n\n      if (specifierTypeKind !== null && !tokenIsKeywordOrIdentifier(this.state.type)) {\n        specifier.imported = as_ident;\n        specifier.importKind = specifierTypeKind;\n        specifier.local = cloneIdentifier(as_ident);\n      } else {\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = this.parseIdentifier();\n      }\n    } else {\n      if (specifierTypeKind !== null && tokenIsKeywordOrIdentifier(this.state.type)) {\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n      } else {\n        if (importedIsString) {\n          throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);\n        }\n\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n      }\n\n      if (this.eatContextual(89)) {\n        specifier.local = this.parseIdentifier();\n      } else {\n        isBinding = true;\n        specifier.local = cloneIdentifier(specifier.imported);\n      }\n    }\n\n    const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n    if (isInTypeOnlyImport && specifierIsTypeImport) {\n      this.raise(specifier.start, FlowErrors.ImportTypeShorthandOnlyInPureImport);\n    }\n\n    if (isInTypeOnlyImport || specifierIsTypeImport) {\n      this.checkReservedType(specifier.local.name, specifier.local.start, true);\n    }\n\n    if (isBinding && !isInTypeOnlyImport && !specifierIsTypeImport) {\n      this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    return this.finishNode(specifier, \"ImportSpecifier\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case 74:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const kind = node.kind;\n\n    if (kind !== \"get\" && kind !== \"set\" && this.match(45)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (this.match(14)) {\n      decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(14)) {\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = true;\n      node.returnType = this.flowParseTypeAnnotation();\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(14) || super.shouldParseAsyncArrow();\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    var _jsx;\n\n    let state = null;\n    let jsx;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(134) || this.match(45))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n      const currentContext = context[context.length - 1];\n\n      if (currentContext === types.j_oTag || currentContext === types.j_expr) {\n        context.pop();\n      }\n    }\n\n    if ((_jsx = jsx) != null && _jsx.error || this.match(45)) {\n      var _jsx2, _jsx3;\n\n      state = state || this.state.clone();\n      let typeParameters;\n      const arrow = this.tryParse(abort => {\n        var _arrowExpression$extr;\n\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n          const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n          this.resetStartLocationFromNode(result, typeParameters);\n          return result;\n        });\n        if ((_arrowExpression$extr = arrowExpression.extra) != null && _arrowExpression$extr.parenthesized) abort();\n        const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n        if (expr.type !== \"ArrowFunctionExpression\") abort();\n        expr.typeParameters = typeParameters;\n        this.resetStartLocationFromNode(expr, typeParameters);\n        return arrowExpression;\n      }, state);\n      let arrowExpression = null;\n\n      if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n        if (!arrow.error && !arrow.aborted) {\n          if (arrow.node.async) {\n            this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\n          }\n\n          return arrow.node;\n        }\n\n        arrowExpression = arrow.node;\n      }\n\n      if ((_jsx2 = jsx) != null && _jsx2.node) {\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrowExpression) {\n        this.state = arrow.failState;\n        return arrowExpression;\n      }\n\n      if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\n    }\n\n    return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n  }\n\n  parseArrow(node) {\n    if (this.match(14)) {\n      const result = this.tryParse(() => {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        if (this.canInsertSemicolon()) this.unexpected();\n        if (!this.match(19)) this.unexpected();\n        return typeNode;\n      });\n      if (result.thrown) return null;\n      if (result.error) this.state = result.failState;\n      node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n    }\n\n    return super.parseArrow(node);\n  }\n\n  shouldParseArrow(params) {\n    return this.match(14) || super.shouldParseArrow(params);\n  }\n\n  setArrowFunctionParameters(node, params) {\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      node.params = params;\n    } else {\n      super.setArrowFunctionParameters(node, params);\n    }\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction) {\n    if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      return;\n    }\n\n    for (let i = 0; i < node.params.length; i++) {\n      if (this.isThisParam(node.params[i]) && i > 0) {\n        this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\n      }\n    }\n\n    return super.checkParams(...arguments);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.arguments = this.parseCallExpressionArguments(11, false);\n      base = this.finishNode(node, \"CallExpression\");\n    } else if (base.type === \"Identifier\" && base.name === \"async\" && this.match(45)) {\n      const state = this.state.clone();\n      const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort(), state);\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n      const result = this.tryParse(() => super.parseSubscripts(base, startPos, startLoc, noCalls), state);\n      if (result.node && !result.error) return result.node;\n\n      if (arrow.node) {\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n\n      if (result.node) {\n        this.state = result.failState;\n        return result.node;\n      }\n\n      throw arrow.error || result.error;\n    }\n\n    return super.parseSubscripts(base, startPos, startLoc, noCalls);\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n    if (this.match(18) && this.isLookaheadToken_lt()) {\n      subscriptState.optionalChainMember = true;\n\n      if (noCalls) {\n        subscriptState.stop = true;\n        return base;\n      }\n\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.typeArguments = this.flowParseTypeParameterInstantiation();\n      this.expect(10);\n      node.arguments = this.parseCallExpressionArguments(11, false);\n      node.optional = true;\n      return this.finishCallExpression(node, true);\n    } else if (!noCalls && this.shouldParseTypes() && this.match(45)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      const result = this.tryParse(() => {\n        node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n        this.expect(10);\n        node.arguments = this.parseCallExpressionArguments(11, false);\n        if (subscriptState.optionalChainMember) node.optional = false;\n        return this.finishCallExpression(node, subscriptState.optionalChainMember);\n      });\n\n      if (result.node) {\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, subscriptState);\n  }\n\n  parseNewArguments(node) {\n    let targs = null;\n\n    if (this.shouldParseTypes() && this.match(45)) {\n      targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n    }\n\n    node.typeArguments = targs;\n    super.parseNewArguments(node);\n  }\n\n  parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.parseFunctionParams(node);\n    if (!this.parseArrow(node)) return;\n    return this.parseArrowExpression(node, undefined, true);\n  }\n\n  readToken_mult_modulo(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 47 && this.state.hasFlowComment) {\n      this.state.hasFlowComment = false;\n      this.state.pos += 2;\n      this.nextToken();\n      return;\n    }\n\n    super.readToken_mult_modulo(code);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 124 && next === 125) {\n      this.finishOp(9, 2);\n      return;\n    }\n\n    super.readToken_pipe_amp(code);\n  }\n\n  parseTopLevel(file, program) {\n    const fileNode = super.parseTopLevel(file, program);\n\n    if (this.state.hasFlowComment) {\n      this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n    }\n\n    return fileNode;\n  }\n\n  skipBlockComment() {\n    if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n      if (this.state.hasFlowComment) {\n        this.unexpected(null, FlowErrors.NestedFlowComment);\n      }\n\n      this.hasFlowCommentCompletion();\n      this.state.pos += this.skipFlowComment();\n      this.state.hasFlowComment = true;\n      return;\n    }\n\n    if (this.state.hasFlowComment) {\n      const end = this.input.indexOf(\"*-/\", this.state.pos += 2);\n\n      if (end === -1) {\n        throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\n      }\n\n      this.state.pos = end + 3;\n      return;\n    }\n\n    return super.skipBlockComment();\n  }\n\n  skipFlowComment() {\n    const {\n      pos\n    } = this.state;\n    let shiftToFirstNonWhiteSpace = 2;\n\n    while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n      shiftToFirstNonWhiteSpace++;\n    }\n\n    const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n    const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n    if (ch2 === 58 && ch3 === 58) {\n      return shiftToFirstNonWhiteSpace + 2;\n    }\n\n    if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n      return shiftToFirstNonWhiteSpace + 12;\n    }\n\n    if (ch2 === 58 && ch3 !== 58) {\n      return shiftToFirstNonWhiteSpace;\n    }\n\n    return false;\n  }\n\n  hasFlowCommentCompletion() {\n    const end = this.input.indexOf(\"*/\", this.state.pos);\n\n    if (end === -1) {\n      throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\n    }\n  }\n\n  flowEnumErrorBooleanMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\n  }\n\n  flowEnumErrorInvalidMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n    this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\n  }\n\n  flowEnumErrorDuplicateMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n  }\n\n  flowEnumErrorInconsistentMemberValues(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n  }\n\n  flowEnumErrorInvalidExplicitType(pos, {\n    enumName,\n    suppliedType\n  }) {\n    return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\n  }\n\n  flowEnumErrorInvalidMemberInitializer(pos, {\n    enumName,\n    explicitType,\n    memberName\n  }) {\n    let message = null;\n\n    switch (explicitType) {\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n        message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n        break;\n\n      case \"symbol\":\n        message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n        break;\n\n      default:\n        message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n    }\n\n    return this.raise(pos, message, enumName, memberName, explicitType);\n  }\n\n  flowEnumErrorNumberMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\n  }\n\n  flowEnumErrorStringMemberInconsistentlyInitailized(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\n  }\n\n  flowEnumMemberInit() {\n    const startPos = this.state.start;\n\n    const endOfInit = () => this.match(12) || this.match(8);\n\n    switch (this.state.type) {\n      case 126:\n        {\n          const literal = this.parseNumericLiteral(this.state.value);\n\n          if (endOfInit()) {\n            return {\n              type: \"number\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case 125:\n        {\n          const literal = this.parseStringLiteral(this.state.value);\n\n          if (endOfInit()) {\n            return {\n              type: \"string\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case 81:\n      case 82:\n        {\n          const literal = this.parseBooleanLiteral(this.match(81));\n\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      default:\n        return {\n          type: \"invalid\",\n          pos: startPos\n        };\n    }\n  }\n\n  flowEnumMemberRaw() {\n    const pos = this.state.start;\n    const id = this.parseIdentifier(true);\n    const init = this.eat(29) ? this.flowEnumMemberInit() : {\n      type: \"none\",\n      pos\n    };\n    return {\n      id,\n      init\n    };\n  }\n\n  flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\n    const {\n      explicitType\n    } = context;\n\n    if (explicitType === null) {\n      return;\n    }\n\n    if (explicitType !== expectedType) {\n      this.flowEnumErrorInvalidMemberInitializer(pos, context);\n    }\n  }\n\n  flowEnumMembers({\n    enumName,\n    explicitType\n  }) {\n    const seenNames = new Set();\n    const members = {\n      booleanMembers: [],\n      numberMembers: [],\n      stringMembers: [],\n      defaultedMembers: []\n    };\n    let hasUnknownMembers = false;\n\n    while (!this.match(8)) {\n      if (this.eat(21)) {\n        hasUnknownMembers = true;\n        break;\n      }\n\n      const memberNode = this.startNode();\n      const {\n        id,\n        init\n      } = this.flowEnumMemberRaw();\n      const memberName = id.name;\n\n      if (memberName === \"\") {\n        continue;\n      }\n\n      if (/^[a-z]/.test(memberName)) {\n        this.flowEnumErrorInvalidMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      if (seenNames.has(memberName)) {\n        this.flowEnumErrorDuplicateMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      seenNames.add(memberName);\n      const context = {\n        enumName,\n        explicitType,\n        memberName\n      };\n      memberNode.id = id;\n\n      switch (init.type) {\n        case \"boolean\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\n            memberNode.init = init.value;\n            members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n            break;\n          }\n\n        case \"number\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n            break;\n          }\n\n        case \"string\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n            break;\n          }\n\n        case \"invalid\":\n          {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n          }\n\n        case \"none\":\n          {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\n                break;\n\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                break;\n\n              default:\n                members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n            }\n          }\n      }\n\n      if (!this.match(8)) {\n        this.expect(12);\n      }\n    }\n\n    return {\n      members,\n      hasUnknownMembers\n    };\n  }\n\n  flowEnumStringMembers(initializedMembers, defaultedMembers, {\n    enumName\n  }) {\n    if (initializedMembers.length === 0) {\n      return defaultedMembers;\n    } else if (defaultedMembers.length === 0) {\n      return initializedMembers;\n    } else if (defaultedMembers.length > initializedMembers.length) {\n      for (const member of initializedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return defaultedMembers;\n    } else {\n      for (const member of defaultedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return initializedMembers;\n    }\n  }\n\n  flowEnumParseExplicitType({\n    enumName\n  }) {\n    if (this.eatContextual(97)) {\n      if (!tokenIsIdentifier(this.state.type)) {\n        throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: null\n        });\n      }\n\n      const {\n        value\n      } = this.state;\n      this.next();\n\n      if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n        this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: value\n        });\n      }\n\n      return value;\n    }\n\n    return null;\n  }\n\n  flowEnumBody(node, {\n    enumName,\n    nameLoc\n  }) {\n    const explicitType = this.flowEnumParseExplicitType({\n      enumName\n    });\n    this.expect(5);\n    const {\n      members,\n      hasUnknownMembers\n    } = this.flowEnumMembers({\n      enumName,\n      explicitType\n    });\n    node.hasUnknownMembers = hasUnknownMembers;\n\n    switch (explicitType) {\n      case \"boolean\":\n        node.explicitType = true;\n        node.members = members.booleanMembers;\n        this.expect(8);\n        return this.finishNode(node, \"EnumBooleanBody\");\n\n      case \"number\":\n        node.explicitType = true;\n        node.members = members.numberMembers;\n        this.expect(8);\n        return this.finishNode(node, \"EnumNumberBody\");\n\n      case \"string\":\n        node.explicitType = true;\n        node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n          enumName\n        });\n        this.expect(8);\n        return this.finishNode(node, \"EnumStringBody\");\n\n      case \"symbol\":\n        node.members = members.defaultedMembers;\n        this.expect(8);\n        return this.finishNode(node, \"EnumSymbolBody\");\n\n      default:\n        {\n          const empty = () => {\n            node.members = [];\n            this.expect(8);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n\n          node.explicitType = false;\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n              enumName\n            });\n            this.expect(8);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.booleanMembers;\n            this.expect(8);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.numberMembers;\n            this.expect(8);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.flowEnumErrorInconsistentMemberValues(nameLoc, {\n              enumName\n            });\n            return empty();\n          }\n        }\n    }\n  }\n\n  flowParseEnumDeclaration(node) {\n    const id = this.parseIdentifier();\n    node.id = id;\n    node.body = this.flowEnumBody(this.startNode(), {\n      enumName: id.name,\n      nameLoc: id.start\n    });\n    return this.finishNode(node, \"EnumDeclaration\");\n  }\n\n  isLookaheadToken_lt() {\n    const next = this.nextTokenStart();\n\n    if (this.input.charCodeAt(next) === 60) {\n      const afterNext = this.input.charCodeAt(next + 1);\n      return afterNext !== 60 && afterNext !== 61;\n    }\n\n    return false;\n  }\n\n  maybeUnwrapTypeCastExpression(node) {\n    return node.type === \"TypeCastExpression\" ? node.expression : node;\n  }\n\n});\n\nconst entities = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\nconst JsxErrors = makeErrorTemplates({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>.\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n}, ErrorCodes.SyntaxError, \"jsx\");\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = (superClass => class extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.canStartJSXElement) {\n              ++this.state.pos;\n              return this.finishToken(134);\n            }\n\n            return super.getTokenFromCode(ch);\n          }\n\n          out += this.input.slice(chunkStart, this.state.pos);\n          return this.finishToken(133, out);\n\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n\n        case 62:\n        case 125:\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n\n      }\n    }\n  }\n\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(125, out);\n  }\n\n  jsxReadEntity() {\n    let str = \"\";\n    let count = 0;\n    let entity;\n    let ch = this.input[this.state.pos];\n    const startPos = ++this.state.pos;\n\n    while (this.state.pos < this.length && count++ < 10) {\n      ch = this.input[this.state.pos++];\n\n      if (ch === \";\") {\n        if (str[0] === \"#\") {\n          if (str[1] === \"x\") {\n            str = str.substr(2);\n\n            if (HEX_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 16));\n            }\n          } else {\n            str = str.substr(1);\n\n            if (DECIMAL_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 10));\n            }\n          }\n        } else {\n          entity = entities[str];\n        }\n\n        break;\n      }\n\n      str += ch;\n    }\n\n    if (!entity) {\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    return entity;\n  }\n\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n\n    return this.finishToken(132, this.input.slice(start, this.state.pos));\n  }\n\n  jsxParseIdentifier() {\n    const node = this.startNode();\n\n    if (this.match(132)) {\n      node.name = this.state.value;\n    } else if (tokenIsKeyword(this.state.type)) {\n      node.name = tokenLabelName(this.state.type);\n    } else {\n      this.unexpected();\n    }\n\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n\n  jsxParseNamespacedName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(14)) return name;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n\n  jsxParseElementName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n\n    while (this.eat(16)) {\n      const newNode = this.startNodeAt(startPos, startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n\n    return node;\n  }\n\n  jsxParseAttributeValue() {\n    let node;\n\n    switch (this.state.type) {\n      case 5:\n        node = this.startNode();\n        this.setContext(types.brace);\n        this.next();\n        node = this.jsxParseExpressionContainer(node, types.j_oTag);\n\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(node.start, JsxErrors.AttributeIsEmpty);\n        }\n\n        return node;\n\n      case 134:\n      case 125:\n        return this.parseExprAtom();\n\n      default:\n        throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n    }\n  }\n\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n  }\n\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.setContext(types.j_oTag);\n    this.expect(8);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n\n  jsxParseExpressionContainer(node, previousContext) {\n    if (this.match(8)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n\n    this.setContext(previousContext);\n    this.expect(8);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n\n  jsxParseAttribute() {\n    const node = this.startNode();\n\n    if (this.match(5)) {\n      this.setContext(types.brace);\n      this.next();\n      this.expect(21);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.setContext(types.j_oTag);\n      this.expect(8);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(29) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n\n  jsxParseOpeningElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(135)) {\n      this.expect(135);\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n\n    while (!this.match(52) && !this.match(135)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n\n    node.attributes = attributes;\n    node.selfClosing = this.eat(52);\n    this.expect(135);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n\n  jsxParseClosingElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(135)) {\n      this.expect(135);\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    this.expect(135);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n\n  jsxParseElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n    let closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case 134:\n            startPos = this.state.start;\n            startLoc = this.state.startLoc;\n            this.next();\n\n            if (this.eat(52)) {\n              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n\n            children.push(this.jsxParseElementAt(startPos, startLoc));\n            break;\n\n          case 133:\n            children.push(this.parseExprAtom());\n            break;\n\n          case 5:\n            {\n              const node = this.startNode();\n              this.setContext(types.brace);\n              this.next();\n\n              if (this.match(21)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node, types.j_expr));\n              }\n\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      if (isFragment(openingElement) && !isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n        }\n      }\n    }\n\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n\n    node.children = children;\n\n    if (this.match(45)) {\n      throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\n    }\n\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n\n  jsxParseElement() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startPos, startLoc);\n  }\n\n  setContext(newContext) {\n    const {\n      context\n    } = this.state;\n    context[context.length - 1] = newContext;\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(133)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(134)) {\n      return this.jsxParseElement();\n    } else if (this.match(45) && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.replaceToken(134);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  skipSpace() {\n    const curContext = this.curContext();\n    if (!curContext.preserveSpace) super.skipSpace();\n  }\n\n  getTokenFromCode(code) {\n    const context = this.curContext();\n\n    if (context === types.j_expr) {\n      return this.jsxReadToken();\n    }\n\n    if (context === types.j_oTag || context === types.j_cTag) {\n      if (isIdentifierStart(code)) {\n        return this.jsxReadWord();\n      }\n\n      if (code === 62) {\n        ++this.state.pos;\n        return this.finishToken(135);\n      }\n\n      if ((code === 34 || code === 39) && context === types.j_oTag) {\n        return this.jsxReadString(code);\n      }\n    }\n\n    if (code === 60 && this.state.canStartJSXElement && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      return this.finishToken(134);\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  updateContext(prevType) {\n    const {\n      context,\n      type\n    } = this.state;\n\n    if (type === 52 && prevType === 134) {\n      context.splice(-2, 2, types.j_cTag);\n      this.state.canStartJSXElement = false;\n    } else if (type === 134) {\n      context.push(types.j_oTag);\n    } else if (type === 135) {\n      const out = context[context.length - 1];\n\n      if (out === types.j_oTag && prevType === 52 || out === types.j_cTag) {\n        context.pop();\n        this.state.canStartJSXElement = context[context.length - 1] === types.j_expr;\n      } else {\n        this.setContext(types.j_expr);\n        this.state.canStartJSXElement = true;\n      }\n    } else {\n      this.state.canStartJSXElement = tokenComesBeforeExpression(type);\n    }\n  }\n\n});\n\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = new Set();\n    this.enums = new Set();\n    this.constEnums = new Set();\n    this.classes = new Set();\n    this.exportOnlyBindings = new Set();\n  }\n\n}\n\nclass TypeScriptScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n\n      scope.types.add(name);\n    }\n\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.add(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.add(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.add(name);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.has(name)) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.has(name);\n        return isConst !== wasConst;\n      }\n\n      return true;\n    }\n\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.has(name)) {\n      if (scope.lexical.has(name)) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n\n    if (bindingType & BIND_KIND_TYPE && scope.types.has(name)) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id) {\n    const topLevelScope = this.scopeStack[0];\n    const {\n      name\n    } = id;\n\n    if (!topLevelScope.types.has(name) && !topLevelScope.exportOnlyBindings.has(name)) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nconst TSErrors = makeErrorTemplates({\n  AbstractMethodHasImplementation: \"Method '%0' cannot have an implementation because it is marked abstract.\",\n  AbstractPropertyHasInitializer: \"Property '%0' cannot have an initializer because it is marked abstract.\",\n  AccesorCannotDeclareThisParameter: \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: \"'declare' is not allowed in %0ters.\",\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'.\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  IncompatibleModifiers: \"'%0' modifier cannot be used with '%1' modifier.\",\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0').\",\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride: \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier.\",\n  InvalidModifierOnTypeMember: \"'%0' modifier cannot appear on a type member.\",\n  InvalidModifiersOrder: \"'%0' modifier must precede '%1' modifier.\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MissingInterfaceName: \"'interface' declarations must be followed by an identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass: \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0').\",\n  ReadonlyForMethodSignature: \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  ReservedArrowTypeParam: \"This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma, as in `<T,>() => ...`.\",\n  ReservedTypeAssertion: \"This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.\",\n  SetAccesorCannotHaveOptionalParameter: \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccesorCannotHaveRestParameter: \"A 'set' accessor cannot have rest parameter.\",\n  SetAccesorCannotHaveReturnType: \"A 'set' accessor cannot have a return type annotation.\",\n  StaticBlockCannotHaveModifier: \"Static class blocks cannot have any modifier.\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed: \"A type-only import can specify a default import or named bindings, but not both.\",\n  TypeModifierIsUsedInTypeExports: \"The 'type' modifier cannot be used on a named export when 'export type' is used on its export statement.\",\n  TypeModifierIsUsedInTypeImports: \"The 'type' modifier cannot be used on a named import when 'import type' is used on its import statement.\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0.\"\n}, ErrorCodes.SyntaxError, \"typescript\");\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier) {\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\n}\n\nvar typescript = (superClass => class extends superClass {\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n\n  tsIsIdentifier() {\n    return tokenIsIdentifier(this.state.type);\n  }\n\n  tsTokenCanFollowModifier() {\n    return (this.match(0) || this.match(5) || this.match(51) || this.match(21) || this.match(130) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return this.tsTokenCanFollowModifier();\n  }\n\n  tsParseModifier(allowedModifiers, stopOnStartOfClassStaticBlock) {\n    if (!tokenIsIdentifier(this.state.type)) {\n      return undefined;\n    }\n\n    const modifier = this.state.value;\n\n    if (allowedModifiers.indexOf(modifier) !== -1) {\n      if (stopOnStartOfClassStaticBlock && this.tsIsStartOfStaticBlocks()) {\n        return undefined;\n      }\n\n      if (this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n        return modifier;\n      }\n    }\n\n    return undefined;\n  }\n\n  tsParseModifiers(modified, allowedModifiers, disallowedModifiers, errorTemplate, stopOnStartOfClassStaticBlock) {\n    const enforceOrder = (pos, modifier, before, after) => {\n      if (modifier === before && modified[after]) {\n        this.raise(pos, TSErrors.InvalidModifiersOrder, before, after);\n      }\n    };\n\n    const incompatible = (pos, modifier, mod1, mod2) => {\n      if (modified[mod1] && modifier === mod2 || modified[mod2] && modifier === mod1) {\n        this.raise(pos, TSErrors.IncompatibleModifiers, mod1, mod2);\n      }\n    };\n\n    for (;;) {\n      const startPos = this.state.start;\n      const modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []), stopOnStartOfClassStaticBlock);\n      if (!modifier) break;\n\n      if (tsIsAccessModifier(modifier)) {\n        if (modified.accessibility) {\n          this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n        } else {\n          enforceOrder(startPos, modifier, modifier, \"override\");\n          enforceOrder(startPos, modifier, modifier, \"static\");\n          enforceOrder(startPos, modifier, modifier, \"readonly\");\n          modified.accessibility = modifier;\n        }\n      } else {\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n        } else {\n          enforceOrder(startPos, modifier, \"static\", \"readonly\");\n          enforceOrder(startPos, modifier, \"static\", \"override\");\n          enforceOrder(startPos, modifier, \"override\", \"readonly\");\n          enforceOrder(startPos, modifier, \"abstract\", \"override\");\n          incompatible(startPos, modifier, \"declare\", \"override\");\n          incompatible(startPos, modifier, \"static\", \"abstract\");\n        }\n\n        modified[modifier] = true;\n      }\n\n      if (disallowedModifiers != null && disallowedModifiers.includes(modifier)) {\n        this.raise(startPos, errorTemplate, modifier);\n      }\n    }\n  }\n\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(8);\n\n      case \"HeritageClauseElement\":\n        return this.match(5);\n\n      case \"TupleElementTypes\":\n        return this.match(3);\n\n      case \"TypeParametersOrArguments\":\n        return this.match(46);\n    }\n\n    throw new Error(\"Unreachable\");\n  }\n\n  tsParseList(kind, parseElement) {\n    const result = [];\n\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n\n    return result;\n  }\n\n  tsParseDelimitedList(kind, parseElement, refTrailingCommaPos) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true, refTrailingCommaPos));\n  }\n\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess, refTrailingCommaPos) {\n    const result = [];\n    let trailingCommaPos = -1;\n\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      trailingCommaPos = -1;\n      const element = parseElement();\n\n      if (element == null) {\n        return undefined;\n      }\n\n      result.push(element);\n\n      if (this.eat(12)) {\n        trailingCommaPos = this.state.lastTokStart;\n        continue;\n      }\n\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      if (expectSuccess) {\n        this.expect(12);\n      }\n\n      return undefined;\n    }\n\n    if (refTrailingCommaPos) {\n      refTrailingCommaPos.value = trailingCommaPos;\n    }\n\n    return result;\n  }\n\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken, refTrailingCommaPos) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(0);\n      } else {\n        this.expect(45);\n      }\n    }\n\n    const result = this.tsParseDelimitedList(kind, parseElement, refTrailingCommaPos);\n\n    if (bracket) {\n      this.expect(3);\n    } else {\n      this.expect(46);\n    }\n\n    return result;\n  }\n\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(79);\n    this.expect(10);\n\n    if (!this.match(125)) {\n      this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n    }\n\n    node.argument = this.parseExprAtom();\n    this.expect(11);\n\n    if (this.eat(16)) {\n      node.qualifier = this.tsParseEntityName(true);\n    }\n\n    if (this.match(45)) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSImportType\");\n  }\n\n  tsParseEntityName(allowReservedWords) {\n    let entity = this.parseIdentifier();\n\n    while (this.eat(16)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n\n    return entity;\n  }\n\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName(false);\n\n    if (!this.hasPrecedingLineBreak() && this.match(45)) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(83);\n\n    if (this.match(79)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName(true);\n    }\n\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n\n  tsParseTypeParameter() {\n    const node = this.startNode();\n    node.name = this.tsParseTypeParameterName();\n    node.constraint = this.tsEatThenParseType(77);\n    node.default = this.tsEatThenParseType(29);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsTryParseTypeParameters() {\n    if (this.match(45)) {\n      return this.tsParseTypeParameters();\n    }\n  }\n\n  tsParseTypeParameters() {\n    const node = this.startNode();\n\n    if (this.match(45) || this.match(134)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    const refTrailingCommaPos = {\n      value: -1\n    };\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true, refTrailingCommaPos);\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeParameters);\n    }\n\n    if (refTrailingCommaPos.value !== -1) {\n      this.addExtra(node, \"trailingComma\", refTrailingCommaPos.value);\n    }\n\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n\n  tsTryNextParseConstantContext() {\n    if (this.lookahead().type === 71) {\n      this.next();\n      return this.tsParseTypeReference();\n    }\n\n    return null;\n  }\n\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === 19;\n    signature.typeParameters = this.tsTryParseTypeParameters();\n    this.expect(10);\n    signature.parameters = this.tsParseBindingListForSignature();\n\n    if (returnTokenRequired) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n\n  tsParseBindingListForSignature() {\n    return this.parseBindingList(11, 41).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\n      }\n\n      return pattern;\n    });\n  }\n\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(12) && !this.isLineTerminator()) {\n      this.expect(13);\n    }\n  }\n\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(14, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n\n    if (tokenIsIdentifier(this.state.type)) {\n      this.next();\n      return this.match(14);\n    }\n\n    return false;\n  }\n\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(0) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n\n    this.expect(0);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(3);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(17)) node.optional = true;\n    const nodeAny = node;\n\n    if (this.match(10) || this.match(45)) {\n      if (readonly) {\n        this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\n      }\n\n      const method = nodeAny;\n\n      if (method.kind && this.match(45)) {\n        this.raise(this.state.pos, TSErrors.AccesorCannotHaveTypeParameters);\n      }\n\n      this.tsFillSignature(14, method);\n      this.tsParseTypeMemberSemicolon();\n\n      if (method.kind === \"get\") {\n        if (method.parameters.length > 0) {\n          this.raise(this.state.pos, ErrorMessages.BadGetterArity);\n\n          if (this.isThisParam(method.parameters[0])) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n        }\n      } else if (method.kind === \"set\") {\n        if (method.parameters.length !== 1) {\n          this.raise(this.state.pos, ErrorMessages.BadSetterArity);\n        } else {\n          const firstParameter = method.parameters[0];\n\n          if (this.isThisParam(firstParameter)) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n\n          if (firstParameter.type === \"Identifier\" && firstParameter.optional) {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveOptionalParameter);\n          }\n\n          if (firstParameter.type === \"RestElement\") {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveRestParameter);\n          }\n        }\n\n        if (method.typeAnnotation) {\n          this.raise(method.typeAnnotation.start, TSErrors.SetAccesorCannotHaveReturnType);\n        }\n      } else {\n        method.kind = \"method\";\n      }\n\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n\n  tsParseTypeMember() {\n    const node = this.startNode();\n\n    if (this.match(10) || this.match(45)) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n\n    if (this.match(73)) {\n      const id = this.startNode();\n      this.next();\n\n      if (this.match(10) || this.match(45)) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n\n    this.tsParseModifiers(node, [\"readonly\"], [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\", \"override\"], TSErrors.InvalidModifierOnTypeMember);\n    const idx = this.tsTryParseIndexSignature(node);\n\n    if (idx) {\n      return idx;\n    }\n\n    this.parsePropertyName(node);\n\n    if (!node.computed && node.key.type === \"Identifier\" && (node.key.name === \"get\" || node.key.name === \"set\") && this.tsTokenCanFollowModifier()) {\n      node.kind = node.key.name;\n      this.parsePropertyName(node);\n    }\n\n    return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n  }\n\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n\n  tsParseObjectTypeMembers() {\n    this.expect(5);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(8);\n    return members;\n  }\n\n  tsIsStartOfMappedType() {\n    this.next();\n\n    if (this.eat(49)) {\n      return this.isContextual(114);\n    }\n\n    if (this.isContextual(114)) {\n      this.next();\n    }\n\n    if (!this.match(0)) {\n      return false;\n    }\n\n    this.next();\n\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n\n    this.next();\n    return this.match(54);\n  }\n\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.tsParseTypeParameterName();\n    node.constraint = this.tsExpectThenParseType(54);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(5);\n\n    if (this.match(49)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(114);\n    } else if (this.eatContextual(114)) {\n      node.readonly = true;\n    }\n\n    this.expect(0);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(89) ? this.tsParseType() : null;\n    this.expect(3);\n\n    if (this.match(49)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(17);\n    } else if (this.eat(17)) {\n      node.optional = true;\n    }\n\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(8);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n\n      let {\n        type\n      } = elementNode;\n\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n      }\n\n      seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\n\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        type = elementNode.type;\n      }\n\n      const isLabeled = type === \"TSNamedTupleMember\";\n      labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\n\n      if (labeledElements !== isLabeled) {\n        this.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n\n  tsParseTupleElementType() {\n    const {\n      start: startPos,\n      startLoc\n    } = this.state;\n    const rest = this.eat(21);\n    let type = this.tsParseType();\n    const optional = this.eat(17);\n    const labeled = this.eat(14);\n\n    if (labeled) {\n      const labeledNode = this.startNodeAtNode(type);\n      labeledNode.optional = optional;\n\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n        labeledNode.label = type.typeName;\n      } else {\n        this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n        labeledNode.label = type;\n      }\n\n      labeledNode.elementType = this.tsParseType();\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n\n    if (rest) {\n      const restNode = this.startNodeAt(startPos, startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n\n    return type;\n  }\n\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(10);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(11);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n\n  tsParseFunctionOrConstructorType(type, abstract) {\n    const node = this.startNode();\n\n    if (type === \"TSConstructorType\") {\n      node.abstract = !!abstract;\n      if (abstract) this.next();\n      this.next();\n    }\n\n    this.tsFillSignature(19, node);\n    return this.finishNode(node, type);\n  }\n\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n\n    node.literal = (() => {\n      switch (this.state.type) {\n        case 126:\n        case 127:\n        case 125:\n        case 81:\n        case 82:\n          return this.parseExprAtom();\n\n        default:\n          throw this.unexpected();\n      }\n    })();\n\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = this.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n\n    if (this.isContextual(109) && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case 125:\n      case 126:\n      case 127:\n      case 81:\n      case 82:\n        return this.tsParseLiteralTypeNode();\n\n      case 49:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n\n          if (nextToken.type !== 126 && nextToken.type !== 127) {\n            throw this.unexpected();\n          }\n\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n\n        break;\n\n      case 74:\n        return this.tsParseThisTypeOrThisTypePredicate();\n\n      case 83:\n        return this.tsParseTypeQuery();\n\n      case 79:\n        return this.tsParseImportType();\n\n      case 5:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n      case 0:\n        return this.tsParseTupleType();\n\n      case 10:\n        return this.tsParseParenthesizedType();\n\n      case 25:\n      case 24:\n        return this.tsParseTemplateLiteralType();\n\n      default:\n        {\n          const {\n            type\n          } = this.state;\n\n          if (tokenIsIdentifier(type) || type === 84 || type === 80) {\n            const nodeType = type === 84 ? \"TSVoidKeyword\" : type === 80 ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n            if (nodeType !== undefined && this.lookaheadCharCode() !== 46) {\n              const node = this.startNode();\n              this.next();\n              return this.finishNode(node, nodeType);\n            }\n\n            return this.tsParseTypeReference();\n          }\n        }\n    }\n\n    throw this.unexpected();\n  }\n\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n\n    while (!this.hasPrecedingLineBreak() && this.eat(0)) {\n      if (this.match(3)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(3);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(3);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n\n    return type;\n  }\n\n  tsParseTypeOperator() {\n    const node = this.startNode();\n    const operator = this.state.value;\n    this.next();\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n\n      default:\n        this.raise(node.start, TSErrors.UnexpectedReadonly);\n    }\n  }\n\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(108);\n    const typeParameter = this.startNode();\n    typeParameter.name = this.tsParseTypeParameterName();\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n\n  tsParseTypeOperatorOrHigher() {\n    const isTypeOperator = tokenIsTSTypeOperator(this.state.type) && !this.state.containsEsc;\n    return isTypeOperator ? this.tsParseTypeOperator() : this.isContextual(108) ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n  }\n\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    const node = this.startNode();\n    const hasLeadingOperator = this.eat(operator);\n    const types = [];\n\n    do {\n      types.push(parseConstituentType());\n    } while (this.eat(operator));\n\n    if (types.length === 1 && !hasLeadingOperator) {\n      return types[0];\n    }\n\n    node.types = types;\n    return this.finishNode(node, kind);\n  }\n\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), 43);\n  }\n\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), 41);\n  }\n\n  tsIsStartOfFunctionType() {\n    if (this.match(45)) {\n      return true;\n    }\n\n    return this.match(10) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n\n  tsSkipParameterStart() {\n    if (tokenIsIdentifier(this.state.type) || this.match(74)) {\n      this.next();\n      return true;\n    }\n\n    if (this.match(5)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(5)) {\n          ++braceStackCounter;\n        } else if (this.match(8)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    if (this.match(0)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(0)) {\n          ++braceStackCounter;\n        } else if (this.match(3)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n\n    if (this.match(11) || this.match(21)) {\n      return true;\n    }\n\n    if (this.tsSkipParameterStart()) {\n      if (this.match(14) || this.match(12) || this.match(17) || this.match(29)) {\n        return true;\n      }\n\n      if (this.match(11)) {\n        this.next();\n\n        if (this.match(19)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const node = this.startNode();\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n\n      if (asserts && this.match(74)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n\n        if (thisTypePredicate.type === \"TSThisType\") {\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          node.typeAnnotation = null;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          this.resetStartLocationFromNode(thisTypePredicate, node);\n          thisTypePredicate.asserts = true;\n        }\n\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        node.typeAnnotation = null;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const type = this.tsParseTypeAnnotation(false);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(14) ? this.tsParseTypeOrTypePredicateAnnotation(14) : undefined;\n  }\n\n  tsTryParseTypeAnnotation() {\n    return this.match(14) ? this.tsParseTypeAnnotation() : undefined;\n  }\n\n  tsTryParseType() {\n    return this.tsEatThenParseType(14);\n  }\n\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n\n    if (this.isContextual(109) && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n\n  tsParseTypePredicateAsserts() {\n    if (this.state.type !== 102) {\n      return false;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.next();\n\n    if (!tokenIsIdentifier(this.state.type) && !this.match(74)) {\n      return false;\n    }\n\n    if (containsEsc) {\n      this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\n    }\n\n    return true;\n  }\n\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(14);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n\n    if (this.hasPrecedingLineBreak() || !this.eat(77)) {\n      return type;\n    }\n\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsParseNonConditionalType();\n    this.expect(17);\n    node.trueType = this.tsParseType();\n    this.expect(14);\n    node.falseType = this.tsParseType();\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n\n  isAbstractConstructorSignature() {\n    return this.isContextual(116) && this.lookahead().type === 73;\n  }\n\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n\n    if (this.match(73)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    } else if (this.isAbstractConstructorSignature()) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\", true);\n    }\n\n    return this.tsParseUnionTypeOrHigher();\n  }\n\n  tsParseTypeAssertion() {\n    if (this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")) {\n      this.raise(this.state.start, TSErrors.ReservedTypeAssertion);\n    }\n\n    const node = this.startNode();\n\n    const _const = this.tsTryNextParseConstantContext();\n\n    node.typeAnnotation = _const || this.tsNextThenParseType();\n    this.expect(46);\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n\n  tsParseHeritageClause(descriptor) {\n    const originalStart = this.state.start;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\n\n    if (!delimitedList.length) {\n      this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n    }\n\n    return delimitedList;\n  }\n\n  tsParseExpressionWithTypeArguments() {\n    const node = this.startNode();\n    node.expression = this.tsParseEntityName(false);\n\n    if (this.match(45)) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n  }\n\n  tsParseInterfaceDeclaration(node) {\n    if (tokenIsIdentifier(this.state.type)) {\n      node.id = this.parseIdentifier();\n      this.checkLVal(node.id, \"typescript interface declaration\", BIND_TS_INTERFACE);\n    } else {\n      node.id = null;\n      this.raise(this.state.start, TSErrors.MissingInterfaceName);\n    }\n\n    node.typeParameters = this.tsTryParseTypeParameters();\n\n    if (this.eat(77)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n    node.typeAnnotation = this.tsInType(() => {\n      this.expect(29);\n\n      if (this.isContextual(107) && this.lookahead().type !== 16) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(125) ? this.parseExprAtom() : this.parseIdentifier(true);\n\n    if (this.eat(29)) {\n      node.initializer = this.parseMaybeAssignAllowIn();\n    }\n\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n\n  tsParseEnumDeclaration(node, isConst) {\n    if (isConst) node.const = true;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript enum declaration\", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(5);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(8);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(5);\n    this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, 8);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n\n    if (!nested) {\n      this.checkLVal(node.id, \"module or namespace declaration\", BIND_TS_NAMESPACE);\n    }\n\n    if (this.eat(16)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(105)) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(125)) {\n      node.id = this.parseExprAtom();\n    } else {\n      this.unexpected();\n    }\n\n    if (this.match(5)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n    this.expect(29);\n    const moduleReference = this.tsParseModuleReference();\n\n    if (node.importKind === \"type\" && moduleReference.type !== \"TSExternalModuleReference\") {\n      this.raise(moduleReference.start, TSErrors.ImportAliasHasImportType);\n    }\n\n    node.moduleReference = moduleReference;\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n\n  tsIsExternalModuleReference() {\n    return this.isContextual(112) && this.lookaheadCharCode() === 40;\n  }\n\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(112);\n    this.expect(10);\n\n    if (!this.match(125)) {\n      throw this.unexpected();\n    }\n\n    node.expression = this.parseExprAtom();\n    this.expect(11);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n\n    let starttype = this.state.type;\n    let kind;\n\n    if (this.isContextual(95)) {\n      starttype = 70;\n      kind = \"let\";\n    }\n\n    return this.tsInAmbientContext(() => {\n      switch (starttype) {\n        case 64:\n          nany.declare = true;\n          return this.parseFunctionStatement(nany, false, true);\n\n        case 76:\n          nany.declare = true;\n          return this.parseClass(nany, true, false);\n\n        case 71:\n          if (this.match(71) && this.isLookaheadContextual(\"enum\")) {\n            this.expect(71);\n            this.expectContextual(118);\n            return this.tsParseEnumDeclaration(nany, true);\n          }\n\n        case 70:\n          kind = kind || this.state.value;\n          return this.parseVarStatement(nany, kind);\n\n        case 105:\n          return this.tsParseAmbientExternalModuleDeclaration(nany);\n\n        default:\n          {\n            if (tokenIsIdentifier(starttype)) {\n              return this.tsParseDeclaration(nany, this.state.value, true);\n            }\n          }\n      }\n    });\n  }\n\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n  }\n\n  tsParseExpressionStatement(node, expr) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n\n          break;\n        }\n\n      case \"global\":\n        if (this.match(5)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n\n        break;\n\n      default:\n        return this.tsParseDeclaration(node, expr.name, false);\n    }\n  }\n\n  tsParseDeclaration(node, value, next) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminator(next) && (this.match(76) || tokenIsIdentifier(this.state.type))) {\n          return this.tsParseAbstractDeclaration(node);\n        }\n\n        break;\n\n      case \"enum\":\n        if (next || tokenIsIdentifier(this.state.type)) {\n          if (next) this.next();\n          return this.tsParseEnumDeclaration(node, false);\n        }\n\n        break;\n\n      case \"interface\":\n        if (this.tsCheckLineTerminator(next) && tokenIsIdentifier(this.state.type)) {\n          return this.tsParseInterfaceDeclaration(node);\n        }\n\n        break;\n\n      case \"module\":\n        if (this.tsCheckLineTerminator(next)) {\n          if (this.match(125)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (tokenIsIdentifier(this.state.type)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n        }\n\n        break;\n\n      case \"namespace\":\n        if (this.tsCheckLineTerminator(next) && tokenIsIdentifier(this.state.type)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"type\":\n        if (this.tsCheckLineTerminator(next) && tokenIsIdentifier(this.state.type)) {\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n\n        break;\n    }\n  }\n\n  tsCheckLineTerminator(next) {\n    if (next) {\n      if (this.hasFollowingLineBreak()) return false;\n      this.next();\n      return true;\n    }\n\n    return !this.isLineTerminator();\n  }\n\n  tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n    if (!this.match(45)) {\n      return undefined;\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = this.tsParseTypeParameters();\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(19);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    if (!res) {\n      return undefined;\n    }\n\n    return this.parseArrowExpression(res, null, true);\n  }\n\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expect(45);\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeArguments);\n    }\n\n    this.expect(46);\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n\n  tsIsDeclarationStart() {\n    return tokenIsTSDeclarationStart(this.state.type);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let accessibility;\n    let readonly = false;\n    let override = false;\n\n    if (allowModifiers !== undefined) {\n      const modified = {};\n      this.tsParseModifiers(modified, [\"public\", \"private\", \"protected\", \"override\", \"readonly\"]);\n      accessibility = modified.accessibility;\n      override = modified.override;\n      readonly = modified.readonly;\n\n      if (allowModifiers === false && (accessibility || readonly || override)) {\n        this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n      }\n    }\n\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (accessibility || readonly || override) {\n      const pp = this.startNodeAt(startPos, startLoc);\n\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n      if (override) pp.override = override;\n\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n      }\n\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(14)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(14);\n    }\n\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" || type === \"ClassPrivateMethod\" ? \"TSDeclareMethod\" : undefined;\n\n    if (bodilessType && !this.match(5) && this.isLineTerminator()) {\n      this.finishNode(node, bodilessType);\n      return;\n    }\n\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n      this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n\n      if (node.declare) {\n        super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        return;\n      }\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(...arguments);\n    }\n  }\n\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);\n      }\n    });\n  }\n\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n\n  parseArrayLike(...args) {\n    const node = super.parseArrayLike(...args);\n\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(35)) {\n      this.state.canStartJSXElement = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startPos, startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n\n    let isOptionalCall = false;\n\n    if (this.match(18) && this.lookaheadCharCode() === 60) {\n      if (noCalls) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = isOptionalCall = true;\n      this.next();\n    }\n\n    if (this.match(45)) {\n      let missingParenErrorPos;\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (typeArguments) {\n          if (isOptionalCall && !this.match(10)) {\n            missingParenErrorPos = this.state.pos;\n            this.unexpected();\n          }\n\n          if (!noCalls && this.eat(10)) {\n            node.arguments = this.parseCallExpressionArguments(11, false);\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n            node.typeParameters = typeArguments;\n\n            if (state.optionalChainMember) {\n              node.optional = isOptionalCall;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          } else if (tokenIsTemplate(this.state.type)) {\n            const result = this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n            result.typeParameters = typeArguments;\n            return result;\n          }\n        }\n\n        this.unexpected();\n      });\n\n      if (missingParenErrorPos) {\n        this.unexpected(missingParenErrorPos, 10);\n      }\n\n      if (result) return result;\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n  }\n\n  parseNewArguments(node) {\n    if (this.match(45)) {\n      const typeParameters = this.tsTryParseAndCatch(() => {\n        const args = this.tsParseTypeArguments();\n        if (!this.match(10)) this.unexpected();\n        return args;\n      });\n\n      if (typeParameters) {\n        node.typeParameters = typeParameters;\n      }\n    }\n\n    super.parseNewArguments(node);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (tokenOperatorPrecedence(54) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(89)) {\n      const node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.expression = left;\n\n      const _const = this.tsTryNextParseConstantContext();\n\n      if (_const) {\n        node.typeAnnotation = _const;\n      } else {\n        node.typeAnnotation = this.tsNextThenParseType();\n      }\n\n      this.finishNode(node, \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\n\n  checkDuplicateExports() {}\n\n  parseImport(node) {\n    node.importKind = \"value\";\n\n    if (tokenIsIdentifier(this.state.type) || this.match(51) || this.match(5)) {\n      let ahead = this.lookahead();\n\n      if (this.isContextual(122) && ahead.type !== 12 && ahead.type !== 93 && ahead.type !== 29) {\n        node.importKind = \"type\";\n        this.next();\n        ahead = this.lookahead();\n      }\n\n      if (tokenIsIdentifier(this.state.type) && ahead.type === 29) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n    }\n\n    const importNode = super.parseImport(node);\n\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(importNode.start, TSErrors.TypeImportCannotSpecifyDefaultAndNamed);\n    }\n\n    return importNode;\n  }\n\n  parseExport(node) {\n    if (this.match(79)) {\n      this.next();\n\n      if (this.isContextual(122) && this.lookaheadCharCode() !== 61) {\n        node.importKind = \"type\";\n        this.next();\n      } else {\n        node.importKind = \"value\";\n      }\n\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(29)) {\n      const assign = node;\n      assign.expression = this.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(89)) {\n      const decl = node;\n      this.expectContextual(120);\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      if (this.isContextual(122) && this.lookahead().type === 5) {\n        this.next();\n        node.exportKind = \"type\";\n      } else {\n        node.exportKind = \"value\";\n      }\n\n      return super.parseExport(node);\n    }\n  }\n\n  isAbstractClass() {\n    return this.isContextual(116) && this.lookahead().type === 76;\n  }\n\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      cls.abstract = true;\n      this.parseClass(cls, true, true);\n      return cls;\n    }\n\n    if (this.match(121)) {\n      const interfaceNode = this.startNode();\n      this.next();\n      const result = this.tsParseInterfaceDeclaration(interfaceNode);\n      if (result) return result;\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseStatementContent(context, topLevel) {\n    if (this.state.type === 71) {\n      const ahead = this.lookahead();\n\n      if (ahead.type === 118) {\n        const node = this.startNode();\n        this.next();\n        this.expectContextual(118);\n        return this.tsParseEnumDeclaration(node, true);\n      }\n    }\n\n    return super.parseStatementContent(context, topLevel);\n  }\n\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n\n  tsHasSomeModifiers(member, modifiers) {\n    return modifiers.some(modifier => {\n      if (tsIsAccessModifier(modifier)) {\n        return member.accessibility === modifier;\n      }\n\n      return !!member[modifier];\n    });\n  }\n\n  tsIsStartOfStaticBlocks() {\n    return this.isContextual(100) && this.lookaheadCharCode() === 123;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const modifiers = [\"declare\", \"private\", \"public\", \"protected\", \"override\", \"abstract\", \"readonly\", \"static\"];\n    this.tsParseModifiers(member, modifiers, undefined, undefined, true);\n\n    const callParseClassMemberWithIsStatic = () => {\n      if (this.tsIsStartOfStaticBlocks()) {\n        this.next();\n        this.next();\n\n        if (this.tsHasSomeModifiers(member, modifiers)) {\n          this.raise(this.state.pos, TSErrors.StaticBlockCannotHaveModifier);\n        }\n\n        this.parseClassStaticBlock(classBody, member);\n      } else {\n        this.parseClassMemberWithIsStatic(classBody, member, state, !!member.static);\n      }\n    };\n\n    if (member.declare) {\n      this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n    } else {\n      callParseClassMemberWithIsStatic();\n    }\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const idx = this.tsTryParseIndexSignature(member);\n\n    if (idx) {\n      classBody.body.push(idx);\n\n      if (member.abstract) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n      }\n\n      if (member.accessibility) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\n      }\n\n      if (member.declare) {\n        this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n      }\n\n      if (member.override) {\n        this.raise(member.start, TSErrors.IndexSignatureHasOverride);\n      }\n\n      return;\n    }\n\n    if (!this.state.inAbstractClass && member.abstract) {\n      this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n    }\n\n    if (member.override) {\n      if (!state.hadSuperClass) {\n        this.raise(member.start, TSErrors.OverrideNotInSubClass);\n      }\n    }\n\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(17);\n    if (optional) methodOrProp.optional = true;\n\n    if (methodOrProp.readonly && this.match(10)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n    }\n\n    if (methodOrProp.declare && this.match(10)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n    }\n  }\n\n  parseExpressionStatement(node, expr) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n    return decl || super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (!this.state.maybeInArrowParameters || !this.match(17)) {\n      return super.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n    }\n\n    const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n    if (!result.node) {\n      if (result.error) {\n        super.setOptionalParametersError(refExpressionErrors, result.error);\n      }\n\n      return expr;\n    }\n\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(17)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(14)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  parseExportDeclaration(node) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(117);\n\n    if (isDeclare && (this.isContextual(117) || !this.shouldParseExportDeclaration())) {\n      throw this.raise(this.state.start, TSErrors.ExpectedAmbientAfterExportDeclare);\n    }\n\n    let declaration;\n\n    if (tokenIsIdentifier(this.state.type)) {\n      declaration = this.tsTryParseExportDeclaration();\n    }\n\n    if (!declaration) {\n      declaration = super.parseExportDeclaration(node);\n    }\n\n    if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\n      node.exportKind = \"type\";\n    }\n\n    if (declaration && isDeclare) {\n      this.resetStartLocation(declaration, startPos, startLoc);\n      declaration.declare = true;\n    }\n\n    return declaration;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    if ((!isStatement || optionalId) && this.isContextual(106)) {\n      return;\n    }\n\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional && this.eat(35)) {\n      node.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n\n    if (this.state.isAmbientContext && this.match(29)) {\n      this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n    }\n\n    if (node.abstract && this.match(29)) {\n      const {\n        key\n      } = node;\n      this.raise(this.state.start, TSErrors.AbstractPropertyHasInitializer, key.type === \"Identifier\" && !node.computed ? key.name : `[${this.input.slice(key.start, key.end)}]`);\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n    }\n\n    if (node.accessibility) {\n      this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\n    }\n\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters();\n\n    if (typeParameters && isConstructor) {\n      this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n    }\n\n    if (method.declare && (method.kind === \"get\" || method.kind === \"set\")) {\n      this.raise(method.start, TSErrors.DeclareAccessor, method.kind);\n    }\n\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  declareClassPrivateMethodInScope(node, kind) {\n    if (node.type === \"TSDeclareMethod\") return;\n    if (node.type === \"MethodDefinition\" && !node.value.body) return;\n    super.declareClassPrivateMethodInScope(node, kind);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.match(45)) {\n      node.superTypeParameters = this.tsParseTypeArguments();\n    }\n\n    if (this.eatContextual(106)) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n\n  parseObjPropValue(prop, ...args) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) prop.typeParameters = typeParameters;\n    super.parseObjPropValue(prop, ...args);\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (decl.id.type === \"Identifier\" && this.eat(35)) {\n      decl.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(14)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  parseMaybeAssign(...args) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n    let state;\n    let jsx;\n    let typeCast;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(134) || this.match(45))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n      const currentContext = context[context.length - 1];\n\n      if (currentContext === types.j_oTag || currentContext === types.j_expr) {\n        context.pop();\n      }\n    }\n\n    if (!((_jsx = jsx) != null && _jsx.error) && !this.match(45)) {\n      return super.parseMaybeAssign(...args);\n    }\n\n    let typeParameters;\n    state = state || this.state.clone();\n    const arrow = this.tryParse(abort => {\n      var _expr$extra, _typeParameters;\n\n      typeParameters = this.tsParseTypeParameters();\n      const expr = super.parseMaybeAssign(...args);\n\n      if (expr.type !== \"ArrowFunctionExpression\" || (_expr$extra = expr.extra) != null && _expr$extra.parenthesized) {\n        abort();\n      }\n\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n\n    if (!arrow.error && !arrow.aborted) {\n      if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n      return arrow.node;\n    }\n\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n\n    if ((_jsx2 = jsx) != null && _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n\n    if (arrow.node) {\n      this.state = arrow.failState;\n      if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n      return arrow.node;\n    }\n\n    if ((_typeCast = typeCast) != null && _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n\n    if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) != null && _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n\n  reportReservedArrowTypeParam(node) {\n    var _node$extra;\n\n    if (node.params.length === 1 && !((_node$extra = node.extra) != null && _node$extra.trailingComma) && this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")) {\n      this.raise(node.start, TSErrors.ReservedArrowTypeParam);\n    }\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (!this.hasPlugin(\"jsx\") && this.match(45)) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors);\n    }\n  }\n\n  parseArrow(node) {\n    if (this.match(14)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(14);\n        if (this.canInsertSemicolon() || !this.match(19)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n\n    return super.parseArrow(node);\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(17)) {\n      if (param.type !== \"Identifier\" && !this.state.isAmbientContext && !this.state.inType) {\n        this.raise(param.start, TSErrors.PatternIsOptional);\n      }\n\n      param.optional = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return this.isAssignable(node.expression, isBinding);\n\n      case \"TSParameterProperty\":\n        return true;\n\n      default:\n        return super.isAssignable(node, isBinding);\n    }\n  }\n\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n\n      case \"TSParameterProperty\":\n        return super.toAssignable(node, isLHS);\n\n      case \"ParenthesizedExpression\":\n        return this.toAssignableParenthesizedExpression(node, isLHS);\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableParenthesizedExpression(node, isLHS) {\n    switch (node.expression.type) {\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n      case \"ParenthesizedExpression\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  checkLVal(expr, contextDescription, ...args) {\n    var _expr$extra2;\n\n    switch (expr.type) {\n      case \"TSTypeCastExpression\":\n        return;\n\n      case \"TSParameterProperty\":\n        this.checkLVal(expr.parameter, \"parameter property\", ...args);\n        return;\n\n      case \"TSAsExpression\":\n      case \"TSTypeAssertion\":\n        if (!args[0] && contextDescription !== \"parenthesized expression\" && !((_expr$extra2 = expr.extra) != null && _expr$extra2.parenthesized)) {\n          this.raise(expr.start, ErrorMessages.InvalidLhs, contextDescription);\n          break;\n        }\n\n        this.checkLVal(expr.expression, \"parenthesized expression\", ...args);\n        return;\n\n      case \"TSNonNullExpression\":\n        this.checkLVal(expr.expression, contextDescription, ...args);\n        return;\n\n      default:\n        super.checkLVal(expr, contextDescription, ...args);\n        return;\n    }\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case 74:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.match(45)) {\n      const typeArguments = this.tsParseTypeArguments();\n\n      if (this.match(10)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n\n      this.unexpected(this.state.start, 10);\n    }\n\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.state.isAmbientContext && this.match(12) && this.lookaheadCharCode() === close) {\n      this.next();\n    } else {\n      super.checkCommaAfterRest(close);\n    }\n  }\n\n  isClassMethod() {\n    return this.match(45) || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(35) || this.match(14) || super.isClassProperty();\n  }\n\n  parseMaybeDefault(...args) {\n    const node = super.parseMaybeDefault(...args);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\n    }\n\n    return node;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inType) {\n      if (code === 62) {\n        return this.finishOp(46, 1);\n      }\n\n      if (code === 60) {\n        return this.finishOp(45, 1);\n      }\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  reScan_lt_gt() {\n    const {\n      type\n    } = this.state;\n\n    if (type === 45) {\n      this.state.pos -= 1;\n      this.readToken_lt();\n    } else if (type === 46) {\n      this.state.pos -= 1;\n      this.readToken_gt();\n    }\n  }\n\n  toAssignableList(exprList) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if (!expr) continue;\n\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          exprList[i] = this.typeCastToParameter(expr);\n          break;\n\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (!this.state.maybeInArrowParameters) {\n            exprList[i] = this.typeCastToParameter(expr);\n          } else {\n            this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n          }\n\n          break;\n      }\n    }\n\n    return super.toAssignableList(...arguments);\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  shouldParseArrow(params) {\n    if (this.match(14)) {\n      return params.every(expr => this.isAssignable(expr, true));\n    }\n\n    return super.shouldParseArrow(params);\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(14) || super.shouldParseAsyncArrow();\n  }\n\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    if (this.match(45)) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArguments());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && this.isThisParam(firstParam);\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n\n    return param;\n  }\n\n  tsInAmbientContext(cb) {\n    const oldIsAmbientContext = this.state.isAmbientContext;\n    this.state.isAmbientContext = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.isAmbientContext = oldIsAmbientContext;\n    }\n  }\n\n  parseClass(node, ...args) {\n    const oldInAbstractClass = this.state.inAbstractClass;\n    this.state.inAbstractClass = !!node.abstract;\n\n    try {\n      return super.parseClass(node, ...args);\n    } finally {\n      this.state.inAbstractClass = oldInAbstractClass;\n    }\n  }\n\n  tsParseAbstractDeclaration(node) {\n    if (this.match(76)) {\n      node.abstract = true;\n      return this.parseClass(node, true, false);\n    } else if (this.isContextual(121)) {\n      if (!this.hasFollowingLineBreak()) {\n        node.abstract = true;\n        this.raise(node.start, TSErrors.NonClassMethodPropertyHasAbstractModifer);\n        this.next();\n        return this.tsParseInterfaceDeclaration(node);\n      }\n    } else {\n      this.unexpected(null, 76);\n    }\n  }\n\n  parseMethod(...args) {\n    const method = super.parseMethod(...args);\n\n    if (method.abstract) {\n      const hasBody = this.hasPlugin(\"estree\") ? !!method.value.body : !!method.body;\n\n      if (hasBody) {\n        const {\n          key\n        } = method;\n        this.raise(method.start, TSErrors.AbstractMethodHasImplementation, key.type === \"Identifier\" && !method.computed ? key.name : `[${this.input.slice(key.start, key.end)}]`);\n      }\n    }\n\n    return method;\n  }\n\n  tsParseTypeParameterName() {\n    const typeName = this.parseIdentifier();\n    return typeName.name;\n  }\n\n  shouldParseAsAmbientContext() {\n    return !!this.getPluginOption(\"typescript\", \"dts\");\n  }\n\n  parse() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.parse();\n  }\n\n  getExpression() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.getExpression();\n  }\n\n  parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly) {\n    if (!isString && isMaybeTypeOnly) {\n      this.parseTypeOnlyImportExportSpecifier(node, false, isInTypeExport);\n      return this.finishNode(node, \"ExportSpecifier\");\n    }\n\n    node.exportKind = \"value\";\n    return super.parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly);\n  }\n\n  parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly) {\n    if (!importedIsString && isMaybeTypeOnly) {\n      this.parseTypeOnlyImportExportSpecifier(specifier, true, isInTypeOnlyImport);\n      return this.finishNode(specifier, \"ImportSpecifier\");\n    }\n\n    specifier.importKind = \"value\";\n    return super.parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly);\n  }\n\n  parseTypeOnlyImportExportSpecifier(node, isImport, isInTypeOnlyImportExport) {\n    const leftOfAsKey = isImport ? \"imported\" : \"local\";\n    const rightOfAsKey = isImport ? \"local\" : \"exported\";\n    let leftOfAs = node[leftOfAsKey];\n    let rightOfAs;\n    let hasTypeSpecifier = false;\n    let canParseAsKeyword = true;\n    const pos = leftOfAs.start;\n\n    if (this.isContextual(89)) {\n      const firstAs = this.parseIdentifier();\n\n      if (this.isContextual(89)) {\n        const secondAs = this.parseIdentifier();\n\n        if (tokenIsKeywordOrIdentifier(this.state.type)) {\n          hasTypeSpecifier = true;\n          leftOfAs = firstAs;\n          rightOfAs = this.parseIdentifier();\n          canParseAsKeyword = false;\n        } else {\n          rightOfAs = secondAs;\n          canParseAsKeyword = false;\n        }\n      } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n        canParseAsKeyword = false;\n        rightOfAs = this.parseIdentifier();\n      } else {\n        hasTypeSpecifier = true;\n        leftOfAs = firstAs;\n      }\n    } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n      hasTypeSpecifier = true;\n      leftOfAs = this.parseIdentifier();\n    }\n\n    if (hasTypeSpecifier && isInTypeOnlyImportExport) {\n      this.raise(pos, isImport ? TSErrors.TypeModifierIsUsedInTypeImports : TSErrors.TypeModifierIsUsedInTypeExports);\n    }\n\n    node[leftOfAsKey] = leftOfAs;\n    node[rightOfAsKey] = rightOfAs;\n    const kindKey = isImport ? \"importKind\" : \"exportKind\";\n    node[kindKey] = hasTypeSpecifier ? \"type\" : \"value\";\n\n    if (canParseAsKeyword && this.eatContextual(89)) {\n      node[rightOfAsKey] = isImport ? this.parseIdentifier() : this.parseModuleExportName();\n    }\n\n    if (!node[rightOfAsKey]) {\n      node[rightOfAsKey] = cloneIdentifier(node[leftOfAsKey]);\n    }\n\n    if (isImport) {\n      this.checkLVal(node[rightOfAsKey], \"import specifier\", BIND_LEXICAL);\n    }\n  }\n\n});\n\nconst PlaceHolderErrors = makeErrorTemplates({\n  ClassNameIsRequired: \"A class name is required.\"\n}, ErrorCodes.SyntaxError);\nvar placeholders = (superClass => class extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(136)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      this.expect(136);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      return this.finishOp(136, 2);\n    }\n\n    return super.getTokenFromCode(...arguments);\n  }\n\n  parseExprAtom() {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments);\n  }\n\n  parseIdentifier() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(...arguments);\n  }\n\n  checkReservedWord(word) {\n    if (word !== undefined) super.checkReservedWord(...arguments);\n  }\n\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments);\n  }\n\n  checkLVal(expr) {\n    if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n  }\n\n  toAssignable(node) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n      return node;\n    }\n\n    return super.toAssignable(...arguments);\n  }\n\n  isLet(context) {\n    if (super.isLet(context)) {\n      return true;\n    }\n\n    if (!this.isContextual(95)) {\n      return false;\n    }\n\n    if (context) return false;\n    const nextToken = this.lookahead();\n\n    if (nextToken.type === 136) {\n      return true;\n    }\n\n    return false;\n  }\n\n  verifyBreakContinue(node) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(...arguments);\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(...arguments);\n    }\n\n    if (this.match(14)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = this.parseStatement(\"label\");\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n\n  parseBlock() {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(...arguments);\n  }\n\n  parseFunctionId() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(...arguments);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n\n    if (placeholder) {\n      if (this.match(77) || this.match(136) || this.match(5)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        this.unexpected(null, PlaceHolderErrors.ClassNameIsRequired);\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n\n    this.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n\n  parseExport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(...arguments);\n\n    if (!this.isContextual(93) && !this.match(12)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(61)) {\n      const next = this.nextTokenStart();\n\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(tokenLabelName(136), this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n\n    return super.maybeParseExportDefaultSpecifier(...arguments);\n  }\n\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n\n    if (specifiers != null && specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(...arguments);\n    node.specifiers = [];\n\n    if (!this.isContextual(93) && !this.match(12)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    this.finishNode(specifier, \"ImportDefaultSpecifier\");\n    node.specifiers.push(specifier);\n\n    if (this.eat(12)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n\n    this.expectContextual(93);\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource(...arguments);\n  }\n\n});\n\nvar v8intrinsic = (superClass => class extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(50)) {\n      const v8IntrinsicStart = this.state.start;\n      const node = this.startNode();\n      this.next();\n\n      if (tokenIsIdentifier(this.state.type)) {\n        const name = this.parseIdentifierName(this.state.start);\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n\n        if (this.match(10)) {\n          return identifier;\n        }\n      }\n\n      this.unexpected(v8IntrinsicStart);\n    }\n  }\n\n  parseExprAtom() {\n    return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n  }\n\n});\n\nfunction hasPlugin(plugins, expectedConfig) {\n  const [expectedName, expectedOptions] = typeof expectedConfig === \"string\" ? [expectedConfig, {}] : expectedConfig;\n  const expectedKeys = Object.keys(expectedOptions);\n  const expectedOptionsIsEmpty = expectedKeys.length === 0;\n  return plugins.some(p => {\n    if (typeof p === \"string\") {\n      return expectedOptionsIsEmpty && p === expectedName;\n    } else {\n      const [pluginName, pluginOptions] = p;\n\n      if (pluginName !== expectedName) {\n        return false;\n      }\n\n      for (const key of expectedKeys) {\n        if (pluginOptions[key] !== expectedOptions[key]) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"fsharp\", \"hack\", \"smart\"];\nconst TOPIC_TOKENS = [\"^\", \"%\", \"#\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\")) {\n    const proposal = getPluginOption(plugins, \"pipelineOperator\", \"proposal\");\n\n    if (!PIPELINE_PROPOSALS.includes(proposal)) {\n      const proposalList = PIPELINE_PROPOSALS.map(p => `\"${p}\"`).join(\", \");\n      throw new Error(`\"pipelineOperator\" requires \"proposal\" option whose value must be one of: ${proposalList}.`);\n    }\n\n    const tupleSyntaxIsHash = hasPlugin(plugins, [\"recordAndTuple\", {\n      syntaxType: \"hash\"\n    }]);\n\n    if (proposal === \"hack\") {\n      if (hasPlugin(plugins, \"placeholders\")) {\n        throw new Error(\"Cannot combine placeholders plugin and Hack-style pipes.\");\n      }\n\n      if (hasPlugin(plugins, \"v8intrinsic\")) {\n        throw new Error(\"Cannot combine v8intrinsic plugin and Hack-style pipes.\");\n      }\n\n      const topicToken = getPluginOption(plugins, \"pipelineOperator\", \"topicToken\");\n\n      if (!TOPIC_TOKENS.includes(topicToken)) {\n        const tokenList = TOPIC_TOKENS.map(t => `\"${t}\"`).join(\", \");\n        throw new Error(`\"pipelineOperator\" in \"proposal\": \"hack\" mode also requires a \"topicToken\" option whose value must be one of: ${tokenList}.`);\n      }\n\n      if (topicToken === \"#\" && tupleSyntaxIsHash) {\n        throw new Error('Plugin conflict between `[\"pipelineOperator\", { proposal: \"hack\", topicToken: \"#\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.');\n      }\n    } else if (proposal === \"smart\" && tupleSyntaxIsHash) {\n      throw new Error('Plugin conflict between `[\"pipelineOperator\", { proposal: \"smart\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.');\n    }\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n      }\n\n      const moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n      if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n        throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n      }\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"asyncDoExpressions\") && !hasPlugin(plugins, \"doExpressions\")) {\n    const error = new Error(\"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\");\n    error.missingPlugins = \"doExpressions\";\n    throw error;\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startColumn: 0,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false,\n  attachComment: true\n};\nfunction getOptions(opts) {\n  const options = {};\n\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n\n    let parenthesized = undefined;\n\n    if (node.type === \"ParenthesizedExpression\" || (_node$extra = node.extra) != null && _node$extra.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (isLast && prop.type === \"RestElement\" && (_node$extra2 = node.extra) != null && _node$extra2.trailingComma) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\":\n        {\n          this.checkToRestConversion(node);\n          node.type = \"RestElement\";\n          const arg = node.argument;\n          this.toAssignable(arg, isLHS);\n          break;\n        }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      const error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\n      this.raise(prop.key.start, error);\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    let end = exprList.length;\n\n    if (end) {\n      const last = exprList[end - 1];\n\n      if ((last == null ? void 0 : last.type) === \"RestElement\") {\n        --end;\n      } else if ((last == null ? void 0 : last.type) === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n\n        if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n\n    return exprList;\n  }\n\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        return true;\n\n      case \"ObjectExpression\":\n        {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return prop.type !== \"ObjectMethod\" && (i === last || prop.type !== \"SpreadElement\") && this.isAssignable(prop);\n          });\n        }\n\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n\n      case \"ArrayExpression\":\n        return node.elements.every(element => element === null || this.isAssignable(element));\n\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n\n      case \"ParenthesizedExpression\":\n        return this.isAssignable(node.expression);\n\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n\n      default:\n        return false;\n    }\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  parseSpread(refExpressionErrors, refNeedsArrowPos) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case 0:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(3, 93, true);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n\n      case 5:\n        return this.parseObjectLike(8, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n      }\n\n      if (allowEmpty && this.match(12)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(21)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n\n        if (this.match(26) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\n        }\n\n        while (this.match(26)) {\n          decorators.push(this.parseDecorator());\n        }\n\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n\n    return elts;\n  }\n\n  parseBindingRestProperty(prop) {\n    this.next();\n    prop.argument = this.parseIdentifier();\n    this.checkCommaAfterRest(125);\n    return this.finishNode(prop, \"RestElement\");\n  }\n\n  parseBindingProperty() {\n    const prop = this.startNode();\n    const {\n      type,\n      start: startPos,\n      startLoc\n    } = this.state;\n\n    if (type === 21) {\n      return this.parseBindingRestProperty(prop);\n    } else {\n      this.parsePropertyName(prop);\n    }\n\n    prop.method = false;\n    this.parseObjPropValue(prop, startPos, startLoc, false, false, true, false);\n    return prop;\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param) {\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    var _startLoc, _startPos, _left;\n\n    startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n    startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(29)) return left;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  checkLVal(expr, contextDescription, bindingType = BIND_NONE, checkClashes, disallowLetBinding, strictModeChanged = false) {\n    switch (expr.type) {\n      case \"Identifier\":\n        {\n          const {\n            name\n          } = expr;\n\n          if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\n            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\n          }\n\n          if (checkClashes) {\n            if (checkClashes.has(name)) {\n              this.raise(expr.start, ErrorMessages.ParamDupe);\n            } else {\n              checkClashes.add(name);\n            }\n          }\n\n          if (disallowLetBinding && name === \"let\") {\n            this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n          }\n\n          if (!(bindingType & BIND_NONE)) {\n            this.scope.declareName(name, bindingType, expr.start);\n          }\n\n          break;\n        }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n        }\n\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;\n          this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n        }\n\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n          }\n        }\n\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\n        break;\n\n      default:\n        {\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n        }\n    }\n  }\n\n  checkToRestConversion(node) {\n    if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\n      this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.match(12)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos) {\n    throw this.raise(pos, ErrorMessages.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos) {\n    this.raise(pos, ErrorMessages.RestTrailingComma);\n  }\n\n}\n\nconst invalidHackPipeBodies = new Map([[\"ArrowFunctionExpression\", \"arrow function\"], [\"AssignmentExpression\", \"assignment\"], [\"ConditionalExpression\", \"conditional\"], [\"YieldExpression\", \"yield\"]]);\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, ErrorMessages.RecordNoProto);\n        return;\n      }\n\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, ErrorMessages.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n\n  getExpression() {\n    this.enterInitialScopes();\n    this.nextToken();\n    const expr = this.parseExpression();\n\n    if (!this.match(131)) {\n      this.unexpected();\n    }\n\n    this.finalizeRemainingComments();\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n\n    return expr;\n  }\n\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  parseExpressionBase(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n\n    if (this.match(12)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n\n      while (this.eat(12)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n\n  setOptionalParametersError(refExpressionErrors, resultError) {\n    var _resultError$pos;\n\n    refExpressionErrors.optionalParameters = (_resultError$pos = resultError == null ? void 0 : resultError.pos) != null ? _resultError$pos : this.state.start;\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    if (this.isContextual(101)) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    const {\n      type\n    } = this.state;\n\n    if (type === 10 || tokenIsIdentifier(type)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors);\n\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n\n    if (tokenIsAssignment(this.state.type)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(29)) {\n        node.left = this.toAssignable(left, true);\n\n        if (refExpressionErrors.doubleProto >= startPos) {\n          refExpressionErrors.doubleProto = -1;\n        }\n\n        if (refExpressionErrors.shorthandAssign >= startPos) {\n          refExpressionErrors.shorthandAssign = -1;\n        }\n      } else {\n        node.left = left;\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  parseMaybeConditional(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (this.eat(17)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(14);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeUnaryOrPrivate(refExpressionErrors) {\n    return this.match(130) ? this.parsePrivateName() : this.parseMaybeUnary(refExpressionErrors);\n  }\n\n  parseExprOps(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnaryOrPrivate(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (this.isPrivateName(left)) {\n      const value = this.getPrivateNameSV(left);\n      const {\n        start\n      } = left;\n\n      if (minPrec >= tokenOperatorPrecedence(54) || !this.prodParam.hasIn || !this.match(54)) {\n        this.raise(start, ErrorMessages.PrivateInExpectedIn, value);\n      }\n\n      this.classScope.usePrivateName(value, start);\n    }\n\n    const op = this.state.type;\n\n    if (tokenIsOperator(op) && (this.prodParam.hasIn || !this.match(54))) {\n      let prec = tokenOperatorPrecedence(op);\n\n      if (prec > minPrec) {\n        if (op === 37) {\n          this.expectPlugin(\"pipelineOperator\");\n\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n        const logical = op === 39 || op === 40;\n        const coalesce = op === 38;\n\n        if (coalesce) {\n          prec = tokenOperatorPrecedence(40);\n        }\n\n        this.next();\n\n        if (op === 37 && this.hasPlugin([\"pipelineOperator\", {\n          proposal: \"minimal\"\n        }])) {\n          if (this.state.type === 92 && this.prodParam.hasAwait) {\n            throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n\n        if (coalesce && (nextOp === 39 || nextOp === 40) || logical && nextOp === 38) {\n          throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n\n    return left;\n  }\n\n  parseExprOpRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    switch (op) {\n      case 37:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"hack\":\n            return this.withTopicBindingContext(() => {\n              return this.parseHackPipeBody();\n            });\n\n          case \"smart\":\n            return this.withTopicBindingContext(() => {\n              if (this.prodParam.hasYield && this.isContextual(101)) {\n                throw this.raise(this.state.start, ErrorMessages.PipeBodyIsTighter, this.state.value);\n              }\n\n              return this.parseSmartPipelineBodyInStyle(this.parseExprOpBaseRightExpr(op, prec), startPos, startLoc);\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  parseExprOpBaseRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnaryOrPrivate(), startPos, startLoc, tokenIsRightAssociative(op) ? prec - 1 : prec);\n  }\n\n  parseHackPipeBody() {\n    var _body$extra;\n\n    const {\n      start\n    } = this.state;\n    const body = this.parseMaybeAssign();\n\n    if (invalidHackPipeBodies.has(body.type) && !((_body$extra = body.extra) != null && _body$extra.parenthesized)) {\n      this.raise(start, ErrorMessages.PipeUnparenthesizedBody, invalidHackPipeBodies.get(body.type));\n    }\n\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(start, ErrorMessages.PipeTopicUnused);\n    }\n\n    return body;\n  }\n\n  checkExponentialAfterUnary(node) {\n    if (this.match(53)) {\n      this.raise(node.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n    }\n  }\n\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(92);\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n\n    const update = this.match(34);\n    const node = this.startNode();\n\n    if (tokenIsPrefix(this.state.type)) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(68)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n\n      const isDelete = this.match(85);\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, ErrorMessages.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, ErrorMessages.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) this.checkExponentialAfterUnary(node);\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const {\n        type\n      } = this.state;\n      const startsExpr = this.hasPlugin(\"v8intrinsic\") ? tokenCanStartExpression(type) : tokenCanStartExpression(type) && !this.match(50);\n\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(startPos, ErrorMessages.AwaitNotInAsyncContext);\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    while (tokenIsPostfix(this.state.type) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprSubscripts(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n\n    return base;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const {\n      type\n    } = this.state;\n\n    if (!noCalls && type === 15) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (tokenIsTemplate(type)) {\n      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (type === 18) {\n      if (noCalls && this.lookaheadCharCode() === 40) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(10)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n    } else {\n      const computed = this.eat(0);\n\n      if (computed || optional || this.eat(16)) {\n        return this.parseMember(base, startPos, startLoc, state, computed, optional);\n      } else {\n        state.stop = true;\n        return base;\n      }\n    }\n  }\n\n  parseMember(base, startPos, startLoc, state, computed, optional) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.computed = computed;\n\n    if (computed) {\n      node.property = this.parseExpression();\n      this.expect(3);\n    } else if (this.match(130)) {\n      if (base.type === \"Super\") {\n        this.raise(startPos, ErrorMessages.SuperPrivateField);\n      }\n\n      this.classScope.usePrivateName(this.state.value, this.state.start);\n      node.property = this.parsePrivateName();\n    } else {\n      node.property = this.parseIdentifier(true);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  parseBind(base, startPos, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    this.next();\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n  }\n\n  parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    let refExpressionErrors = null;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n      refExpressionErrors = new ExpressionErrors();\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(11);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(11, base.type === \"Import\", base.type !== \"Super\", node, refExpressionErrors);\n    }\n\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n        this.expressionScope.exit();\n      }\n\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n\n    if (state.optionalChainMember) {\n      this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\n    }\n\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n      }\n\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n\n  parseCallExpressionArguments(close, dynamicImport, allowPlaceholder, nodeForExtra, refExpressionErrors) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\n          }\n\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(false, refExpressionErrors, allowPlaceholder));\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(19) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n\n    this.resetPreviousNodeTrailingComments(call);\n    this.expect(19);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\n\n    if (call.innerComments) {\n      setInnerComments(node, call.innerComments);\n    }\n\n    if (call.callee.trailingComments) {\n      setInnerComments(node, call.callee.trailingComments);\n    }\n\n    return node;\n  }\n\n  parseNoCallExpr() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    let node;\n    const {\n      type\n    } = this.state;\n\n    switch (type) {\n      case 75:\n        return this.parseSuper();\n\n      case 79:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(16)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(10)) {\n          this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n        }\n\n        return this.finishNode(node, \"Import\");\n\n      case 74:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case 86:\n        {\n          return this.parseDo(this.startNode(), false);\n        }\n\n      case 52:\n      case 31:\n        {\n          this.readRegexp();\n          return this.parseRegExpLiteral(this.state.value);\n        }\n\n      case 126:\n        return this.parseNumericLiteral(this.state.value);\n\n      case 127:\n        return this.parseBigIntLiteral(this.state.value);\n\n      case 128:\n        return this.parseDecimalLiteral(this.state.value);\n\n      case 125:\n        return this.parseStringLiteral(this.state.value);\n\n      case 80:\n        return this.parseNullLiteral();\n\n      case 81:\n        return this.parseBooleanLiteral(true);\n\n      case 82:\n        return this.parseBooleanLiteral(false);\n\n      case 10:\n        {\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          return this.parseParenAndDistinguishExpression(canBeArrow);\n        }\n\n      case 2:\n      case 1:\n        {\n          return this.parseArrayLike(this.state.type === 2 ? 4 : 3, false, true);\n        }\n\n      case 0:\n        {\n          return this.parseArrayLike(3, true, false, refExpressionErrors);\n        }\n\n      case 6:\n      case 7:\n        {\n          return this.parseObjectLike(this.state.type === 6 ? 9 : 8, false, true);\n        }\n\n      case 5:\n        {\n          return this.parseObjectLike(8, false, false, refExpressionErrors);\n        }\n\n      case 64:\n        return this.parseFunctionOrFunctionSent();\n\n      case 26:\n        this.parseDecorators();\n\n      case 76:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case 73:\n        return this.parseNewOrNewTarget();\n\n      case 25:\n      case 24:\n        return this.parseTemplate(false);\n\n      case 15:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n          }\n        }\n\n      case 130:\n        {\n          this.raise(this.state.start, ErrorMessages.PrivateInExpectedIn, this.state.value);\n          return this.parsePrivateName();\n        }\n\n      case 33:\n        {\n          return this.parseTopicReferenceThenEqualsSign(50, \"%\");\n        }\n\n      case 32:\n        {\n          return this.parseTopicReferenceThenEqualsSign(42, \"^\");\n        }\n\n      case 42:\n      case 50:\n      case 27:\n        {\n          const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n          if (pipeProposal) {\n            return this.parseTopicReference(pipeProposal);\n          } else {\n            throw this.unexpected();\n          }\n        }\n\n      case 45:\n        {\n          const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n          if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n            this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n            break;\n          } else {\n            throw this.unexpected();\n          }\n        }\n\n      default:\n        if (tokenIsIdentifier(type)) {\n          if (this.isContextual(119) && this.lookaheadCharCode() === 123 && !this.hasFollowingLineBreak()) {\n            return this.parseModuleExpression();\n          }\n\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            const {\n              type\n            } = this.state;\n\n            if (type === 64) {\n              this.resetPreviousNodeTrailingComments(id);\n              this.next();\n              return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n            } else if (tokenIsIdentifier(type)) {\n              if (this.lookaheadCharCode() === 61) {\n                return this.parseAsyncArrowUnaryFunction(this.startNodeAtNode(id));\n              } else {\n                return id;\n              }\n            } else if (type === 86) {\n              this.resetPreviousNodeTrailingComments(id);\n              return this.parseDo(this.startNodeAtNode(id), true);\n            }\n          }\n\n          if (canBeArrow && this.match(19) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n\n          return id;\n        } else {\n          throw this.unexpected();\n        }\n\n    }\n  }\n\n  parseTopicReferenceThenEqualsSign(topicTokenType, topicTokenValue) {\n    const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n    if (pipeProposal) {\n      this.state.type = topicTokenType;\n      this.state.value = topicTokenValue;\n      this.state.pos--;\n      this.state.end--;\n      this.state.endLoc.column--;\n      return this.parseTopicReference(pipeProposal);\n    } else {\n      throw this.unexpected();\n    }\n  }\n\n  parseTopicReference(pipeProposal) {\n    const node = this.startNode();\n    const start = this.state.start;\n    const tokenType = this.state.type;\n    this.next();\n    return this.finishTopicReference(node, start, pipeProposal, tokenType);\n  }\n\n  finishTopicReference(node, start, pipeProposal, tokenType) {\n    if (this.testTopicReferenceConfiguration(pipeProposal, start, tokenType)) {\n      let nodeType;\n\n      if (pipeProposal === \"smart\") {\n        nodeType = \"PipelinePrimaryTopicReference\";\n      } else {\n        nodeType = \"TopicReference\";\n      }\n\n      if (!this.topicReferenceIsAllowedInCurrentContext()) {\n        if (pipeProposal === \"smart\") {\n          this.raise(start, ErrorMessages.PrimaryTopicNotAllowed);\n        } else {\n          this.raise(start, ErrorMessages.PipeTopicUnbound);\n        }\n      }\n\n      this.registerTopicReference();\n      return this.finishNode(node, nodeType);\n    } else {\n      throw this.raise(start, ErrorMessages.PipeTopicUnconfiguredToken, tokenLabelName(tokenType));\n    }\n  }\n\n  testTopicReferenceConfiguration(pipeProposal, start, tokenType) {\n    switch (pipeProposal) {\n      case \"hack\":\n        {\n          return this.hasPlugin([\"pipelineOperator\", {\n            topicToken: tokenLabelName(tokenType)\n          }]);\n        }\n\n      case \"smart\":\n        return tokenType === 27;\n\n      default:\n        throw this.raise(start, ErrorMessages.PipeTopicRequiresHackPipes);\n    }\n  }\n\n  parseAsyncArrowUnaryFunction(node) {\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\n    }\n\n    this.expect(19);\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  parseDo(node, isAsync) {\n    this.expectPlugin(\"doExpressions\");\n\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n\n    node.async = isAsync;\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    if (isAsync) {\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(10) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.SuperNotAllowed);\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.UnexpectedSuper);\n    }\n\n    if (!this.match(10) && !this.match(0) && !this.match(16)) {\n      this.raise(node.start, ErrorMessages.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parsePrivateName() {\n    const node = this.startNode();\n    const id = this.startNodeAt(this.state.start + 1, new Position(this.state.curLine, this.state.start + 1 - this.state.lineStart));\n    const name = this.state.value;\n    this.next();\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.prodParam.hasYield && this.match(16)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n\n      if (this.match(98)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n\n    if (this.isContextual(96)) {\n      if (!this.inModule) {\n        this.raise(id.start, SourceTypeModuleErrorMessages.ImportMetaOutsideModule);\n      }\n\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteralAtNode(value, type, node) {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseLiteral(value, type) {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n\n  parseStringLiteral(value) {\n    return this.parseLiteral(value, \"StringLiteral\");\n  }\n\n  parseNumericLiteral(value) {\n    return this.parseLiteral(value, \"NumericLiteral\");\n  }\n\n  parseBigIntLiteral(value) {\n    return this.parseLiteral(value, \"BigIntLiteral\");\n  }\n\n  parseDecimalLiteral(value) {\n    return this.parseLiteral(value, \"DecimalLiteral\");\n  }\n\n  parseRegExpLiteral(value) {\n    const node = this.parseLiteral(value.value, \"RegExpLiteral\");\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    return node;\n  }\n\n  parseBooleanLiteral(value) {\n    const node = this.startNode();\n    node.value = value;\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseNullLiteral() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"NullLiteral\");\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(11)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12, refExpressionErrors.optionalParameters === -1 ? null : refExpressionErrors.optionalParameters);\n\n        if (this.match(11)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(21)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n        this.checkCommaAfterRest(41);\n        break;\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem));\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(11);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n\n    if (canBeArrow && this.shouldParseArrow(exprList) && (arrowNode = this.parseArrow(arrowNode))) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    this.toReferencedListDeep(exprList, true);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNode(val, \"SequenceExpression\");\n      this.resetEndLocation(val, innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      this.takeSurroundingComments(val, startPos, this.state.lastTokEnd);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow(params) {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node) {\n    if (this.eat(19)) {\n      return node;\n    }\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    return node;\n  }\n\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(16)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        this.raise(metaProp.start, ErrorMessages.UnexpectedNewTarget);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  parseNew(node) {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\n    } else if (this.eat(18)) {\n      this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node) {\n    if (this.eat(10)) {\n      const args = this.parseExprList(11);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  parseTemplateElement(isTagged) {\n    const {\n      start,\n      end,\n      value\n    } = this.state;\n    const elemStart = start + 1;\n    const elem = this.startNodeAt(elemStart, createPositionWithColumnOffset(this.state.startLoc, 1));\n\n    if (value === null) {\n      if (!isTagged) {\n        this.raise(start + 2, ErrorMessages.InvalidEscapeSequenceTemplate);\n      }\n    }\n\n    const isTail = this.match(24);\n    const endOffset = isTail ? -1 : -2;\n    const elemEnd = end + endOffset;\n    elem.value = {\n      raw: this.input.slice(elemStart, elemEnd).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: value === null ? null : value.slice(1, endOffset)\n    };\n    elem.tail = isTail;\n    this.next();\n    this.finishNode(elem, \"TemplateElement\");\n    this.resetEndLocation(elem, elemEnd, createPositionWithColumnOffset(this.state.lastTokEndLoc, endOffset));\n    return elem;\n  }\n\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n\n    while (!curElt.tail) {\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.readTemplateContinuation();\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      let prop;\n\n      if (isPattern) {\n        prop = this.parseBindingProperty();\n      } else {\n        prop = this.parsePropertyDefinition(refExpressionErrors);\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\n      }\n\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n\n    return this.finishNode(node, type);\n  }\n\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(0) || this.match(51));\n  }\n\n  parsePropertyDefinition(refExpressionErrors) {\n    let decorators = [];\n\n    if (this.match(26)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\n      }\n\n      while (this.match(26)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(21)) {\n      if (decorators.length) this.unexpected();\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    let isGenerator = this.eat(51);\n    this.parsePropertyNamePrefixOperator(prop);\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop);\n\n    if (!isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        this.resetPreviousNodeTrailingComments(key);\n        isGenerator = this.eat(51);\n        this.parsePropertyName(prop);\n      }\n\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        this.resetPreviousNodeTrailingComments(key);\n        prop.kind = keyName;\n\n        if (this.match(51)) {\n          isGenerator = true;\n          this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\n          this.next();\n        }\n\n        this.parsePropertyName(prop);\n      }\n    }\n\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, false, isAccessor, refExpressionErrors);\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n\n  checkGetterSetterParams(method) {\n    var _params;\n\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(10)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n\n    if (this.eat(14)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, cloneIdentifier(prop.key));\n      } else if (this.match(29)) {\n        const shorthandAssign = this.state.start;\n\n        if (refExpressionErrors != null) {\n          if (refExpressionErrors.shorthandAssign === -1) {\n            refExpressionErrors.shorthandAssign = shorthandAssign;\n          }\n        } else {\n          this.raise(shorthandAssign, ErrorMessages.InvalidCoverInitializedName);\n        }\n\n        prop.value = this.parseMaybeDefault(startPos, startLoc, cloneIdentifier(prop.key));\n      } else {\n        prop.value = cloneIdentifier(prop.key);\n      }\n\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n\n  parsePropertyName(prop) {\n    if (this.eat(0)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(3);\n    } else {\n      const {\n        type,\n        value\n      } = this.state;\n      let key;\n\n      if (tokenIsKeywordOrIdentifier(type)) {\n        key = this.parseIdentifier(true);\n      } else {\n        switch (type) {\n          case 126:\n            key = this.parseNumericLiteral(value);\n            break;\n\n          case 125:\n            key = this.parseStringLiteral(value);\n            break;\n\n          case 127:\n            key = this.parseBigIntLiteral(value);\n            break;\n\n          case 128:\n            key = this.parseDecimalLiteral(value);\n            break;\n\n          case 130:\n            {\n              const privateKeyPos = this.state.start + 1;\n              this.raise(privateKeyPos, ErrorMessages.UnexpectedPrivateField);\n              key = this.parsePrivateName();\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      prop.key = key;\n\n      if (type !== 130) {\n        prop.computed = false;\n      }\n    }\n\n    return prop.key;\n  }\n\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return node;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n\n  parseArrowExpression(node, params, isAsync, trailingCommaPos) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n\n    if (!this.match(0) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(node, params, trailingCommaPos) {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(5);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n\n        if (hasStrictModeDirective && nonSimple) {\n          const errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\n          this.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\n        }\n\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n        if (this.state.strict && node.id) {\n          this.checkLVal(node.id, \"function name\", BIND_OUTSIDE, undefined, undefined, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.state.labels = oldLabels;\n    }\n\n    this.expressionScope.exit();\n  }\n\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n\n    return true;\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = new Set();\n\n    for (const param of node.params) {\n      this.checkLVal(param, \"function parameter list\", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);\n    }\n  }\n\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n\n    return elts;\n  }\n\n  parseExprListItem(allowEmpty, refExpressionErrors, allowPlaceholder) {\n    let elt;\n\n    if (this.match(12)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\n      }\n\n      elt = null;\n    } else if (this.match(21)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors), spreadNodeStartPos, spreadNodeStartLoc);\n    } else if (this.match(17)) {\n      this.expectPlugin(\"partialApplication\");\n\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\n      }\n\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem);\n    }\n\n    return elt;\n  }\n\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos, liberal) {\n    let name;\n    const {\n      start,\n      type\n    } = this.state;\n\n    if (tokenIsKeywordOrIdentifier(type)) {\n      name = this.state.value;\n    } else {\n      throw this.unexpected();\n    }\n\n    const tokenIsKeyword = tokenKeywordOrIdentifierIsKeyword(type);\n\n    if (liberal) {\n      if (tokenIsKeyword) {\n        this.replaceToken(124);\n      }\n    } else {\n      this.checkReservedWord(name, start, tokenIsKeyword, false);\n    }\n\n    this.next();\n    return name;\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (word.length > 10) {\n      return;\n    }\n\n    if (!canBeReservedWord(word)) {\n      return;\n    }\n\n    if (word === \"yield\") {\n      if (this.prodParam.hasYield) {\n        this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n        return;\n      }\n    } else if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        return;\n      } else if (this.scope.inStaticBlock) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifierInStaticBlock);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\n      }\n    } else if (word === \"arguments\") {\n      if (this.scope.inClassAndNotInNonArrowFunction) {\n        this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n        return;\n      }\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n    }\n  }\n\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n\n    return false;\n  }\n\n  parseAwait(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);\n\n    if (this.eat(51)) {\n      this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait() {\n    if (this.hasPrecedingLineBreak()) return true;\n    const {\n      type\n    } = this.state;\n    return type === 49 || type === 10 || type === 0 || tokenIsTemplate(type) || type === 129 || type === 52 || this.hasPlugin(\"v8intrinsic\") && type === 50;\n  }\n\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);\n    this.next();\n    let delegating = false;\n    let argument = null;\n\n    if (!this.hasPrecedingLineBreak()) {\n      delegating = this.eat(51);\n\n      switch (this.state.type) {\n        case 13:\n        case 131:\n        case 8:\n        case 11:\n        case 3:\n        case 9:\n        case 14:\n        case 12:\n          if (!delegating) break;\n\n        default:\n          argument = this.parseMaybeAssign();\n      }\n    }\n\n    node.delegate = delegating;\n    node.argument = argument;\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  checkPipelineAtInfixOperator(left, leftStartPos) {\n    if (this.hasPlugin([\"pipelineOperator\", {\n      proposal: \"smart\"\n    }])) {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  checkHackPipeBodyEarlyErrors(startPos) {\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(startPos, ErrorMessages.PipeTopicUnused);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpr, startPos, startLoc) {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n\n    if (this.isSimpleReference(childExpr)) {\n      bodyNode.callee = childExpr;\n      return this.finishNode(bodyNode, \"PipelineBareFunction\");\n    } else {\n      this.checkSmartPipeTopicBodyEarlyErrors(startPos);\n      bodyNode.expression = childExpr;\n      return this.finishNode(bodyNode, \"PipelineTopicExpression\");\n    }\n  }\n\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n\n      case \"Identifier\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  checkSmartPipeTopicBodyEarlyErrors(startPos) {\n    if (this.match(19)) {\n      throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\n    } else if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(startPos, ErrorMessages.PipelineTopicUnused);\n    }\n  }\n\n  withTopicBindingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSmartMixTopicForbiddingContext(callback) {\n    if (this.hasPlugin([\"pipelineOperator\", {\n      proposal: \"smart\"\n    }])) {\n      const outerContextTopicState = this.state.topicContext;\n      this.state.topicContext = {\n        maxNumOfResolvableTopics: 0,\n        maxTopicIndex: null\n      };\n\n      try {\n        return callback();\n      } finally {\n        this.state.topicContext = outerContextTopicState;\n      }\n    } else {\n      return callback();\n    }\n  }\n\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  topicReferenceIsAllowedInCurrentContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n\n  parseFSharpPipelineBody(prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnaryOrPrivate(), startPos, startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n\n  parseModuleExpression() {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode();\n    this.next();\n    this.eat(5);\n    const revertScopes = this.initializeScopes(true);\n    this.enterInitialScopes();\n    const program = this.startNode();\n\n    try {\n      node.body = this.parseProgram(program, 8, \"module\");\n    } finally {\n      revertScopes();\n    }\n\n    this.eat(8);\n    return this.finishNode(node, \"ModuleExpression\");\n  }\n\n  parsePropertyNamePrefixOperator(prop) {}\n\n}\n\nconst loopLabel = {\n  kind: \"loop\"\n},\n      switchLabel = {\n  kind: \"switch\"\n};\nconst FUNC_NO_FLAGS = 0b000,\n      FUNC_STATEMENT = 0b001,\n      FUNC_HANGING_STATEMENT = 0b010,\n      FUNC_NULLABLE_ID = 0b100;\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\n\nfunction babel7CompatTokens(tokens, input) {\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    const {\n      type\n    } = token;\n\n    if (typeof type === \"number\") {\n      {\n        if (type === 130) {\n          const {\n            loc,\n            start,\n            value,\n            end\n          } = token;\n          const hashEndPos = start + 1;\n          const hashEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          tokens.splice(i, 1, new Token({\n            type: getExportedToken(27),\n            value: \"#\",\n            start: start,\n            end: hashEndPos,\n            startLoc: loc.start,\n            endLoc: hashEndLoc\n          }), new Token({\n            type: getExportedToken(124),\n            value: value,\n            start: hashEndPos,\n            end: end,\n            startLoc: hashEndLoc,\n            endLoc: loc.end\n          }));\n          i++;\n          continue;\n        }\n\n        if (tokenIsTemplate(type)) {\n          const {\n            loc,\n            start,\n            value,\n            end\n          } = token;\n          const backquoteEnd = start + 1;\n          const backquoteEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          let startToken;\n\n          if (input.charCodeAt(start) === 96) {\n            startToken = new Token({\n              type: getExportedToken(22),\n              value: \"`\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc\n            });\n          } else {\n            startToken = new Token({\n              type: getExportedToken(8),\n              value: \"}\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc\n            });\n          }\n\n          let templateValue, templateElementEnd, templateElementEndLoc, endToken;\n\n          if (type === 24) {\n            templateElementEnd = end - 1;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -1);\n            templateValue = value === null ? null : value.slice(1, -1);\n            endToken = new Token({\n              type: getExportedToken(22),\n              value: \"`\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end\n            });\n          } else {\n            templateElementEnd = end - 2;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -2);\n            templateValue = value === null ? null : value.slice(1, -2);\n            endToken = new Token({\n              type: getExportedToken(23),\n              value: \"${\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end\n            });\n          }\n\n          tokens.splice(i, 1, startToken, new Token({\n            type: getExportedToken(20),\n            value: templateValue,\n            start: backquoteEnd,\n            end: templateElementEnd,\n            startLoc: backquoteEndLoc,\n            endLoc: templateElementEndLoc\n          }), endToken);\n          i += 2;\n          continue;\n        }\n      }\n      token.type = getExportedToken(type);\n    }\n  }\n\n  return tokens;\n}\n\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n\n    if (this.options.tokens) {\n      file.tokens = babel7CompatTokens(this.tokens, this.input);\n    }\n\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(program, end = 131, sourceType = this.options.sourceType) {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n      }\n    }\n\n    return this.finishNode(program, \"Program\");\n  }\n\n  stmtToDirective(stmt) {\n    const directive = stmt;\n    directive.type = \"Directive\";\n    directive.value = directive.expression;\n    delete directive.expression;\n    const directiveLiteral = directive.value;\n    const expressionValue = directiveLiteral.value;\n    const raw = this.input.slice(directiveLiteral.start, directiveLiteral.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    this.addExtra(directiveLiteral, \"expressionValue\", expressionValue);\n    directiveLiteral.type = \"DirectiveLiteral\";\n    return directive;\n  }\n\n  parseInterpreterDirective() {\n    if (!this.match(28)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context) {\n    if (!this.isContextual(95)) {\n      return false;\n    }\n\n    return this.isLetKeyword(context);\n  }\n\n  isLetKeyword(context) {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n\n    if (nextCh === 92 || nextCh === 91) {\n      return true;\n    }\n\n    if (context) return false;\n    if (nextCh === 123) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      keywordRelationalOperator.lastIndex = next;\n\n      if (keywordRelationalOperator.test(this.input)) {\n        const endCh = this.codePointAtPos(keywordRelationalOperator.lastIndex);\n\n        if (!isIdentifierChar(endCh) && endCh !== 92) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.match(26)) {\n      this.parseDecorators(true);\n    }\n\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context, topLevel) {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = 70;\n      kind = \"let\";\n    }\n\n    switch (starttype) {\n      case 56:\n        return this.parseBreakContinueStatement(node, true);\n\n      case 59:\n        return this.parseBreakContinueStatement(node, false);\n\n      case 60:\n        return this.parseDebuggerStatement(node);\n\n      case 86:\n        return this.parseDoStatement(node);\n\n      case 87:\n        return this.parseForStatement(node);\n\n      case 64:\n        if (this.lookaheadCharCode() === 46) break;\n\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, ErrorMessages.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, ErrorMessages.SloppyFunction);\n          }\n        }\n\n        return this.parseFunctionStatement(node, false, !context);\n\n      case 76:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case 65:\n        return this.parseIfStatement(node);\n\n      case 66:\n        return this.parseReturnStatement(node);\n\n      case 67:\n        return this.parseSwitchStatement(node);\n\n      case 68:\n        return this.parseThrowStatement(node);\n\n      case 69:\n        return this.parseTryStatement(node);\n\n      case 71:\n      case 70:\n        kind = kind || this.state.value;\n\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n        }\n\n        return this.parseVarStatement(node, kind);\n\n      case 88:\n        return this.parseWhileStatement(node);\n\n      case 72:\n        return this.parseWithStatement(node);\n\n      case 5:\n        return this.parseBlock();\n\n      case 13:\n        return this.parseEmptyStatement(node);\n\n      case 79:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n            break;\n          }\n        }\n\n      case 78:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n          }\n\n          this.next();\n          let result;\n\n          if (starttype === 79) {\n            result = this.parseImport(node);\n\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node);\n\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n\n          this.assertModuleNodeAllowed(node);\n          return result;\n        }\n\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (context) {\n              this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n            }\n\n            this.next();\n            return this.parseFunctionStatement(node, true, !context);\n          }\n        }\n    }\n\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (tokenIsIdentifier(starttype) && expr.type === \"Identifier\" && this.eat(14)) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(node.start, SourceTypeModuleErrorMessages.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node) {\n    const decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator() {\n    return this.match(76);\n  }\n\n  parseDecorators(allowExport) {\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    while (this.match(26)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(78)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      this.state.decoratorStack.push([]);\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr;\n\n      if (this.eat(10)) {\n        expr = this.parseExpression();\n        this.expect(11);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(16)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(10)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(11, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(node, isBreak) {\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, isBreak);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n\n  verifyBreakContinue(node, isBreak) {\n    let i;\n\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n\n    if (i === this.state.labels.length) {\n      this.raise(node.start, ErrorMessages.IllegalBreakContinue, isBreak ? \"break\" : \"continue\");\n    }\n  }\n\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression() {\n    this.expect(10);\n    const val = this.parseExpression();\n    this.expect(11);\n    return val;\n  }\n\n  parseDoStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"do\"));\n    this.state.labels.pop();\n    this.expect(88);\n    node.test = this.parseHeaderExpression();\n    this.eat(13);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = -1;\n\n    if (this.isAwaitAllowed() && this.eatContextual(92)) {\n      awaitAt = this.state.lastTokStart;\n    }\n\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(10);\n\n    if (this.match(13)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, null);\n    }\n\n    const startsWithLet = this.isContextual(95);\n    const isLet = startsWithLet && this.isLetKeyword();\n\n    if (this.match(70) || this.match(71) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if ((this.match(54) || this.isContextual(97)) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n\n    const startsWithAsync = this.isContextual(91);\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(97);\n\n    if (isForOf) {\n      if (startsWithLet) {\n        this.raise(init.start, ErrorMessages.ForOfLet);\n      } else if (awaitAt === -1 && startsWithAsync && init.type === \"Identifier\") {\n        this.raise(init.start, ErrorMessages.ForOfAsync);\n      }\n    }\n\n    if (isForOf || this.match(54)) {\n      this.toAssignable(init, true);\n      const description = isForOf ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n  }\n\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(62) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, ErrorMessages.IllegalReturn);\n    }\n\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(5);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n\n    for (let sawDefault; !this.match(8);) {\n      if (this.match(57) || this.match(61)) {\n        const isCase = this.match(57);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\n          }\n\n          sawDefault = true;\n          cur.test = null;\n        }\n\n        this.expect(14);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node) {\n    this.next();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\n    }\n\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n    return param;\n  }\n\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(58)) {\n      const clause = this.startNode();\n      this.next();\n\n      if (this.match(10)) {\n        this.expect(10);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(11);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body = this.withSmartMixTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(63) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, ErrorMessages.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"while\"));\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(this.state.start, ErrorMessages.StrictWith);\n    }\n\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"with\"));\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(node, maybeName, expr, context) {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = tokenIsLoop(this.state.type) ? \"loop\" : this.match(67) ? \"switch\" : null;\n\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n\n    this.expect(5);\n\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n\n    this.parseBlockBody(node, allowDirectives, false, 8, afterBlockParse);\n\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  parseFor(node, init) {\n    node.init = init;\n    this.semicolon(false);\n    node.test = this.match(13) ? null : this.parseExpression();\n    this.semicolon(false);\n    node.update = this.match(11) ? null : this.parseExpression();\n    this.expect(11);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(54);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(11);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  parseVar(node, isFor, kind) {\n    const declarations = node.declarations = [];\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n\n      if (this.eat(29)) {\n        decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      } else {\n        if (kind === \"const\" && !(this.match(54) || this.isContextual(97))) {\n          if (!isTypescript) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n          }\n        } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(54) || this.isContextual(97)))) {\n          this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n        }\n\n        decl.init = null;\n      }\n\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(12)) break;\n    }\n\n    return node;\n  }\n\n  parseVarId(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\n  }\n\n  parseFunction(node, statement = FUNC_NO_FLAGS, isAsync = false) {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n    this.initFunction(node, isAsync);\n\n    if (this.match(51) && isHangingStatement) {\n      this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\n    }\n\n    node.generator = this.eat(51);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, false);\n    this.withSmartMixTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId) {\n    return requireId || tokenIsIdentifier(this.state.type) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    this.expect(10);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(11, 41, false, allowModifiers);\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n\n  isClassProperty() {\n    return this.match(29) || this.match(13) || this.match(8);\n  }\n\n  isClassMethod() {\n    return this.match(10);\n  }\n\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n\n  parseClassBody(hadSuperClass, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      hadConstructor: false,\n      hadSuperClass\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(5);\n    this.withSmartMixTopicForbiddingContext(() => {\n      while (!this.match(8)) {\n        if (this.eat(13)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\n          }\n\n          continue;\n        }\n\n        if (this.match(26)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(member.start, ErrorMessages.DecoratorConstructor);\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n\n    this.resetPreviousNodeTrailingComments(key);\n    return false;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(100);\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      if (this.eat(5)) {\n        this.parseClassStaticBlock(classBody, member);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n    this.parsePropertyNamePrefixOperator(member);\n\n    if (this.eat(51)) {\n      method.kind = \"method\";\n      const isPrivateName = this.match(130);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n\n    const isContextual = tokenIsIdentifier(this.state.type) && !this.state.containsEsc;\n    const isPrivate = this.match(130);\n    const key = this.parseClassElementName(member);\n    const maybeQuestionTokenStart = this.state.start;\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, ErrorMessages.DuplicateConstructor);\n        }\n\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(key.start, ErrorMessages.OverrideOnConstructor);\n        }\n\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isContextual && key.name === \"async\" && !this.isLineTerminator()) {\n      this.resetPreviousNodeTrailingComments(key);\n      const isGenerator = this.eat(51);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      const isPrivate = this.match(130);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isContextual && (key.name === \"get\" || key.name === \"set\") && !(this.match(51) && this.isLineTerminator())) {\n      this.resetPreviousNodeTrailingComments(key);\n      method.kind = key.name;\n      const isPrivate = this.match(130);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassElementName(member) {\n    const {\n      type,\n      value,\n      start\n    } = this.state;\n\n    if ((type === 124 || type === 125) && member.static && value === \"prototype\") {\n      this.raise(start, ErrorMessages.StaticPrototype);\n    }\n\n    if (type === 130) {\n      if (value === \"constructor\") {\n        this.raise(start, ErrorMessages.ConstructorClassPrivateField);\n      }\n\n      const key = this.parsePrivateName();\n      member.key = key;\n      return key;\n    }\n\n    return this.parsePropertyName(member);\n  }\n\n  parseClassStaticBlock(classBody, member) {\n    var _member$decorators;\n\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, 8);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n    if ((_member$decorators = member.decorators) != null && _member$decorators.length) {\n      this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\n    }\n  }\n\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(classBody, prop) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.start);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.declareClassPrivateMethodInScope(node, kind);\n  }\n\n  declareClassPrivateMethodInScope(node, kind) {\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.start);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {}\n\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(29) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (tokenIsIdentifier(this.state.type)) {\n      node.id = this.parseIdentifier();\n\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, ErrorMessages.MissingClassName);\n      }\n    }\n  }\n\n  parseClassSuper(node) {\n    node.superClass = this.eat(77) ? this.parseExprSubscripts() : null;\n  }\n\n  parseExport(node) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(12);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(12));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n      throw this.unexpected(null, 5);\n    }\n\n    let hasDeclaration;\n\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(61)) {\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, 5);\n  }\n\n  eatExportStar(node) {\n    return this.eat(51);\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(89)) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(5)) {\n      if (!node.specifiers) node.specifiers = [];\n      const isTypeExport = node.exportKind === \"type\";\n      node.specifiers.push(...this.parseExportSpecifiers(isTypeExport));\n      node.source = null;\n      node.declaration = null;\n\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n\n    return false;\n  }\n\n  isAsyncFunction() {\n    if (!this.isContextual(91)) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(64) || isAsync) {\n      this.next();\n\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n    } else if (this.match(76)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(26)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\n      }\n\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(71) || this.match(70) || this.isLet()) {\n      throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  parseExportDeclaration(node) {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier() {\n    const {\n      type\n    } = this.state;\n\n    if (tokenIsIdentifier(type)) {\n      if (type === 91 && !this.state.containsEsc || type === 95) {\n        return false;\n      }\n\n      if ((type === 122 || type === 121) && !this.state.containsEsc) {\n        const {\n          type: nextType\n        } = this.lookahead();\n\n        if (tokenIsIdentifier(nextType) && nextType !== 93 || nextType === 5) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(61)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n\n    if (this.input.charCodeAt(next) === 44 || tokenIsIdentifier(this.state.type) && hasFrom) {\n      return true;\n    }\n\n    if (this.match(61) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n\n    return false;\n  }\n\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(93)) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else if (expect) {\n      this.unexpected();\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration() {\n    const {\n      type\n    } = this.state;\n\n    if (type === 26) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return type === 70 || type === 71 || type === 64 || type === 76 || this.isLet() || this.isAsyncFunction();\n  }\n\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n\n          const declaration = node.declaration;\n\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) != null && _declaration$extra.parenthesized)) {\n            this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (const specifier of node.specifiers) {\n          const {\n            exported\n          } = specifier;\n          const exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n\n            if (local.type !== \"Identifier\") {\n              this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.value, exportedName);\n            } else {\n              this.checkReservedWord(local.name, local.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(node, name) {\n    if (this.exportedIdentifiers.has(name)) {\n      this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\n    }\n\n    this.exportedIdentifiers.add(name);\n  }\n\n  parseExportSpecifiers(isInTypeExport) {\n    const nodes = [];\n    let first = true;\n    this.expect(5);\n\n    while (!this.eat(8)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n        if (this.eat(8)) break;\n      }\n\n      const isMaybeTypeOnly = this.isContextual(122);\n      const isString = this.match(125);\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      nodes.push(this.parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly));\n    }\n\n    return nodes;\n  }\n\n  parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly) {\n    if (this.eatContextual(89)) {\n      node.exported = this.parseModuleExportName();\n    } else if (isString) {\n      node.exported = cloneStringLiteral(node.local);\n    } else if (!node.exported) {\n      node.exported = cloneIdentifier(node.local);\n    }\n\n    return this.finishNode(node, \"ExportSpecifier\");\n  }\n\n  parseModuleExportName() {\n    if (this.match(125)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = result.value.match(loneSurrogate);\n\n      if (surrogate) {\n        this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\n      }\n\n      return result;\n    }\n\n    return this.parseIdentifier(true);\n  }\n\n  parseImport(node) {\n    node.specifiers = [];\n\n    if (!this.match(125)) {\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(12);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(93);\n    }\n\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n      const attributes = this.maybeParseModuleAttributes();\n\n      if (attributes) {\n        node.attributes = attributes;\n      }\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    if (!this.match(125)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  shouldParseDefaultImport(node) {\n    return tokenIsIdentifier(this.state.type);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(8)) {\n        break;\n      }\n\n      const node = this.startNode();\n      const keyName = this.state.value;\n\n      if (attrNames.has(keyName)) {\n        this.raise(this.state.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);\n      }\n\n      attrNames.add(keyName);\n\n      if (this.match(125)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n\n      this.expect(14);\n\n      if (!this.match(125)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(12));\n\n    return attrs;\n  }\n\n  maybeParseModuleAttributes() {\n    if (this.match(72) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n\n    const attrs = [];\n    const attributes = new Set();\n\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n      }\n\n      attributes.add(node.key.name);\n      this.expect(14);\n\n      if (!this.match(125)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(12));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    if (this.isContextual(90) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n\n    this.eat(5);\n    const attrs = this.parseAssertEntries();\n    this.eat(8);\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(51)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(89);\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(5);\n\n    while (!this.eat(8)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(14)) {\n          throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\n        }\n\n        this.expect(12);\n        if (this.eat(8)) break;\n      }\n\n      const specifier = this.startNode();\n      const importedIsString = this.match(125);\n      const isMaybeTypeOnly = this.isContextual(122);\n      specifier.imported = this.parseModuleExportName();\n      const importSpecifier = this.parseImportSpecifier(specifier, importedIsString, node.importKind === \"type\" || node.importKind === \"typeof\", isMaybeTypeOnly);\n      node.specifiers.push(importSpecifier);\n    }\n  }\n\n  parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly) {\n    if (this.eatContextual(89)) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n\n      if (importedIsString) {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\n      }\n\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n\n      if (!specifier.local) {\n        specifier.local = cloneIdentifier(imported);\n      }\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    return this.finishNode(specifier, \"ImportSpecifier\");\n  }\n\n  isThisParam(param) {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n\n}\n\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n\n  parse() {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n\n}\n\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction generateExportedTokenTypes(internalTokenTypes) {\n  const tokenTypes = {};\n\n  for (const typeName of Object.keys(internalTokenTypes)) {\n    tokenTypes[typeName] = getExportedToken(internalTokenTypes[typeName]);\n  }\n\n  return tokenTypes;\n}\n\nconst tokTypes = generateExportedTokenTypes(tt);\n\nfunction getParser(options, input) {\n  let cls = Parser;\n\n  if (options != null && options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = tokTypes;\n//# sourceMappingURL=index.js.map\n"]},"metadata":{},"sourceType":"script"}