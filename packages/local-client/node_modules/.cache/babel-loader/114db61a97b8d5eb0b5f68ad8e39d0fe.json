{"ast":null,"code":"import _asyncToGenerator from\"/Users/ted/Desktop/jbook/packages/local-client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/Users/ted/Desktop/jbook/packages/local-client/node_modules/@babel/runtime/regenerator/index.js\";import{useEffect}from'react';import CodeEditor from'./code-editor';import Preview from'./preview';import Resizable from'./resizable';import{useActions}from'../hooks/use-actions';import{useTypedSelector}from'../hooks/use-typed-selector';import{useCumulativeCode}from'../hooks/use-cumulative-code';import'./code-cell.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CodeCell=function CodeCell(_ref){var cell=_ref.cell;var _useActions=useActions(),updateCell=_useActions.updateCell,createBundle=_useActions.createBundle;var bundle=useTypedSelector(function(state){return state.bundles&&state.bundles[cell.id];});var cumulativeCode=useCumulativeCode(cell.id);useEffect(function(){if(!bundle){createBundle(cell.id,cumulativeCode);return;}var timer=setTimeout(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:createBundle(cell.id,cumulativeCode);case 1:case\"end\":return _context.stop();}}},_callee);})),750);return function(){clearTimeout(timer);};// eslint-disable-next-line\n},[cumulativeCode,cell.id,createBundle]);return/*#__PURE__*/_jsx(Resizable,{direction:\"vertical\",children:/*#__PURE__*/_jsxs(\"div\",{style:{height:'calc(100% - 10px)',display:'flex',flexDirection:'row'},children:[/*#__PURE__*/_jsx(Resizable,{direction:\"horizontal\",children:/*#__PURE__*/_jsx(CodeEditor,{initialValue:cell.content,onChange:function onChange(value){return updateCell(cell.id,value);}})}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-wrapper\",children:!bundle||bundle.loading?/*#__PURE__*/_jsx(\"div\",{className:\"progress-cover\",children:/*#__PURE__*/_jsx(\"progress\",{className:\"progress is-small is-primary\",max:\"100\",children:\"Loading\"})}):/*#__PURE__*/_jsx(Preview,{code:bundle.code,err:bundle.err})})]})});};export default CodeCell;","map":{"version":3,"sources":["/Users/ted/Desktop/jbook/packages/local-client/src/components/code-cell.tsx"],"names":["useEffect","CodeEditor","Preview","Resizable","useActions","useTypedSelector","useCumulativeCode","CodeCell","cell","updateCell","createBundle","bundle","state","bundles","id","cumulativeCode","timer","setTimeout","clearTimeout","height","display","flexDirection","content","value","loading","code","err"],"mappings":"2QAAA,OAASA,SAAT,KAA0B,OAA1B,CACA,MAAOC,CAAAA,UAAP,KAAuB,eAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CAEA,OAASC,UAAT,KAA2B,sBAA3B,CACA,OAASC,gBAAT,KAAiC,6BAAjC,CACA,OAASC,iBAAT,KAAkC,8BAAlC,CACA,MAAO,iBAAP,C,wFAMA,GAAMC,CAAAA,QAAiC,CAAG,QAApCA,CAAAA,QAAoC,MAAc,IAAXC,CAAAA,IAAW,MAAXA,IAAW,CACpD,gBAAqCJ,UAAU,EAA/C,CAAQK,UAAR,aAAQA,UAAR,CAAoBC,YAApB,aAAoBA,YAApB,CACA,GAAMC,CAAAA,MAAM,CAAGN,gBAAgB,CAAC,SAACO,KAAD,QAAWA,CAAAA,KAAK,CAACC,OAAN,EAAiBD,KAAK,CAACC,OAAN,CAAcL,IAAI,CAACM,EAAnB,CAA5B,EAAD,CAA/B,CACA,GAAMC,CAAAA,cAAc,CAAGT,iBAAiB,CAACE,IAAI,CAACM,EAAN,CAAxC,CAEAd,SAAS,CAAC,UAAM,CACZ,GAAG,CAACW,MAAJ,CAAY,CACRD,YAAY,CAACF,IAAI,CAACM,EAAN,CAAUC,cAAV,CAAZ,CACA,OACH,CAED,GAAMC,CAAAA,KAAK,CAAGC,UAAU,sEAAC,mIACrBP,YAAY,CAACF,IAAI,CAACM,EAAN,CAAUC,cAAV,CAAZ,CADqB,sDAAD,GAErB,GAFqB,CAAxB,CAIA,MAAO,WAAM,CACTG,YAAY,CAACF,KAAD,CAAZ,CACH,CAFD,CAGA;AACH,CAdQ,CAcN,CAACD,cAAD,CAAiBP,IAAI,CAACM,EAAtB,CAA0BJ,YAA1B,CAdM,CAAT,CAgBA,mBACA,KAAC,SAAD,EAAW,SAAS,CAAC,UAArB,uBACI,aAAK,KAAK,CAAE,CAACS,MAAM,CAAE,mBAAT,CAA8BC,OAAO,CAAE,MAAvC,CAA+CC,aAAa,CAAE,KAA9D,CAAZ,wBACI,KAAC,SAAD,EAAW,SAAS,CAAC,YAArB,uBACI,KAAC,UAAD,EACI,YAAY,CAAEb,IAAI,CAACc,OADvB,CAEI,QAAQ,CAAE,kBAACC,KAAD,QAAWd,CAAAA,UAAU,CAACD,IAAI,CAACM,EAAN,CAAUS,KAAV,CAArB,EAFd,EADJ,EADJ,cAOI,YAAK,SAAS,CAAC,kBAAf,UAEQ,CAACZ,MAAD,EAAWA,MAAM,CAACa,OAAlB,cAEY,YAAK,SAAS,CAAC,gBAAf,uBACI,iBAAU,SAAS,CAAC,8BAApB,CAAmD,GAAG,CAAC,KAAvD,qBADJ,EAFZ,cAQM,KAAC,OAAD,EAAS,IAAI,CAAEb,MAAM,CAACc,IAAtB,CAA4B,GAAG,CAAEd,MAAM,CAACe,GAAxC,EAVd,EAPJ,GADJ,EADA,CAyBH,CA9CD,CAgDA,cAAenB,CAAAA,QAAf","sourcesContent":["import { useEffect } from 'react';\nimport CodeEditor from './code-editor';\nimport Preview from './preview';\nimport Resizable from './resizable';\nimport { Cell } from '../state';\nimport { useActions } from '../hooks/use-actions';\nimport { useTypedSelector } from '../hooks/use-typed-selector';\nimport { useCumulativeCode } from '../hooks/use-cumulative-code';\nimport './code-cell.css';\n\ninterface CodeCellProps {\n    cell: Cell\n}\n\nconst CodeCell: React.FC<CodeCellProps> = ({ cell }) => {\n    const { updateCell, createBundle } = useActions();\n    const bundle = useTypedSelector((state) => state.bundles && state.bundles[cell.id]);\n    const cumulativeCode = useCumulativeCode(cell.id);\n\n    useEffect(() => {\n        if(!bundle) {\n            createBundle(cell.id, cumulativeCode);\n            return;\n        }\n\n        const timer = setTimeout(async () => {\n            createBundle(cell.id, cumulativeCode)\n        }, 750);\n\n        return () => {\n            clearTimeout(timer);\n        };\n        // eslint-disable-next-line\n    }, [cumulativeCode, cell.id, createBundle])\n\n    return (\n    <Resizable direction='vertical'>\n        <div style={{height: 'calc(100% - 10px)', display: 'flex', flexDirection: 'row'}}>\n            <Resizable direction='horizontal'>\n                <CodeEditor\n                    initialValue={cell.content}\n                    onChange={(value) => updateCell(cell.id, value)}\n                />\n            </Resizable>\n            <div className=\"progress-wrapper\">\n                {\n                    !bundle || bundle.loading\n                        ? (\n                                <div className=\"progress-cover\">\n                                    <progress className=\"progress is-small is-primary\" max=\"100\">\n                                        Loading\n                                    </progress>\n                                </div>\n                        )\n                        : <Preview code={bundle.code} err={bundle.err} />\n                }\n            </div>\n        </div>\n    </Resizable>\n    )\n};\n\nexport default CodeCell;\n"]},"metadata":{},"sourceType":"module"}