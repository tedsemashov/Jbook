{"ast":null,"code":"var _jsxFileName = \"/Users/ted/Desktop/jbook/packages/local-client/src/components/preview.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef } from 'react';\nimport './preview.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst html = ` \n        <html>\n            <head>\n                <style>html { background-color: white }</style>\n            </head>\n            <body>\n                <div id=\"root\"></div>\n                <script>\n                    const handleError = (err) => {\n                        const root = document.querySelector('#root');\n                         root.innerHTML = '<div style=\"color: red;\"><h4>Runtime Error</h4>' + err + '</div>';\n                         console.error(err);\n                    };\n                    \n                    window.addEventListener('error', event => {\n                        event.preventDefault();\n                        handleError(event.error);\n                    });\n                    \n                    window.addEventListener('message', event => {\n                        try {\n                          eval(event.data);\n                        } catch (err) {\n                          handleError(err);\n                        }\n                    }, false);\n                </script>\n            </body>\n        </html>\n    `;\n\nconst Preview = _ref => {\n  _s();\n\n  let {\n    code,\n    err\n  } = _ref;\n  const iframe = useRef();\n  useEffect(() => {\n    iframe.current.srcdoc = html;\n    setTimeout(() => {\n      iframe.current.contentWindow.postMessage(code, '*');\n    }, 50);\n  }, [code]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"preview-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n      title: \"preview\",\n      ref: iframe,\n      sandbox: \"allow-scripts\",\n      srcDoc: html\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), err && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview-error\",\n      children: err\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Preview, \"GAFleWBZ6O+8Op7dBuDH6PzOglQ=\");\n\n_c = Preview;\nexport default Preview;\n\nvar _c;\n\n$RefreshReg$(_c, \"Preview\");","map":{"version":3,"sources":["/Users/ted/Desktop/jbook/packages/local-client/src/components/preview.tsx"],"names":["useEffect","useRef","html","Preview","code","err","iframe","current","srcdoc","setTimeout","contentWindow","postMessage"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AACA,OAAO,eAAP;;AAOA,MAAMC,IAAI,GAAI;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KA7BA;;AA+BA,MAAMC,OAA+B,GAAG,QAAmB;AAAA;;AAAA,MAAlB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAkB;AACvD,QAAMC,MAAM,GAAGL,MAAM,EAArB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,MAAM,CAACC,OAAP,CAAeC,MAAf,GAAwBN,IAAxB;AACAO,IAAAA,UAAU,CAAC,MAAM;AACbH,MAAAA,MAAM,CAACC,OAAP,CAAeG,aAAf,CAA6BC,WAA7B,CAAyCP,IAAzC,EAA+C,GAA/C;AACH,KAFS,EAEP,EAFO,CAAV;AAGH,GALQ,EAKN,CAACA,IAAD,CALM,CAAT;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACI;AACI,MAAA,KAAK,EAAC,SADV;AAEI,MAAA,GAAG,EAAEE,MAFT;AAGI,MAAA,OAAO,EAAC,eAHZ;AAII,MAAA,MAAM,EAAEJ;AAJZ;AAAA;AAAA;AAAA;AAAA,YADJ,EAOKG,GAAG,iBAAI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBAAgCA;AAAhC;AAAA;AAAA;AAAA;AAAA,YAPZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CArBD;;GAAMF,O;;KAAAA,O;AAuBN,eAAeA,OAAf","sourcesContent":["import { useEffect, useRef } from 'react';\nimport './preview.css';\n\ninterface PreviewProps {\n    code: string;\n    err: string;\n}\n\nconst html = ` \n        <html>\n            <head>\n                <style>html { background-color: white }</style>\n            </head>\n            <body>\n                <div id=\"root\"></div>\n                <script>\n                    const handleError = (err) => {\n                        const root = document.querySelector('#root');\n                         root.innerHTML = '<div style=\"color: red;\"><h4>Runtime Error</h4>' + err + '</div>';\n                         console.error(err);\n                    };\n                    \n                    window.addEventListener('error', event => {\n                        event.preventDefault();\n                        handleError(event.error);\n                    });\n                    \n                    window.addEventListener('message', event => {\n                        try {\n                          eval(event.data);\n                        } catch (err) {\n                          handleError(err);\n                        }\n                    }, false);\n                </script>\n            </body>\n        </html>\n    `;\n\nconst Preview: React.FC<PreviewProps> = ({ code, err }) => {\n    const iframe = useRef<any>();\n\n    useEffect(() => {\n        iframe.current.srcdoc = html;\n        setTimeout(() => {\n            iframe.current.contentWindow.postMessage(code, '*');\n        }, 50)\n    }, [code]);\n\n    return (\n        <div className=\"preview-wrapper\">\n            <iframe\n                title=\"preview\"\n                ref={iframe}\n                sandbox=\"allow-scripts\"\n                srcDoc={html}\n            />\n            {err && <div className=\"preview-error\">{err}</div>}\n        </div>\n    )\n};\n\nexport default Preview;\n"]},"metadata":{},"sourceType":"module"}