{"ast":null,"code":"import CodeCell from'./code-cell';import TextEditor from'./text-editor';import ActionBar from'./action-bar';import'./cell-list-item.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CellListItem=function CellListItem(_ref){var cell=_ref.cell;var child;if(cell.type==='code'){child=/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"action-bar-wrapper\",children:/*#__PURE__*/_jsx(ActionBar,{id:cell.id})}),/*#__PURE__*/_jsx(CodeCell,{cell:cell})]});}else{child=/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(TextEditor,{cell:cell}),/*#__PURE__*/_jsx(ActionBar,{id:cell.id})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"cell-list-item\",children:[child,/*#__PURE__*/_jsx(ActionBar,{id:cell.id})]});};export default CellListItem;","map":{"version":3,"sources":["/Users/ted/Desktop/jbook/packages/local-client/src/components/cell-list-item.tsx"],"names":["CodeCell","TextEditor","ActionBar","CellListItem","cell","child","type","id"],"mappings":"AACA,MAAOA,CAAAA,QAAP,KAAqB,aAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,eAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,cAAtB,CACA,MAAO,sBAAP,C,6IAMA,GAAMC,CAAAA,YAAyC,CAAG,QAA5CA,CAAAA,YAA4C,MAAc,IAAXC,CAAAA,IAAW,MAAXA,IAAW,CAC5D,GAAIC,CAAAA,KAAJ,CAEA,GAAGD,IAAI,CAACE,IAAL,GAAc,MAAjB,CAAyB,CACvBD,KAAK,cAAG,wCACJ,YAAK,SAAS,CAAC,oBAAf,uBACE,KAAC,SAAD,EAAW,EAAE,CAAED,IAAI,CAACG,EAApB,EADF,EADI,cAIJ,KAAC,QAAD,EAAU,IAAI,CAAEH,IAAhB,EAJI,GAAR,CAMD,CAPD,IAOO,CACHC,KAAK,cAAG,wCACJ,KAAC,UAAD,EAAY,IAAI,CAAED,IAAlB,EADI,cAEJ,KAAC,SAAD,EAAW,EAAE,CAAEA,IAAI,CAACG,EAApB,EAFI,GAAR,CAIH,CAED,mBACI,aAAK,SAAS,CAAC,gBAAf,WACKF,KADL,cAEI,KAAC,SAAD,EAAW,EAAE,CAAED,IAAI,CAACG,EAApB,EAFJ,GADJ,CAMH,CAvBD,CAyBA,cAAeJ,CAAAA,YAAf","sourcesContent":["import { Cell } from '../state';\nimport CodeCell from './code-cell';\nimport TextEditor from './text-editor';\nimport ActionBar from './action-bar';\nimport './cell-list-item.css';\n\ninterface CellListItemProps {\n    cell: Cell\n}\n\nconst CellListItem: React.FC<CellListItemProps> = ({ cell }) => {\n    let child: JSX.Element;\n\n    if(cell.type === 'code') {\n      child = <>\n          <div className=\"action-bar-wrapper\">\n            <ActionBar id={cell.id} />\n          </div>\n          <CodeCell cell={cell} />\n      </>\n    } else {\n        child = <>\n            <TextEditor cell={cell} />\n            <ActionBar id={cell.id} />\n        </>\n    }\n\n    return (\n        <div className=\"cell-list-item\">\n            {child}\n            <ActionBar id={cell.id}/>\n        </div>\n    )\n}\n\nexport default CellListItem;\n"]},"metadata":{},"sourceType":"module"}