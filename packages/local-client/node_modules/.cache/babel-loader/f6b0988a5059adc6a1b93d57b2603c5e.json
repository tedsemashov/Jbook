{"ast":null,"code":"var _jsxFileName = \"/Users/ted/Desktop/code-editor/src/components/add-cell.tsx\",\n    _s = $RefreshSig$();\n\nimport './add-cell.css';\nimport { useActions } from \"../hooks/use-actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddCell = _ref => {\n  _s();\n\n  let {\n    previousCellId\n  } = _ref;\n  const {\n    insertCellAfter\n  } = useActions();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-cell\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button is-rounded is-primary is-small\",\n        onClick: () => insertCellAfter(previousCellId, 'code'),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"icon is-small\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button is-rounded is-primary is-small\",\n        onClick: () => insertCellAfter(previousCellId, 'text'),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"icon is-small\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"divider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddCell, \"ain1WfJPsCStQGbSx2B93tc4GvE=\", false, function () {\n  return [useActions];\n});\n\n_c = AddCell;\nexport default AddCell;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCell\");","map":{"version":3,"sources":["/Users/ted/Desktop/code-editor/src/components/add-cell.tsx"],"names":["useActions","AddCell","previousCellId","insertCellAfter"],"mappings":";;;AAAA,OAAO,gBAAP;AACA,SAASA,UAAT,QAA2B,sBAA3B;;;AAMA,MAAMC,OAA+B,GAAG,QAAwB;AAAA;;AAAA,MAAvB;AAAEC,IAAAA;AAAF,GAAuB;AAC5D,QAAM;AAAEC,IAAAA;AAAF,MAAsBH,UAAU,EAAtC;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAC,uCAAlB;AAA0D,QAAA,OAAO,EAAE,MAAMG,eAAe,CAACD,cAAD,EAAiB,MAAjB,CAAxF;AAAA,gCACI;AAAM,UAAA,SAAS,EAAC,eAAhB;AAAA,iCACI;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAQ,QAAA,SAAS,EAAC,uCAAlB;AAA0D,QAAA,OAAO,EAAE,MAAMC,eAAe,CAACD,cAAD,EAAiB,MAAjB,CAAxF;AAAA,gCACI;AAAM,UAAA,SAAS,EAAC,eAAhB;AAAA,iCACI;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAeI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CAtBD;;GAAMD,O;UAC0BD,U;;;KAD1BC,O;AAwBN,eAAeA,OAAf","sourcesContent":["import './add-cell.css';\nimport { useActions } from \"../hooks/use-actions\";\n\ninterface AddCellProps {\n    previousCellId: string | null;\n}\n\nconst AddCell: React.FC<AddCellProps> = ({ previousCellId }) => {\n    const { insertCellAfter } = useActions();\n\n    return (\n        <div className=\"add-cell\">\n            <div className=\"add-buttons\">\n                <button className=\"button is-rounded is-primary is-small\" onClick={() => insertCellAfter(previousCellId, 'code')}>\n                    <span className=\"icon is-small\">\n                        <i className=\"fas fa-plus\"/>\n                    </span>\n                    <span>Code</span>\n                </button>\n                <button className=\"button is-rounded is-primary is-small\" onClick={() => insertCellAfter(previousCellId, 'text')}>\n                    <span className=\"icon is-small\">\n                        <i className=\"fas fa-plus\"/>\n                    </span>\n                    <span>Text</span>\n                </button>\n            </div>\n            <div className=\"divider\" />\n        </div>\n    )\n}\n\nexport default AddCell;\n"]},"metadata":{},"sourceType":"module"}