{"ast":null,"code":"// Type TS\nimport { ActionType } from \"../action-types\";\nimport bundle from \"../../bundler\";\nexport const updateCell = (id, content) => {\n  return {\n    type: ActionType.UPDATE_CELL,\n    payload: {\n      id,\n      content\n    }\n  };\n};\nexport const deleteCell = id => {\n  return {\n    type: ActionType.DELETE_CELL,\n    payload: id\n  };\n};\nexport const moveCell = (id, direction) => {\n  return {\n    type: ActionType.MOVE_CELL,\n    payload: {\n      id,\n      direction\n    }\n  };\n};\nexport const insertCellAfter = (id, cellType) => {\n  return {\n    type: ActionType.INSERT_CELL_AFTER,\n    payload: {\n      id,\n      type: cellType\n    }\n  };\n};\nexport const createBundle = (cellId, input) => {\n  return async dispatch => {\n    dispatch({\n      type: ActionType.BUNDLE_START,\n      payload: {\n        cellId\n      }\n    });\n    const result = await bundle(input);\n    dispatch({\n      type: ActionType.BUNDLE_COMPLETE,\n      payload: {\n        cellId,\n        bundle: result\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/Users/ted/Desktop/jbook/packages/local-client/src/state/action-creators/index.ts"],"names":["ActionType","bundle","updateCell","id","content","type","UPDATE_CELL","payload","deleteCell","DELETE_CELL","moveCell","direction","MOVE_CELL","insertCellAfter","cellType","INSERT_CELL_AFTER","createBundle","cellId","input","dispatch","BUNDLE_START","result","BUNDLE_COMPLETE"],"mappings":"AAAgC;AAChC,SAAQA,UAAR,QAAyB,iBAAzB;AAUA,OAAOC,MAAP,MAAmB,eAAnB;AAEA,OAAO,MAAMC,UAAU,GAAG,CAACC,EAAD,EAAaC,OAAb,KAAmD;AACzE,SAAO;AACHC,IAAAA,IAAI,EAAEL,UAAU,CAACM,WADd;AAEHC,IAAAA,OAAO,EAAE;AACLJ,MAAAA,EADK;AAELC,MAAAA;AAFK;AAFN,GAAP;AAOH,CARM;AAUP,OAAO,MAAMI,UAAU,GAAIL,EAAD,IAAkC;AACxD,SAAO;AACHE,IAAAA,IAAI,EAAEL,UAAU,CAACS,WADd;AAEHF,IAAAA,OAAO,EAAEJ;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMO,QAAQ,GAAG,CAACP,EAAD,EAAaQ,SAAb,KAAsD;AAC1E,SAAO;AACHN,IAAAA,IAAI,EAAEL,UAAU,CAACY,SADd;AAEHL,IAAAA,OAAO,EAAE;AACLJ,MAAAA,EADK;AAELQ,MAAAA;AAFK;AAFN,GAAP;AAOH,CARM;AAUP,OAAO,MAAME,eAAe,GAAG,CAACV,EAAD,EAAoBW,QAApB,KAAoE;AAC/F,SAAO;AACHT,IAAAA,IAAI,EAAEL,UAAU,CAACe,iBADd;AAEHR,IAAAA,OAAO,EAAE;AACLJ,MAAAA,EADK;AAELE,MAAAA,IAAI,EAAES;AAFD;AAFN,GAAP;AAOH,CARM;AAUP,OAAO,MAAME,YAAY,GAAG,CAACC,MAAD,EAAiBC,KAAjB,KAAmC;AAC3D,SAAO,MAAOC,QAAP,IAAsC;AACzCA,IAAAA,QAAQ,CAAC;AACLd,MAAAA,IAAI,EAAEL,UAAU,CAACoB,YADZ;AAELb,MAAAA,OAAO,EAAE;AACLU,QAAAA;AADK;AAFJ,KAAD,CAAR;AAOA,UAAMI,MAAM,GAAG,MAAMpB,MAAM,CAACiB,KAAD,CAA3B;AAEAC,IAAAA,QAAQ,CAAC;AACLd,MAAAA,IAAI,EAAEL,UAAU,CAACsB,eADZ;AAELf,MAAAA,OAAO,EAAE;AACLU,QAAAA,MADK;AAELhB,QAAAA,MAAM,EAAEoB;AAFH;AAFJ,KAAD,CAAR;AAOH,GAjBD;AAkBH,CAnBM","sourcesContent":["import {Dispatch} from \"redux\"; // Type TS\nimport {ActionType} from \"../action-types\";\nimport {\n    Action,\n    DeleteCellAction,\n    Direction,\n    InsertCellAfterAction,\n    MoveCellAction,\n    UpdateCellAction,\n} from \"../actions\";\nimport {CellTypes} from \"../cell\";\nimport bundle from \"../../bundler\";\n\nexport const updateCell = (id: string, content: string): UpdateCellAction => {\n    return {\n        type: ActionType.UPDATE_CELL,\n        payload: {\n            id,\n            content\n        }\n    }\n};\n\nexport const deleteCell = (id: string): DeleteCellAction => {\n    return {\n        type: ActionType.DELETE_CELL,\n        payload: id,\n    }\n};\n\nexport const moveCell = (id: string, direction: Direction): MoveCellAction => {\n    return {\n        type: ActionType.MOVE_CELL,\n        payload: {\n            id,\n            direction\n        }\n    }\n};\n\nexport const insertCellAfter = (id: string | null, cellType: CellTypes ): InsertCellAfterAction => {\n    return {\n        type: ActionType.INSERT_CELL_AFTER,\n        payload: {\n            id,\n            type: cellType\n        }\n    }\n};\n\nexport const createBundle = (cellId: string, input: string) => {\n    return async (dispatch: Dispatch<Action>) => {\n        dispatch({\n            type: ActionType.BUNDLE_START,\n            payload: {\n                cellId\n            }\n        });\n\n        const result = await bundle(input);\n\n        dispatch({\n            type: ActionType.BUNDLE_COMPLETE,\n            payload: {\n                cellId,\n                bundle: result\n            }\n        })\n    }\n};\n"]},"metadata":{},"sourceType":"module"}