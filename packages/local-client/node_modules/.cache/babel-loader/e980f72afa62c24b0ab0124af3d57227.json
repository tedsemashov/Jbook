{"ast":null,"code":"import'./code-editor.css';import'./syntax.css';import MonacoEditor from'@monaco-editor/react';import{useRef}from'react';import prettier from'prettier';import parser from'prettier/parser-babel';import codeShift from'jscodeshift';import Highlighter from'monaco-jsx-highlighter';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CodeEditor=function CodeEditor(_ref){var onChange=_ref.onChange,initialValue=_ref.initialValue;var editorRef=useRef();var onEditorDidMount=function onEditorDidMount(getValue,monacoEditor){var _monacoEditor$getMode;editorRef.current=monacoEditor;monacoEditor.onDidChangeModelContent(function(){onChange(getValue());});(_monacoEditor$getMode=monacoEditor.getModel())===null||_monacoEditor$getMode===void 0?void 0:_monacoEditor$getMode.updateOptions({tabSize:2});var highlighter=new Highlighter(// @ts-ignore\nwindow.monaco,codeShift,monacoEditor);highlighter.highLightOnDidChangeModelContent(function(){},function(){},undefined,function(){});};var onFormatCLick=function onFormatCLick(){var unformatted=editorRef.current.getModel().getValue();var formatted=prettier.format(unformatted,{parser:'babel',plugins:[parser],useTabs:false,semi:true,singleQuote:true}).replace(/\\n$/,'');editorRef.current.setValue(formatted);};return/*#__PURE__*/_jsxs(\"div\",{className:\"editor-wrapper\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"button button-format is-primary is-small\",onClick:onFormatCLick,children:\"Format\"}),/*#__PURE__*/_jsx(MonacoEditor,{editorDidMount:onEditorDidMount,value:initialValue,theme:\"dark\",language:\"javascript\",options:{wordWrap:\"on\",minimap:{enabled:false},showUnused:false,folding:false,lineNumbersMinChars:3,fontSize:16,scrollBeyondLastLine:false,automaticLayout:true},height:\"100%\"})]});};export default CodeEditor;","map":{"version":3,"sources":["/Users/ted/Desktop/jbook/packages/local-client/src/components/code-editor.tsx"],"names":["MonacoEditor","useRef","prettier","parser","codeShift","Highlighter","CodeEditor","onChange","initialValue","editorRef","onEditorDidMount","getValue","monacoEditor","current","onDidChangeModelContent","getModel","updateOptions","tabSize","highlighter","window","monaco","highLightOnDidChangeModelContent","undefined","onFormatCLick","unformatted","formatted","format","plugins","useTabs","semi","singleQuote","replace","setValue","wordWrap","minimap","enabled","showUnused","folding","lineNumbersMinChars","fontSize","scrollBeyondLastLine","automaticLayout"],"mappings":"AAAA,MAAO,mBAAP,CACA,MAAO,cAAP,CACA,MAAOA,CAAAA,YAAP,KAA6C,sBAA7C,CACA,OAASC,MAAT,KAAuB,OAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,UAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,uBAAnB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,WAAP,KAAwB,wBAAxB,C,wFAOA,GAAMC,CAAAA,UAAqC,CAAG,QAAxCA,CAAAA,UAAwC,MAAgC,IAA7BC,CAAAA,QAA6B,MAA7BA,QAA6B,CAAnBC,YAAmB,MAAnBA,YAAmB,CAC1E,GAAMC,CAAAA,SAAS,CAAGR,MAAM,EAAxB,CAEA,GAAMS,CAAAA,gBAAgC,CAAG,QAAnCA,CAAAA,gBAAmC,CAAEC,QAAF,CAAYC,YAAZ,CAA6B,2BAClEH,SAAS,CAACI,OAAV,CAAoBD,YAApB,CACAA,YAAY,CAACE,uBAAb,CAAqC,UAAM,CACvCP,QAAQ,CAACI,QAAQ,EAAT,CAAR,CACH,CAFD,EAIA,uBAAAC,YAAY,CAACG,QAAb,wEAAyBC,aAAzB,CAAuC,CAAEC,OAAO,CAAE,CAAX,CAAvC,EACA,GAAMC,CAAAA,WAAW,CAAG,GAAIb,CAAAA,WAAJ,CAChB;AACAc,MAAM,CAACC,MAFS,CAGhBhB,SAHgB,CAIhBQ,YAJgB,CAApB,CAOAM,WAAW,CAACG,gCAAZ,CACI,UAAK,CAAE,CADX,CAEI,UAAK,CAAE,CAFX,CAGIC,SAHJ,CAII,UAAK,CAAE,CAJX,EAMH,CApBD,CAsBF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1B,GAAMC,CAAAA,WAAW,CAAGf,SAAS,CAACI,OAAV,CAAkBE,QAAlB,GAA6BJ,QAA7B,EAApB,CACA,GAAMc,CAAAA,SAAS,CAAGvB,QAAQ,CAACwB,MAAT,CAAgBF,WAAhB,CAA4B,CAC1CrB,MAAM,CAAE,OADkC,CAE1CwB,OAAO,CAAE,CAACxB,MAAD,CAFiC,CAG1CyB,OAAO,CAAE,KAHiC,CAI1CC,IAAI,CAAE,IAJoC,CAK1CC,WAAW,CAAE,IAL6B,CAA5B,EAMfC,OANe,CAMP,KANO,CAMA,EANA,CAAlB,CAOAtB,SAAS,CAACI,OAAV,CAAkBmB,QAAlB,CAA2BP,SAA3B,EACD,CAVD,CAYA,mBACI,aAAK,SAAS,CAAC,gBAAf,wBACI,eACI,SAAS,CAAC,0CADd,CAEI,OAAO,CAAEF,aAFb,oBADJ,cAII,KAAC,YAAD,EACI,cAAc,CAAEb,gBADpB,CAEI,KAAK,CAAEF,YAFX,CAGI,KAAK,CAAC,MAHV,CAII,QAAQ,CAAC,YAJb,CAKI,OAAO,CAAE,CACLyB,QAAQ,CAAE,IADL,CAELC,OAAO,CAAE,CAAEC,OAAO,CAAE,KAAX,CAFJ,CAGLC,UAAU,CAAE,KAHP,CAILC,OAAO,CAAE,KAJJ,CAKLC,mBAAmB,CAAE,CALhB,CAMLC,QAAQ,CAAE,EANL,CAOLC,oBAAoB,CAAE,KAPjB,CAQLC,eAAe,CAAE,IARZ,CALb,CAeI,MAAM,CAAC,MAfX,EAJJ,GADJ,CAwBD,CA7DD,CA+DA,cAAenC,CAAAA,UAAf","sourcesContent":["import './code-editor.css';\nimport './syntax.css';\nimport MonacoEditor, { EditorDidMount } from '@monaco-editor/react';\nimport { useRef } from 'react';\nimport prettier from 'prettier';\nimport parser from 'prettier/parser-babel';\nimport codeShift from 'jscodeshift';\nimport Highlighter from 'monaco-jsx-highlighter'\n\ninterface CodeEditorProps {\n  initialValue: string,\n  onChange(value: string): void\n}\n\nconst CodeEditor: React.FC<CodeEditorProps> = ({ onChange, initialValue }) => {\n    const editorRef = useRef<any>();\n\n    const onEditorDidMount: EditorDidMount = ( getValue, monacoEditor) => {\n        editorRef.current = monacoEditor;\n        monacoEditor.onDidChangeModelContent(() => {\n            onChange(getValue())\n        });\n\n        monacoEditor.getModel()?.updateOptions({ tabSize: 2 })\n        const highlighter = new Highlighter(\n            // @ts-ignore\n            window.monaco,\n            codeShift,\n            monacoEditor\n        );\n\n        highlighter.highLightOnDidChangeModelContent(\n            () =>{},\n            () =>{},\n            undefined,\n            () =>{}\n        );\n    };\n\n  const onFormatCLick = () => {\n    const unformatted = editorRef.current.getModel().getValue();\n    const formatted = prettier.format(unformatted,{\n        parser: 'babel',\n        plugins: [parser],\n        useTabs: false,\n        semi: true,\n        singleQuote: true\n    }).replace(/\\n$/, '');\n    editorRef.current.setValue(formatted);\n  };\n\n  return (\n      <div className=\"editor-wrapper\">\n          <button\n              className=\"button button-format is-primary is-small\"\n              onClick={onFormatCLick} >Format</button>\n          <MonacoEditor\n              editorDidMount={onEditorDidMount}\n              value={initialValue}\n              theme=\"dark\"\n              language=\"javascript\"\n              options={{\n                  wordWrap: \"on\",\n                  minimap: { enabled: false },\n                  showUnused: false,\n                  folding: false,\n                  lineNumbersMinChars: 3,\n                  fontSize: 16,\n                  scrollBeyondLastLine: false,\n                  automaticLayout: true\n              }}\n              height=\"100%\"\n          />\n      </div>\n  )\n};\n\nexport default CodeEditor;\n"]},"metadata":{},"sourceType":"module"}