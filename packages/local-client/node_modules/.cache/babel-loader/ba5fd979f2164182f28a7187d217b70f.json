{"ast":null,"code":"var _jsxFileName = \"/Users/ted/Desktop/code-editor/src/components/code-cell.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport CodeEditor from './code-editor';\nimport Preview from './preview';\nimport bundle from '../bundler';\nimport Resizable from './resizable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CodeCell = () => {\n  _s();\n\n  const [input, setInput] = useState('');\n  const [code, setCode] = useState('');\n\n  const onClick = async () => {\n    const output = await bundle(input);\n    setCode(output);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Resizable, {\n    direction: \"vertical\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'row'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CodeEditor, {\n        initialValue: \"\",\n        onChange: value => setInput(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Preview, {\n        code: code\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CodeCell, \"vzGklZd+2xbn0OlQKxB5t9/zfpQ=\");\n\n_c = CodeCell;\nexport default CodeCell;\n\nvar _c;\n\n$RefreshReg$(_c, \"CodeCell\");","map":{"version":3,"sources":["/Users/ted/Desktop/code-editor/src/components/code-cell.tsx"],"names":["useState","CodeEditor","Preview","bundle","Resizable","CodeCell","input","setInput","code","setCode","onClick","output","height","display","flexDirection","value"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMU,OAAO,GAAG,YAAY;AACxB,UAAMC,MAAM,GAAG,MAAMR,MAAM,CAACG,KAAD,CAA3B;AACAG,IAAAA,OAAO,CAACE,MAAD,CAAP;AACH,GAHD;;AAKA,sBACA,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,UAArB;AAAA,2BACI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE,MAAT;AAAiBC,QAAAA,OAAO,EAAE,MAA1B;AAAkCC,QAAAA,aAAa,EAAE;AAAjD,OAAZ;AAAA,8BACI,QAAC,UAAD;AACI,QAAA,YAAY,EAAC,EADjB;AAEI,QAAA,QAAQ,EAAGC,KAAD,IAAWR,QAAQ,CAACQ,KAAD;AAFjC;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,OAAD;AAAS,QAAA,IAAI,EAAEP;AAAf;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADA;AAWH,CApBD;;GAAMH,Q;;KAAAA,Q;AAsBN,eAAeA,QAAf","sourcesContent":["import { useState } from 'react';\nimport CodeEditor from './code-editor';\nimport Preview from './preview';\nimport bundle from '../bundler'\nimport Resizable from './resizable';\n\nconst CodeCell = () => {\n    const [input, setInput] = useState('');\n    const [code, setCode] = useState('');\n\n    const onClick = async () => {\n        const output = await bundle(input);\n        setCode(output);\n    };\n\n    return (\n    <Resizable direction='vertical'>\n        <div style={{height: '100%', display: 'flex', flexDirection: 'row'}}>\n            <CodeEditor\n                initialValue=\"\"\n                onChange={(value) => setInput(value)}\n            />\n            <Preview code={code} />\n        </div>\n    </Resizable>\n    )\n};\n\nexport default CodeCell;\n"]},"metadata":{},"sourceType":"module"}