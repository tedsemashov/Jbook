{"ast":null,"code":"import'./add-cell.css';import{useActions}from\"../hooks/use-actions\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AddCell=function AddCell(_ref){var previousCellId=_ref.previousCellId;var _useActions=useActions(),insertCellAfter=_useActions.insertCellAfter;return/*#__PURE__*/_jsxs(\"div\",{className:\"add-cell\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"add-buttons\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"button is-rounded is-primary is-small\",onClick:function onClick(){return insertCellAfter(previousCellId,'code');},children:[/*#__PURE__*/_jsx(\"span\",{className:\"icon is-small\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-plus\"})}),/*#__PURE__*/_jsx(\"span\",{children:\"Code\"})]}),/*#__PURE__*/_jsxs(\"button\",{className:\"button is-rounded is-primary is-small\",onClick:function onClick(){return insertCellAfter(previousCellId,'text');},children:[/*#__PURE__*/_jsx(\"span\",{className:\"icon is-small\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-plus\"})}),/*#__PURE__*/_jsx(\"span\",{children:\"Text\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"divider\"})]});};export default AddCell;","map":{"version":3,"sources":["/Users/ted/Desktop/jbook/packages/local-client/src/components/add-cell.tsx"],"names":["useActions","AddCell","previousCellId","insertCellAfter"],"mappings":"AAAA,MAAO,gBAAP,CACA,OAASA,UAAT,KAA2B,sBAA3B,C,wFAMA,GAAMC,CAAAA,OAA+B,CAAG,QAAlCA,CAAAA,OAAkC,MAAwB,IAArBC,CAAAA,cAAqB,MAArBA,cAAqB,CAC5D,gBAA4BF,UAAU,EAAtC,CAAQG,eAAR,aAAQA,eAAR,CAEA,mBACI,aAAK,SAAS,CAAC,UAAf,wBACI,aAAK,SAAS,CAAC,aAAf,wBACI,gBAAQ,SAAS,CAAC,uCAAlB,CAA0D,OAAO,CAAE,yBAAMA,CAAAA,eAAe,CAACD,cAAD,CAAiB,MAAjB,CAArB,EAAnE,wBACI,aAAM,SAAS,CAAC,eAAhB,uBACI,UAAG,SAAS,CAAC,aAAb,EADJ,EADJ,cAII,8BAJJ,GADJ,cAOI,gBAAQ,SAAS,CAAC,uCAAlB,CAA0D,OAAO,CAAE,yBAAMC,CAAAA,eAAe,CAACD,cAAD,CAAiB,MAAjB,CAArB,EAAnE,wBACI,aAAM,SAAS,CAAC,eAAhB,uBACI,UAAG,SAAS,CAAC,aAAb,EADJ,EADJ,cAII,8BAJJ,GAPJ,GADJ,cAeI,YAAK,SAAS,CAAC,SAAf,EAfJ,GADJ,CAmBH,CAtBD,CAwBA,cAAeD,CAAAA,OAAf","sourcesContent":["import './add-cell.css';\nimport { useActions } from \"../hooks/use-actions\";\n\ninterface AddCellProps {\n    previousCellId: string | null;\n}\n\nconst AddCell: React.FC<AddCellProps> = ({ previousCellId }) => {\n    const { insertCellAfter } = useActions();\n\n    return (\n        <div className=\"add-cell\">\n            <div className=\"add-buttons\">\n                <button className=\"button is-rounded is-primary is-small\" onClick={() => insertCellAfter(previousCellId, 'code')}>\n                    <span className=\"icon is-small\">\n                        <i className=\"fas fa-plus\"/>\n                    </span>\n                    <span>Code</span>\n                </button>\n                <button className=\"button is-rounded is-primary is-small\" onClick={() => insertCellAfter(previousCellId, 'text')}>\n                    <span className=\"icon is-small\">\n                        <i className=\"fas fa-plus\"/>\n                    </span>\n                    <span>Text</span>\n                </button>\n            </div>\n            <div className=\"divider\" />\n        </div>\n    )\n}\n\nexport default AddCell;\n"]},"metadata":{},"sourceType":"module"}