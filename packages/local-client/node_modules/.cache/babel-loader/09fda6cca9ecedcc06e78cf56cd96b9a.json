{"ast":null,"code":"var _jsxFileName = \"/Users/ted/Desktop/code-editor/src/components/resizable.tsx\";\nimport { ResizableBox } from 'react-resizable';\nimport './resizable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Resizable = _ref => {\n  let {\n    direction,\n    children\n  } = _ref;\n  let resizableProps;\n\n  if (direction === 'horizontal') {\n    resizableProps = {\n      minConstraints: [window.innerHeight * 0.2, Infinity],\n      maxConstraints: [window.innerHeight * 0.75, Infinity],\n      width: 300,\n      height: 300,\n      resizeHandles: ['s']\n    };\n  } else {\n    resizableProps = {\n      minConstraints: [Infinity, 50],\n      maxConstraints: [Infinity, window.innerHeight * 0.9],\n      width: 300,\n      height: 300,\n      resizeHandles: ['s']\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(ResizableBox, { ...resizableProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Resizable;\nexport default Resizable;\n\nvar _c;\n\n$RefreshReg$(_c, \"Resizable\");","map":{"version":3,"sources":["/Users/ted/Desktop/code-editor/src/components/resizable.tsx"],"names":["ResizableBox","Resizable","direction","children","resizableProps","minConstraints","window","innerHeight","Infinity","maxConstraints","width","height","resizeHandles"],"mappings":";AAAA,SAASA,YAAT,QAAgD,iBAAhD;AACA,OAAO,iBAAP;;;AAMA,MAAMC,SAAmC,GAAG,QAA6B;AAAA,MAA5B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAA4B;AACrE,MAAIC,cAAJ;;AAEA,MAAGF,SAAS,KAAK,YAAjB,EAA+B;AAC3BE,IAAAA,cAAc,GAAG;AACbC,MAAAA,cAAc,EAAE,CAACC,MAAM,CAACC,WAAP,GAAqB,GAAtB,EAA2BC,QAA3B,CADH;AAEbC,MAAAA,cAAc,EAAE,CAACH,MAAM,CAACC,WAAP,GAAqB,IAAtB,EAA4BC,QAA5B,CAFH;AAGbE,MAAAA,KAAK,EAAE,GAHM;AAIbC,MAAAA,MAAM,EAAE,GAJK;AAKbC,MAAAA,aAAa,EAAE,CAAC,GAAD;AALF,KAAjB;AAOH,GARD,MAQO;AACHR,IAAAA,cAAc,GAAG;AACbC,MAAAA,cAAc,EAAE,CAACG,QAAD,EAAW,EAAX,CADH;AAEbC,MAAAA,cAAc,EAAE,CAACD,QAAD,EAAWF,MAAM,CAACC,WAAP,GAAqB,GAAhC,CAFH;AAGbG,MAAAA,KAAK,EAAE,GAHM;AAIbC,MAAAA,MAAM,EAAE,GAJK;AAKbC,MAAAA,aAAa,EAAE,CAAC,GAAD;AALF,KAAjB;AAOH;;AAED,sBACE,QAAC,YAAD,OAAkBR,cAAlB;AAAA,cACKD;AADL;AAAA;AAAA;AAAA;AAAA,UADF;AAKH,CA1BD;;KAAMF,S;AA4BN,eAAeA,SAAf","sourcesContent":["import { ResizableBox, ResizableBoxProps } from 'react-resizable';\nimport './resizable.css';\n\ninterface ResizableProps {\n    direction: 'horizontal' | 'vertical'\n}\n\nconst Resizable: React.FC<ResizableProps> = ({ direction, children }) => {\n    let resizableProps: ResizableBoxProps;\n\n    if(direction === 'horizontal') {\n        resizableProps = {\n            minConstraints: [window.innerHeight * 0.2, Infinity],\n            maxConstraints: [window.innerHeight * 0.75, Infinity],\n            width: 300,\n            height: 300,\n            resizeHandles: ['s']\n        }\n    } else {\n        resizableProps = {\n            minConstraints: [Infinity, 50],\n            maxConstraints: [Infinity, window.innerHeight * 0.9],\n            width: 300,\n            height: 300,\n            resizeHandles: ['s']\n        }\n    }\n\n    return (\n      <ResizableBox {...resizableProps}>\n          {children}\n      </ResizableBox>\n  )\n}\n\nexport default Resizable;\n"]},"metadata":{},"sourceType":"module"}