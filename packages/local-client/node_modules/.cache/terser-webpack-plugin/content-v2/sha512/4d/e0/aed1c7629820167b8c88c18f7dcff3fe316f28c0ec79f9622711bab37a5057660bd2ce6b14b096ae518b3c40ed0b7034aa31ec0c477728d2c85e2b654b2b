{"code":"(this[\"webpackJsonpcode-editor\"]=this[\"webpackJsonpcode-editor\"]||[]).push([[275],{445:function(e,i){Prism.languages.makefile={comment:{pattern:/(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,lookbehind:!0},string:{pattern:/([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0},builtin:/\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,symbol:{pattern:/^(?:[^:=\\s]|[ \\t]+(?![\\s:]))+(?=\\s*:(?!=))/m,inside:{variable:/\\$+(?:(?!\\$)[^(){}:#=\\s]+|(?=[({]))/}},variable:/\\$+(?:(?!\\$)[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,keyword:[/-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,{pattern:/(\\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \\t])/,lookbehind:!0}],operator:/(?:::|[?:+!])?=|[|@]/,punctuation:/[:;(){}]/}}}]);","name":"static/js/275.659e4827.chunk.js","map":{"version":3,"sources":["static/js/275.659e4827.chunk.js"],"names":["this","push","module","exports","Prism","languages","makefile","comment","pattern","lookbehind","string","greedy","builtin","symbol","inside","variable","keyword","operator","punctuation"],"mappings":"CAACA,KAAK,2BAA6BA,KAAK,4BAA8B,IAAIC,KAAK,CAAC,CAAC,KAAK,CAEhF,IACA,SAAUC,EAAQC,GAExBC,MAAMC,UAAUC,SAAW,CACzBC,QAAS,CACPC,QAAS,6CACTC,YAAY,GAEdC,OAAQ,CACNF,QAAS,iDACTG,QAAQ,GAEVC,QAAS,gCACTC,OAAQ,CACNL,QAAS,8CACTM,OAAQ,CACNC,SAAU,wCAGdA,SAAU,wDACVC,QAAS,CAAC,6HAA8H,CACtIR,QAAS,wQACTC,YAAY,IAEdQ,SAAU,uBACVC,YAAa"},"input":"(this[\"webpackJsonpcode-editor\"] = this[\"webpackJsonpcode-editor\"] || []).push([[275],{\n\n/***/ 445:\n/***/ (function(module, exports) {\n\nPrism.languages.makefile = {\n  comment: {\n    pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n    lookbehind: !0\n  },\n  string: {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: !0\n  },\n  builtin: /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n  symbol: {\n    pattern: /^(?:[^:=\\s]|[ \\t]+(?![\\s:]))+(?=\\s*:(?!=))/m,\n    inside: {\n      variable: /\\$+(?:(?!\\$)[^(){}:#=\\s]+|(?=[({]))/\n    }\n  },\n  variable: /\\$+(?:(?!\\$)[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n  keyword: [/-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/, {\n    pattern: /(\\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \\t])/,\n    lookbehind: !0\n  }],\n  operator: /(?:::|[?:+!])?=|[|@]/,\n  punctuation: /[:;(){}]/\n};\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Users/ted/Desktop/jbook/packages/local-client/node_modules/prismjs/components/prism-makefile.min.js"],"names":["Prism","languages","makefile","comment","pattern","lookbehind","string","greedy","builtin","symbol","inside","variable","keyword","operator","punctuation"],"mappings":";;;;;AAAAA,KAAK,CAACC,SAAN,CAAgBC,QAAhB,GAAyB;AAACC,SAAO,EAAC;AAACC,WAAO,EAAC,4CAAT;AAAsDC,cAAU,EAAC,CAAC;AAAlE,GAAT;AAA8EC,QAAM,EAAC;AAACF,WAAO,EAAC,gDAAT;AAA0DG,UAAM,EAAC,CAAC;AAAlE,GAArF;AAA0JC,SAAO,EAAC,+BAAlK;AAAkMC,QAAM,EAAC;AAACL,WAAO,EAAC,6CAAT;AAAuDM,UAAM,EAAC;AAACC,cAAQ,EAAC;AAAV;AAA9D,GAAzM;AAAyTA,UAAQ,EAAC,uDAAlU;AAA0XC,SAAO,EAAC,CAAC,4HAAD,EAA8H;AAACR,WAAO,EAAC,uQAAT;AAAiRC,cAAU,EAAC,CAAC;AAA7R,GAA9H,CAAlY;AAAiyBQ,UAAQ,EAAC,sBAA1yB;AAAi0BC,aAAW,EAAC;AAA70B,CAAzB,C","file":"x","sourcesContent":["Prism.languages.makefile={comment:{pattern:/(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,lookbehind:!0},string:{pattern:/([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0},builtin:/\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,symbol:{pattern:/^(?:[^:=\\s]|[ \\t]+(?![\\s:]))+(?=\\s*:(?!=))/m,inside:{variable:/\\$+(?:(?!\\$)[^(){}:#=\\s]+|(?=[({]))/}},variable:/\\$+(?:(?!\\$)[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,keyword:[/-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,{pattern:/(\\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \\t])/,lookbehind:!0}],operator:/(?:::|[?:+!])?=|[|@]/,punctuation:/[:;(){}]/};"]}}