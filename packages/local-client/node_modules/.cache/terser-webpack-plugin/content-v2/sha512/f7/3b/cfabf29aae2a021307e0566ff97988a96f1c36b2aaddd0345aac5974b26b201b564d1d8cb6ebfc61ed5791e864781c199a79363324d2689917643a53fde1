{"code":"(this[\"webpackJsonpcode-editor\"]=this[\"webpackJsonpcode-editor\"]||[]).push([[81],{251:function(e,t){!function(e){for(var t=\"\\\\(\\\\*(?:[^(*]|\\\\((?!\\\\*)|\\\\*(?!\\\\))|<self>)*\\\\*\\\\)\",i=0;i<2;i++)t=t.replace(/<self>/g,(function(){return t}));t=t.replace(/<self>/g,\"[]\"),e.languages.coq={comment:RegExp(t),string:{pattern:/\"(?:[^\"]|\"\")*\"(?!\")/,greedy:!0},attribute:[{pattern:RegExp('#\\\\[(?:[^\\\\](\"]|\"(?:[^\"]|\"\")*\"(?!\")|\\\\((?!\\\\*)|<comment>)*\\\\]'.replace(/<comment>/g,(function(){return t}))),greedy:!0,alias:\"attr-name\",inside:{comment:RegExp(t),string:{pattern:/\"(?:[^\"]|\"\")*\"(?!\")/,greedy:!0},operator:/=/,punctuation:/^#\\[|\\]$|[,()]/}},{pattern:/\\b(?:Cumulative|Global|Local|Monomorphic|NonCumulative|Polymorphic|Private|Program)\\b/,alias:\"attr-name\"}],keyword:/\\b(?:_|Abort|About|Add|Admit|Admitted|All|apply|Arguments|as|As|Assumptions|at|Axiom|Axioms|Back|BackTo|Backtrace|Bind|BinOp|BinOpSpec|BinRel|Blacklist|by|Canonical|Case|Cd|Check|Class|Classes|Close|Coercion|Coercions|cofix|CoFixpoint|CoInductive|Collection|Combined|Compute|Conjecture|Conjectures|Constant|Constants|Constraint|Constructors|Context|Corollary|Create|CstOp|Custom|Cut|Debug|Declare|Defined|Definition|Delimit|Dependencies|Dependent|Derive|Diffs|Drop|Elimination|else|end|End|Entry|Equality|Eval|Example|Existential|Existentials|Existing|exists|exists2|Export|Extern|Extraction|Fact|Fail|Field|File|Firstorder|fix|Fixpoint|Flags|Focus|for|forall|From|fun|Funclass|Function|Functional|GC|Generalizable|Goal|Grab|Grammar|Graph|Guarded|Haskell|Heap|Hide|Hint|HintDb|Hints|Hypotheses|Hypothesis|Identity|if|IF|Immediate|Implicit|Implicits|Import|in|Include|Induction|Inductive|Infix|Info|Initial|InjTyp|Inline|Inspect|Instance|Instances|Intro|Intros|Inversion|Inversion_clear|JSON|Language|Left|Lemma|let|Let|Lia|Libraries|Library|Load|LoadPath|Locate|Ltac|Ltac2|match|Match|measure|Method|Minimality|ML|Module|Modules|Morphism|move|Next|NoInline|Notation|Number|Obligation|Obligations|OCaml|Opaque|Open|Optimize|Parameter|Parameters|Parametric|Path|Paths|Prenex|Preterm|Primitive|Print|Profile|Projections|Proof|Prop|PropBinOp|Property|PropOp|Proposition|PropUOp|Pwd|Qed|Quit|Rec|Record|Recursive|Redirect|Reduction|Register|Relation|Remark|Remove|removed|Require|Reserved|Reset|Resolve|Restart|return|Rewrite|Right|Ring|Rings|Saturate|Save|Scheme|Scope|Scopes|Search|SearchHead|SearchPattern|SearchRewrite|Section|Separate|Set|Setoid|Show|Signatures|Solve|Solver|Sort|Sortclass|Sorted|Spec|SProp|Step|Strategies|Strategy|String|struct|Structure|SubClass|Subgraph|SuchThat|Tactic|Term|TestCompile|then|Theorem|Time|Timeout|To|Transparent|Type|Typeclasses|Types|Typing|Undelimit|Undo|Unfocus|Unfocused|Unfold|Universe|Universes|UnOp|UnOpSpec|Unshelve|using|Variable|Variables|Variant|Verbose|View|Visibility|wf|where|with|Zify)\\b/,number:/\\b(?:0x[a-f0-9][a-f0-9_]*(?:\\.[a-f0-9_]+)?(?:p[+-]?\\d[\\d_]*)?|\\d[\\d_]*(?:\\.[\\d_]+)?(?:e[+-]?\\d[\\d_]*)?)\\b/i,punct:{pattern:/@\\{|\\{\\||\\[=|:>/,alias:\"punctuation\"},operator:/\\/\\\\|\\\\\\/|\\.{2,3}|:{1,2}=|\\*\\*|[-=]>|<(?:->?|[+:=>]|<:)|>(?:=|->)|\\|[-|]?|[-!%&*+/<=>?@^~']/,punctuation:/\\.\\(|`\\(|@\\{|`\\{|\\{\\||\\[=|:>|[:.,;(){}\\[\\]]/}}(Prism)}}]);","name":"static/js/81.ec64b0f1.chunk.js","map":{"version":3,"sources":["static/js/81.ec64b0f1.chunk.js"],"names":["this","push","module","exports","e","t","i","replace","languages","coq","comment","RegExp","string","pattern","greedy","attribute","alias","inside","operator","punctuation","keyword","number","punct","Prism"],"mappings":"CAACA,KAAK,2BAA6BA,KAAK,4BAA8B,IAAIC,KAAK,CAAC,CAAC,IAAI,CAE/E,IACA,SAAUC,EAAQC,IAEvB,SAAUC,GACT,IAAK,IAAIC,EAAI,sDAAuDC,EAAI,EAAGA,EAAI,EAAGA,IAChFD,EAAIA,EAAEE,QAAQ,WAAW,WACvB,OAAOF,KAIXA,EAAIA,EAAEE,QAAQ,UAAW,MAAOH,EAAEI,UAAUC,IAAM,CAChDC,QAASC,OAAON,GAChBO,OAAQ,CACNC,QAAS,sBACTC,QAAQ,GAEVC,UAAW,CAAC,CACVF,QAASF,OAAO,gEAAgEJ,QAAQ,cAAc,WACpG,OAAOF,MAETS,QAAQ,EACRE,MAAO,YACPC,OAAQ,CACNP,QAASC,OAAON,GAChBO,OAAQ,CACNC,QAAS,sBACTC,QAAQ,GAEVI,SAAU,IACVC,YAAa,mBAEd,CACDN,QAAS,wFACTG,MAAO,cAETI,QAAS,0/DACTC,OAAQ,6GACRC,MAAO,CACLT,QAAS,kBACTG,MAAO,eAETE,SAAU,8FACVC,YAAa,+CAvChB,CAyCCI"},"input":"(this[\"webpackJsonpcode-editor\"] = this[\"webpackJsonpcode-editor\"] || []).push([[81],{\n\n/***/ 251:\n/***/ (function(module, exports) {\n\n!function (e) {\n  for (var t = \"\\\\(\\\\*(?:[^(*]|\\\\((?!\\\\*)|\\\\*(?!\\\\))|<self>)*\\\\*\\\\)\", i = 0; i < 2; i++) {\n    t = t.replace(/<self>/g, function () {\n      return t;\n    });\n  }\n\n  t = t.replace(/<self>/g, \"[]\"), e.languages.coq = {\n    comment: RegExp(t),\n    string: {\n      pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n      greedy: !0\n    },\n    attribute: [{\n      pattern: RegExp('#\\\\[(?:[^\\\\](\"]|\"(?:[^\"]|\"\")*\"(?!\")|\\\\((?!\\\\*)|<comment>)*\\\\]'.replace(/<comment>/g, function () {\n        return t;\n      })),\n      greedy: !0,\n      alias: \"attr-name\",\n      inside: {\n        comment: RegExp(t),\n        string: {\n          pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n          greedy: !0\n        },\n        operator: /=/,\n        punctuation: /^#\\[|\\]$|[,()]/\n      }\n    }, {\n      pattern: /\\b(?:Cumulative|Global|Local|Monomorphic|NonCumulative|Polymorphic|Private|Program)\\b/,\n      alias: \"attr-name\"\n    }],\n    keyword: /\\b(?:_|Abort|About|Add|Admit|Admitted|All|apply|Arguments|as|As|Assumptions|at|Axiom|Axioms|Back|BackTo|Backtrace|Bind|BinOp|BinOpSpec|BinRel|Blacklist|by|Canonical|Case|Cd|Check|Class|Classes|Close|Coercion|Coercions|cofix|CoFixpoint|CoInductive|Collection|Combined|Compute|Conjecture|Conjectures|Constant|Constants|Constraint|Constructors|Context|Corollary|Create|CstOp|Custom|Cut|Debug|Declare|Defined|Definition|Delimit|Dependencies|Dependent|Derive|Diffs|Drop|Elimination|else|end|End|Entry|Equality|Eval|Example|Existential|Existentials|Existing|exists|exists2|Export|Extern|Extraction|Fact|Fail|Field|File|Firstorder|fix|Fixpoint|Flags|Focus|for|forall|From|fun|Funclass|Function|Functional|GC|Generalizable|Goal|Grab|Grammar|Graph|Guarded|Haskell|Heap|Hide|Hint|HintDb|Hints|Hypotheses|Hypothesis|Identity|if|IF|Immediate|Implicit|Implicits|Import|in|Include|Induction|Inductive|Infix|Info|Initial|InjTyp|Inline|Inspect|Instance|Instances|Intro|Intros|Inversion|Inversion_clear|JSON|Language|Left|Lemma|let|Let|Lia|Libraries|Library|Load|LoadPath|Locate|Ltac|Ltac2|match|Match|measure|Method|Minimality|ML|Module|Modules|Morphism|move|Next|NoInline|Notation|Number|Obligation|Obligations|OCaml|Opaque|Open|Optimize|Parameter|Parameters|Parametric|Path|Paths|Prenex|Preterm|Primitive|Print|Profile|Projections|Proof|Prop|PropBinOp|Property|PropOp|Proposition|PropUOp|Pwd|Qed|Quit|Rec|Record|Recursive|Redirect|Reduction|Register|Relation|Remark|Remove|removed|Require|Reserved|Reset|Resolve|Restart|return|Rewrite|Right|Ring|Rings|Saturate|Save|Scheme|Scope|Scopes|Search|SearchHead|SearchPattern|SearchRewrite|Section|Separate|Set|Setoid|Show|Signatures|Solve|Solver|Sort|Sortclass|Sorted|Spec|SProp|Step|Strategies|Strategy|String|struct|Structure|SubClass|Subgraph|SuchThat|Tactic|Term|TestCompile|then|Theorem|Time|Timeout|To|Transparent|Type|Typeclasses|Types|Typing|Undelimit|Undo|Unfocus|Unfocused|Unfold|Universe|Universes|UnOp|UnOpSpec|Unshelve|using|Variable|Variables|Variant|Verbose|View|Visibility|wf|where|with|Zify)\\b/,\n    number: /\\b(?:0x[a-f0-9][a-f0-9_]*(?:\\.[a-f0-9_]+)?(?:p[+-]?\\d[\\d_]*)?|\\d[\\d_]*(?:\\.[\\d_]+)?(?:e[+-]?\\d[\\d_]*)?)\\b/i,\n    punct: {\n      pattern: /@\\{|\\{\\||\\[=|:>/,\n      alias: \"punctuation\"\n    },\n    operator: /\\/\\\\|\\\\\\/|\\.{2,3}|:{1,2}=|\\*\\*|[-=]>|<(?:->?|[+:=>]|<:)|>(?:=|->)|\\|[-|]?|[-!%&*+/<=>?@^~']/,\n    punctuation: /\\.\\(|`\\(|@\\{|`\\{|\\{\\||\\[=|:>|[:.,;(){}\\[\\]]/\n  };\n}(Prism);\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Users/ted/Desktop/jbook/packages/local-client/node_modules/prismjs/components/prism-coq.min.js"],"names":["e","t","i","replace","languages","coq","comment","RegExp","string","pattern","greedy","attribute","alias","inside","operator","punctuation","keyword","number","punct","Prism"],"mappings":";;;;;AAAA,CAAC,UAASA,CAAT,EAAW;AAAC,OAAI,IAAIC,CAAC,GAAC,qDAAN,EAA4DC,CAAC,GAAC,CAAlE,EAAoEA,CAAC,GAAC,CAAtE,EAAwEA,CAAC,EAAzE;AAA4ED,KAAC,GAACA,CAAC,CAACE,OAAF,CAAU,SAAV,EAAoB,YAAU;AAAC,aAAOF,CAAP;AAAS,KAAxC,CAAF;AAA5E;;AAAwHA,GAAC,GAACA,CAAC,CAACE,OAAF,CAAU,SAAV,EAAoB,IAApB,CAAF,EAA4BH,CAAC,CAACI,SAAF,CAAYC,GAAZ,GAAgB;AAACC,WAAO,EAACC,MAAM,CAACN,CAAD,CAAf;AAAmBO,UAAM,EAAC;AAACC,aAAO,EAAC,qBAAT;AAA+BC,YAAM,EAAC,CAAC;AAAvC,KAA1B;AAAoEC,aAAS,EAAC,CAAC;AAACF,aAAO,EAACF,MAAM,CAAC,gEAAgEJ,OAAhE,CAAwE,YAAxE,EAAqF,YAAU;AAAC,eAAOF,CAAP;AAAS,OAAzG,CAAD,CAAf;AAA4HS,YAAM,EAAC,CAAC,CAApI;AAAsIE,WAAK,EAAC,WAA5I;AAAwJC,YAAM,EAAC;AAACP,eAAO,EAACC,MAAM,CAACN,CAAD,CAAf;AAAmBO,cAAM,EAAC;AAACC,iBAAO,EAAC,qBAAT;AAA+BC,gBAAM,EAAC,CAAC;AAAvC,SAA1B;AAAoEI,gBAAQ,EAAC,GAA7E;AAAiFC,mBAAW,EAAC;AAA7F;AAA/J,KAAD,EAAgR;AAACN,aAAO,EAAC,uFAAT;AAAiGG,WAAK,EAAC;AAAvG,KAAhR,CAA9E;AAAmdI,WAAO,EAAC,y/DAA3d;AAAq9EC,UAAM,EAAC,4GAA59E;AAAykFC,SAAK,EAAC;AAACT,aAAO,EAAC,iBAAT;AAA2BG,WAAK,EAAC;AAAjC,KAA/kF;AAA+nFE,YAAQ,EAAC,6FAAxoF;AAAsuFC,eAAW,EAAC;AAAlvF,GAA5C;AAA60F,CAAj9F,CAAk9FI,KAAl9F,CAAD,C","file":"x","sourcesContent":["!function(e){for(var t=\"\\\\(\\\\*(?:[^(*]|\\\\((?!\\\\*)|\\\\*(?!\\\\))|<self>)*\\\\*\\\\)\",i=0;i<2;i++)t=t.replace(/<self>/g,function(){return t});t=t.replace(/<self>/g,\"[]\"),e.languages.coq={comment:RegExp(t),string:{pattern:/\"(?:[^\"]|\"\")*\"(?!\")/,greedy:!0},attribute:[{pattern:RegExp('#\\\\[(?:[^\\\\](\"]|\"(?:[^\"]|\"\")*\"(?!\")|\\\\((?!\\\\*)|<comment>)*\\\\]'.replace(/<comment>/g,function(){return t})),greedy:!0,alias:\"attr-name\",inside:{comment:RegExp(t),string:{pattern:/\"(?:[^\"]|\"\")*\"(?!\")/,greedy:!0},operator:/=/,punctuation:/^#\\[|\\]$|[,()]/}},{pattern:/\\b(?:Cumulative|Global|Local|Monomorphic|NonCumulative|Polymorphic|Private|Program)\\b/,alias:\"attr-name\"}],keyword:/\\b(?:_|Abort|About|Add|Admit|Admitted|All|apply|Arguments|as|As|Assumptions|at|Axiom|Axioms|Back|BackTo|Backtrace|Bind|BinOp|BinOpSpec|BinRel|Blacklist|by|Canonical|Case|Cd|Check|Class|Classes|Close|Coercion|Coercions|cofix|CoFixpoint|CoInductive|Collection|Combined|Compute|Conjecture|Conjectures|Constant|Constants|Constraint|Constructors|Context|Corollary|Create|CstOp|Custom|Cut|Debug|Declare|Defined|Definition|Delimit|Dependencies|Dependent|Derive|Diffs|Drop|Elimination|else|end|End|Entry|Equality|Eval|Example|Existential|Existentials|Existing|exists|exists2|Export|Extern|Extraction|Fact|Fail|Field|File|Firstorder|fix|Fixpoint|Flags|Focus|for|forall|From|fun|Funclass|Function|Functional|GC|Generalizable|Goal|Grab|Grammar|Graph|Guarded|Haskell|Heap|Hide|Hint|HintDb|Hints|Hypotheses|Hypothesis|Identity|if|IF|Immediate|Implicit|Implicits|Import|in|Include|Induction|Inductive|Infix|Info|Initial|InjTyp|Inline|Inspect|Instance|Instances|Intro|Intros|Inversion|Inversion_clear|JSON|Language|Left|Lemma|let|Let|Lia|Libraries|Library|Load|LoadPath|Locate|Ltac|Ltac2|match|Match|measure|Method|Minimality|ML|Module|Modules|Morphism|move|Next|NoInline|Notation|Number|Obligation|Obligations|OCaml|Opaque|Open|Optimize|Parameter|Parameters|Parametric|Path|Paths|Prenex|Preterm|Primitive|Print|Profile|Projections|Proof|Prop|PropBinOp|Property|PropOp|Proposition|PropUOp|Pwd|Qed|Quit|Rec|Record|Recursive|Redirect|Reduction|Register|Relation|Remark|Remove|removed|Require|Reserved|Reset|Resolve|Restart|return|Rewrite|Right|Ring|Rings|Saturate|Save|Scheme|Scope|Scopes|Search|SearchHead|SearchPattern|SearchRewrite|Section|Separate|Set|Setoid|Show|Signatures|Solve|Solver|Sort|Sortclass|Sorted|Spec|SProp|Step|Strategies|Strategy|String|struct|Structure|SubClass|Subgraph|SuchThat|Tactic|Term|TestCompile|then|Theorem|Time|Timeout|To|Transparent|Type|Typeclasses|Types|Typing|Undelimit|Undo|Unfocus|Unfocused|Unfold|Universe|Universes|UnOp|UnOpSpec|Unshelve|using|Variable|Variables|Variant|Verbose|View|Visibility|wf|where|with|Zify)\\b/,number:/\\b(?:0x[a-f0-9][a-f0-9_]*(?:\\.[a-f0-9_]+)?(?:p[+-]?\\d[\\d_]*)?|\\d[\\d_]*(?:\\.[\\d_]+)?(?:e[+-]?\\d[\\d_]*)?)\\b/i,punct:{pattern:/@\\{|\\{\\||\\[=|:>/,alias:\"punctuation\"},operator:/\\/\\\\|\\\\\\/|\\.{2,3}|:{1,2}=|\\*\\*|[-=]>|<(?:->?|[+:=>]|<:)|>(?:=|->)|\\|[-|]?|[-!%&*+/<=>?@^~']/,punctuation:/\\.\\(|`\\(|@\\{|`\\{|\\{\\||\\[=|:>|[:.,;(){}\\[\\]]/}}(Prism);"]}}