{"code":"(this[\"webpackJsonpcode-editor\"]=this[\"webpackJsonpcode-editor\"]||[]).push([[198],{368:function(e,i){Prism.languages.idris=Prism.languages.extend(\"haskell\",{comment:{pattern:/(?:(?:--|\\|\\|\\|).*$|\\{-[\\s\\S]*?-\\})/m},keyword:/\\b(?:Type|case|class|codata|constructor|corecord|data|do|dsl|else|export|if|implementation|implicit|import|impossible|in|infix|infixl|infixr|instance|interface|let|module|mutual|namespace|of|parameters|partial|postulate|private|proof|public|quoteGoal|record|rewrite|syntax|then|total|using|where|with)\\b/,\"import-statement\":{pattern:/(^\\s*)import\\s+(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*/m,lookbehind:!0},builtin:void 0}),Prism.languages.idr=Prism.languages.idris}}]);","name":"static/js/198.6d111154.chunk.js","map":{"version":3,"sources":["static/js/198.6d111154.chunk.js"],"names":["this","push","module","exports","Prism","languages","idris","extend","comment","pattern","keyword","lookbehind","builtin","undefined","idr"],"mappings":"CAACA,KAAK,2BAA6BA,KAAK,4BAA8B,IAAIC,KAAK,CAAC,CAAC,KAAK,CAEhF,IACA,SAAUC,EAAQC,GAExBC,MAAMC,UAAUC,MAAQF,MAAMC,UAAUE,OAAO,UAAW,CACxDC,QAAW,CACTC,QAAS,wCAEXC,QAAW,kTACX,mBAAoB,CAClBD,QAAS,oDACTE,YAAY,GAEdC,aAAWC,IAEbT,MAAMC,UAAUS,IAAMV,MAAMC,UAAUC"},"input":"(this[\"webpackJsonpcode-editor\"] = this[\"webpackJsonpcode-editor\"] || []).push([[198],{\n\n/***/ 368:\n/***/ (function(module, exports) {\n\nPrism.languages.idris = Prism.languages.extend('haskell', {\n  'comment': {\n    pattern: /(?:(?:--|\\|\\|\\|).*$|\\{-[\\s\\S]*?-\\})/m\n  },\n  'keyword': /\\b(?:Type|case|class|codata|constructor|corecord|data|do|dsl|else|export|if|implementation|implicit|import|impossible|in|infix|infixl|infixr|instance|interface|let|module|mutual|namespace|of|parameters|partial|postulate|private|proof|public|quoteGoal|record|rewrite|syntax|then|total|using|where|with)\\b/,\n  'import-statement': {\n    pattern: /(^\\s*)import\\s+(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*/m,\n    lookbehind: true\n  },\n  'builtin': undefined\n});\nPrism.languages.idr = Prism.languages.idris;\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Users/ted/Desktop/jbook/packages/local-client/node_modules/prismjs/components/prism-idris.js"],"names":["Prism","languages","idris","extend","pattern","lookbehind","undefined","idr"],"mappings":";;;;;AAAAA,KAAK,CAACC,SAAN,CAAgBC,KAAhB,GAAwBF,KAAK,CAACC,SAAN,CAAgBE,MAAhB,CAAuB,SAAvB,EAAkC;AACzD,aAAW;AACVC,WAAO,EAAE;AADC,GAD8C;AAIzD,aAAW,iTAJ8C;AAKzD,sBAAoB;AACnBA,WAAO,EAAE,mDADU;AAEnBC,cAAU,EAAE;AAFO,GALqC;AASzD,aAAWC;AAT8C,CAAlC,CAAxB;AAYAN,KAAK,CAACC,SAAN,CAAgBM,GAAhB,GAAsBP,KAAK,CAACC,SAAN,CAAgBC,KAAtC,C","file":"x","sourcesContent":["Prism.languages.idris = Prism.languages.extend('haskell', {\n\t'comment': {\n\t\tpattern: /(?:(?:--|\\|\\|\\|).*$|\\{-[\\s\\S]*?-\\})/m,\n\t},\n\t'keyword': /\\b(?:Type|case|class|codata|constructor|corecord|data|do|dsl|else|export|if|implementation|implicit|import|impossible|in|infix|infixl|infixr|instance|interface|let|module|mutual|namespace|of|parameters|partial|postulate|private|proof|public|quoteGoal|record|rewrite|syntax|then|total|using|where|with)\\b/,\n\t'import-statement': {\n\t\tpattern: /(^\\s*)import\\s+(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*/m,\n\t\tlookbehind: true\n\t},\n\t'builtin': undefined\n});\n\nPrism.languages.idr = Prism.languages.idris;\n"]}}