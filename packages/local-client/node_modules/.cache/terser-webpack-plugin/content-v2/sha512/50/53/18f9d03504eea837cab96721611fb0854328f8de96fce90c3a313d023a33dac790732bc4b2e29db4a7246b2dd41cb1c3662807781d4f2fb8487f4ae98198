{"code":"(this[\"webpackJsonpcode-editor\"]=this[\"webpackJsonpcode-editor\"]||[]).push([[443],{613:function(e,t){Prism.languages.stan={comment:/\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/|#(?!include).*/,string:{pattern:/\"[\\x20\\x21\\x23-\\x5B\\x5D-\\x7E]*\"/,greedy:!0},directive:{pattern:/^([ \\t]*)#include\\b.*/m,lookbehind:!0,alias:\"property\"},\"function-arg\":{pattern:/(\\b(?:algebra_solver|integrate_1d|integrate_ode|integrate_ode_bdf|integrate_ode_rk45|map_rect)\\s*\\(\\s*)[a-zA-Z]\\w*/,lookbehind:!0,alias:\"function\"},constraint:{pattern:/(\\b(?:int|matrix|real|row_vector|vector)\\s*)<[^<>]*>/,lookbehind:!0,inside:{expression:{pattern:/(=\\s*)\\S(?:\\S|\\s+(?!\\s))*?(?=\\s*(?:>$|,\\s*\\w+\\s*=))/,lookbehind:!0,inside:null},property:/\\b[a-z]\\w*(?=\\s*=)/i,operator:/=/,punctuation:/^<|>$|,/}},keyword:[/\\b(?:break|cholesky_factor_corr|cholesky_factor_cov|continue|corr_matrix|cov_matrix|data|else|for|functions|generated|if|in|increment_log_prob|int|matrix|model|ordered|parameters|positive_ordered|print|quantities|real|reject|return|row_vector|simplex|target|transformed|unit_vector|vector|void|while)\\b/,/\\b(?:algebra_solver|integrate_1d|integrate_ode|integrate_ode_bdf|integrate_ode_rk45|map_rect)\\b/],function:/\\b[a-z]\\w*(?=\\s*\\()/i,number:/(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?\\b/i,boolean:/\\b(?:false|true)\\b/,operator:/<-|\\.[*/]=?|\\|\\|?|&&|[!=<>+\\-*/]=?|['^%~?:]/,punctuation:/[()\\[\\]{},;]/},Prism.languages.stan.constraint.inside.expression.inside=Prism.languages.stan}}]);","name":"static/js/443.e2d882a6.chunk.js","map":{"version":3,"sources":["static/js/443.e2d882a6.chunk.js"],"names":["this","push","module","exports","Prism","languages","stan","comment","string","pattern","greedy","directive","lookbehind","alias","constraint","inside","expression","property","operator","punctuation","keyword","function","number","boolean"],"mappings":"CAACA,KAAK,2BAA6BA,KAAK,4BAA8B,IAAIC,KAAK,CAAC,CAAC,KAAK,CAEhF,IACA,SAAUC,EAAQC,GAExBC,MAAMC,UAAUC,KAAO,CACrBC,QAAS,yCACTC,OAAQ,CACNC,QAAS,kCACTC,QAAQ,GAEVC,UAAW,CACTF,QAAS,yBACTG,YAAY,EACZC,MAAO,YAET,eAAgB,CACdJ,QAAS,qHACTG,YAAY,EACZC,MAAO,YAETC,WAAY,CACVL,QAAS,uDACTG,YAAY,EACZG,OAAQ,CACNC,WAAY,CACVP,QAAS,sDACTG,YAAY,EACZG,OAAQ,MAEVE,SAAU,sBACVC,SAAU,IACVC,YAAa,YAGjBC,QAAS,CAAC,iTAAkT,mGAC5TC,SAAU,uBACVC,OAAQ,+CACRC,QAAS,qBACTL,SAAU,8CACVC,YAAa,gBACZf,MAAMC,UAAUC,KAAKQ,WAAWC,OAAOC,WAAWD,OAASX,MAAMC,UAAUC"},"input":"(this[\"webpackJsonpcode-editor\"] = this[\"webpackJsonpcode-editor\"] || []).push([[443],{\n\n/***/ 613:\n/***/ (function(module, exports) {\n\nPrism.languages.stan = {\n  comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/|#(?!include).*/,\n  string: {\n    pattern: /\"[\\x20\\x21\\x23-\\x5B\\x5D-\\x7E]*\"/,\n    greedy: !0\n  },\n  directive: {\n    pattern: /^([ \\t]*)#include\\b.*/m,\n    lookbehind: !0,\n    alias: \"property\"\n  },\n  \"function-arg\": {\n    pattern: /(\\b(?:algebra_solver|integrate_1d|integrate_ode|integrate_ode_bdf|integrate_ode_rk45|map_rect)\\s*\\(\\s*)[a-zA-Z]\\w*/,\n    lookbehind: !0,\n    alias: \"function\"\n  },\n  constraint: {\n    pattern: /(\\b(?:int|matrix|real|row_vector|vector)\\s*)<[^<>]*>/,\n    lookbehind: !0,\n    inside: {\n      expression: {\n        pattern: /(=\\s*)\\S(?:\\S|\\s+(?!\\s))*?(?=\\s*(?:>$|,\\s*\\w+\\s*=))/,\n        lookbehind: !0,\n        inside: null\n      },\n      property: /\\b[a-z]\\w*(?=\\s*=)/i,\n      operator: /=/,\n      punctuation: /^<|>$|,/\n    }\n  },\n  keyword: [/\\b(?:break|cholesky_factor_corr|cholesky_factor_cov|continue|corr_matrix|cov_matrix|data|else|for|functions|generated|if|in|increment_log_prob|int|matrix|model|ordered|parameters|positive_ordered|print|quantities|real|reject|return|row_vector|simplex|target|transformed|unit_vector|vector|void|while)\\b/, /\\b(?:algebra_solver|integrate_1d|integrate_ode|integrate_ode_bdf|integrate_ode_rk45|map_rect)\\b/],\n  function: /\\b[a-z]\\w*(?=\\s*\\()/i,\n  number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?\\b/i,\n  boolean: /\\b(?:false|true)\\b/,\n  operator: /<-|\\.[*/]=?|\\|\\|?|&&|[!=<>+\\-*/]=?|['^%~?:]/,\n  punctuation: /[()\\[\\]{},;]/\n}, Prism.languages.stan.constraint.inside.expression.inside = Prism.languages.stan;\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Users/ted/Desktop/jbook/packages/local-client/node_modules/prismjs/components/prism-stan.min.js"],"names":["Prism","languages","stan","comment","string","pattern","greedy","directive","lookbehind","alias","constraint","inside","expression","property","operator","punctuation","keyword","function","number","boolean"],"mappings":";;;;;AAAAA,KAAK,CAACC,SAAN,CAAgBC,IAAhB,GAAqB;AAACC,SAAO,EAAC,wCAAT;AAAkDC,QAAM,EAAC;AAACC,WAAO,EAAC,iCAAT;AAA2CC,UAAM,EAAC,CAAC;AAAnD,GAAzD;AAA+GC,WAAS,EAAC;AAACF,WAAO,EAAC,wBAAT;AAAkCG,cAAU,EAAC,CAAC,CAA9C;AAAgDC,SAAK,EAAC;AAAtD,GAAzH;AAA2L,kBAAe;AAACJ,WAAO,EAAC,oHAAT;AAA8HG,cAAU,EAAC,CAAC,CAA1I;AAA4IC,SAAK,EAAC;AAAlJ,GAA1M;AAAwWC,YAAU,EAAC;AAACL,WAAO,EAAC,sDAAT;AAAgEG,cAAU,EAAC,CAAC,CAA5E;AAA8EG,UAAM,EAAC;AAACC,gBAAU,EAAC;AAACP,eAAO,EAAC,qDAAT;AAA+DG,kBAAU,EAAC,CAAC,CAA3E;AAA6EG,cAAM,EAAC;AAApF,OAAZ;AAAsGE,cAAQ,EAAC,qBAA/G;AAAqIC,cAAQ,EAAC,GAA9I;AAAkJC,iBAAW,EAAC;AAA9J;AAArF,GAAnX;AAAknBC,SAAO,EAAC,CAAC,gTAAD,EAAkT,iGAAlT,CAA1nB;AAA+gCC,UAAQ,EAAC,sBAAxhC;AAA+iCC,QAAM,EAAC,8CAAtjC;AAAqmCC,SAAO,EAAC,oBAA7mC;AAAkoCL,UAAQ,EAAC,6CAA3oC;AAAyrCC,aAAW,EAAC;AAArsC,CAArB,EAA0uCf,KAAK,CAACC,SAAN,CAAgBC,IAAhB,CAAqBQ,UAArB,CAAgCC,MAAhC,CAAuCC,UAAvC,CAAkDD,MAAlD,GAAyDX,KAAK,CAACC,SAAN,CAAgBC,IAAnzC,C","file":"x","sourcesContent":["Prism.languages.stan={comment:/\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/|#(?!include).*/,string:{pattern:/\"[\\x20\\x21\\x23-\\x5B\\x5D-\\x7E]*\"/,greedy:!0},directive:{pattern:/^([ \\t]*)#include\\b.*/m,lookbehind:!0,alias:\"property\"},\"function-arg\":{pattern:/(\\b(?:algebra_solver|integrate_1d|integrate_ode|integrate_ode_bdf|integrate_ode_rk45|map_rect)\\s*\\(\\s*)[a-zA-Z]\\w*/,lookbehind:!0,alias:\"function\"},constraint:{pattern:/(\\b(?:int|matrix|real|row_vector|vector)\\s*)<[^<>]*>/,lookbehind:!0,inside:{expression:{pattern:/(=\\s*)\\S(?:\\S|\\s+(?!\\s))*?(?=\\s*(?:>$|,\\s*\\w+\\s*=))/,lookbehind:!0,inside:null},property:/\\b[a-z]\\w*(?=\\s*=)/i,operator:/=/,punctuation:/^<|>$|,/}},keyword:[/\\b(?:break|cholesky_factor_corr|cholesky_factor_cov|continue|corr_matrix|cov_matrix|data|else|for|functions|generated|if|in|increment_log_prob|int|matrix|model|ordered|parameters|positive_ordered|print|quantities|real|reject|return|row_vector|simplex|target|transformed|unit_vector|vector|void|while)\\b/,/\\b(?:algebra_solver|integrate_1d|integrate_ode|integrate_ode_bdf|integrate_ode_rk45|map_rect)\\b/],function:/\\b[a-z]\\w*(?=\\s*\\()/i,number:/(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?\\b/i,boolean:/\\b(?:false|true)\\b/,operator:/<-|\\.[*/]=?|\\|\\|?|&&|[!=<>+\\-*/]=?|['^%~?:]/,punctuation:/[()\\[\\]{},;]/},Prism.languages.stan.constraint.inside.expression.inside=Prism.languages.stan;"]}}