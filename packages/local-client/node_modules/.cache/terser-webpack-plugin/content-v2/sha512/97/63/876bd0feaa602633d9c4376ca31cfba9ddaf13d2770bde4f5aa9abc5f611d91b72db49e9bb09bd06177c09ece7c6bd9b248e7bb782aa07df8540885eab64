{"code":"(this[\"webpackJsonpcode-editor\"]=this[\"webpackJsonpcode-editor\"]||[]).push([[199],{369:function(e,i){Prism.languages.idris=Prism.languages.extend(\"haskell\",{comment:{pattern:/(?:(?:--|\\|\\|\\|).*$|\\{-[\\s\\S]*?-\\})/m},keyword:/\\b(?:Type|case|class|codata|constructor|corecord|data|do|dsl|else|export|if|implementation|implicit|import|impossible|in|infix|infixl|infixr|instance|interface|let|module|mutual|namespace|of|parameters|partial|postulate|private|proof|public|quoteGoal|record|rewrite|syntax|then|total|using|where|with)\\b/,\"import-statement\":{pattern:/(^\\s*)import\\s+(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*/m,lookbehind:!0},builtin:void 0}),Prism.languages.idr=Prism.languages.idris}}]);","name":"static/js/199.8baf86f3.chunk.js","map":{"version":3,"sources":["static/js/199.8baf86f3.chunk.js"],"names":["this","push","module","exports","Prism","languages","idris","extend","comment","pattern","keyword","lookbehind","builtin","idr"],"mappings":"CAACA,KAAK,2BAA6BA,KAAK,4BAA8B,IAAIC,KAAK,CAAC,CAAC,KAAK,CAEhF,IACA,SAAUC,EAAQC,GAExBC,MAAMC,UAAUC,MAAQF,MAAMC,UAAUE,OAAO,UAAW,CACxDC,QAAS,CACPC,QAAS,wCAEXC,QAAS,kTACT,mBAAoB,CAClBD,QAAS,oDACTE,YAAY,GAEdC,aAAS,IACPR,MAAMC,UAAUQ,IAAMT,MAAMC,UAAUC"},"input":"(this[\"webpackJsonpcode-editor\"] = this[\"webpackJsonpcode-editor\"] || []).push([[199],{\n\n/***/ 369:\n/***/ (function(module, exports) {\n\nPrism.languages.idris = Prism.languages.extend(\"haskell\", {\n  comment: {\n    pattern: /(?:(?:--|\\|\\|\\|).*$|\\{-[\\s\\S]*?-\\})/m\n  },\n  keyword: /\\b(?:Type|case|class|codata|constructor|corecord|data|do|dsl|else|export|if|implementation|implicit|import|impossible|in|infix|infixl|infixr|instance|interface|let|module|mutual|namespace|of|parameters|partial|postulate|private|proof|public|quoteGoal|record|rewrite|syntax|then|total|using|where|with)\\b/,\n  \"import-statement\": {\n    pattern: /(^\\s*)import\\s+(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*/m,\n    lookbehind: !0\n  },\n  builtin: void 0\n}), Prism.languages.idr = Prism.languages.idris;\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Users/ted/Desktop/jbook/packages/local-client/node_modules/prismjs/components/prism-idris.min.js"],"names":["Prism","languages","idris","extend","comment","pattern","keyword","lookbehind","builtin","idr"],"mappings":";;;;;AAAAA,KAAK,CAACC,SAAN,CAAgBC,KAAhB,GAAsBF,KAAK,CAACC,SAAN,CAAgBE,MAAhB,CAAuB,SAAvB,EAAiC;AAACC,SAAO,EAAC;AAACC,WAAO,EAAC;AAAT,GAAT;AAA0DC,SAAO,EAAC,iTAAlE;AAAoX,sBAAmB;AAACD,WAAO,EAAC,mDAAT;AAA6DE,cAAU,EAAC,CAAC;AAAzE,GAAvY;AAAmdC,SAAO,EAAC,KAAK;AAAhe,CAAjC,CAAtB,EAA2hBR,KAAK,CAACC,SAAN,CAAgBQ,GAAhB,GAAoBT,KAAK,CAACC,SAAN,CAAgBC,KAA/jB,C","file":"x","sourcesContent":["Prism.languages.idris=Prism.languages.extend(\"haskell\",{comment:{pattern:/(?:(?:--|\\|\\|\\|).*$|\\{-[\\s\\S]*?-\\})/m},keyword:/\\b(?:Type|case|class|codata|constructor|corecord|data|do|dsl|else|export|if|implementation|implicit|import|impossible|in|infix|infixl|infixr|instance|interface|let|module|mutual|namespace|of|parameters|partial|postulate|private|proof|public|quoteGoal|record|rewrite|syntax|then|total|using|where|with)\\b/,\"import-statement\":{pattern:/(^\\s*)import\\s+(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*/m,lookbehind:!0},builtin:void 0}),Prism.languages.idr=Prism.languages.idris;"]}}