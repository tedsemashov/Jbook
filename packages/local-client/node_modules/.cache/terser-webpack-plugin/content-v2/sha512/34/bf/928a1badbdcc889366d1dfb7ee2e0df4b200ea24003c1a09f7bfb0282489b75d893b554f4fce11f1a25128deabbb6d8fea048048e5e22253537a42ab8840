{"code":"(this[\"webpackJsonpcode-editor\"]=this[\"webpackJsonpcode-editor\"]||[]).push([[206],{376:function(t,n){Prism.languages.ini={comment:{pattern:/(^[ \\f\\t\\v]*)[#;][^\\n\\r]*/m,lookbehind:!0},header:{pattern:/(^[ \\f\\t\\v]*)\\[[^\\n\\r\\]]*\\]?/m,lookbehind:!0,inside:{\"section-name\":{pattern:/(^\\[[ \\f\\t\\v]*)[^ \\f\\t\\v\\]]+(?:[ \\f\\t\\v]+[^ \\f\\t\\v\\]]+)*/,lookbehind:!0,alias:\"selector\"},punctuation:/\\[|\\]/}},key:{pattern:/(^[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v=]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v=]+)*(?=[ \\f\\t\\v]*=)/m,lookbehind:!0,alias:\"attr-name\"},value:{pattern:/(=[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v]+)*/,lookbehind:!0,alias:\"attr-value\",inside:{\"inner-value\":{pattern:/^(\"|').+(?=\\1$)/,lookbehind:!0}}},punctuation:/=/}}}]);","name":"static/js/206.ba957766.chunk.js","map":{"version":3,"sources":["static/js/206.ba957766.chunk.js"],"names":["this","push","module","exports","Prism","languages","ini","comment","pattern","lookbehind","header","inside","alias","punctuation","key","value"],"mappings":"CAACA,KAAK,2BAA6BA,KAAK,4BAA8B,IAAIC,KAAK,CAAC,CAAC,KAAK,CAEhF,IACA,SAAUC,EAAQC,GAExBC,MAAMC,UAAUC,IAAM,CAMpBC,QAAW,CACTC,QAAS,6BACTC,YAAY,GAEdC,OAAU,CACRF,QAAS,gCACTC,YAAY,EACZE,OAAQ,CACN,eAAgB,CACdH,QAAS,2DACTC,YAAY,EACZG,MAAO,YAETC,YAAe,UAGnBC,IAAO,CACLN,QAAS,+EACTC,YAAY,EACZG,MAAO,aAETG,MAAS,CACPP,QAAS,6DACTC,YAAY,EACZG,MAAO,aACPD,OAAQ,CACN,cAAe,CACbH,QAAS,kBACTC,YAAY,KAIlBI,YAAe"},"input":"(this[\"webpackJsonpcode-editor\"] = this[\"webpackJsonpcode-editor\"] || []).push([[206],{\n\n/***/ 376:\n/***/ (function(module, exports) {\n\nPrism.languages.ini = {\n  /**\n   * The component mimics the behavior of the Win32 API parser.\n   *\n   * @see {@link https://github.com/PrismJS/prism/issues/2775#issuecomment-787477723}\n   */\n  'comment': {\n    pattern: /(^[ \\f\\t\\v]*)[#;][^\\n\\r]*/m,\n    lookbehind: true\n  },\n  'header': {\n    pattern: /(^[ \\f\\t\\v]*)\\[[^\\n\\r\\]]*\\]?/m,\n    lookbehind: true,\n    inside: {\n      'section-name': {\n        pattern: /(^\\[[ \\f\\t\\v]*)[^ \\f\\t\\v\\]]+(?:[ \\f\\t\\v]+[^ \\f\\t\\v\\]]+)*/,\n        lookbehind: true,\n        alias: 'selector'\n      },\n      'punctuation': /\\[|\\]/\n    }\n  },\n  'key': {\n    pattern: /(^[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v=]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v=]+)*(?=[ \\f\\t\\v]*=)/m,\n    lookbehind: true,\n    alias: 'attr-name'\n  },\n  'value': {\n    pattern: /(=[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v]+)*/,\n    lookbehind: true,\n    alias: 'attr-value',\n    inside: {\n      'inner-value': {\n        pattern: /^(\"|').+(?=\\1$)/,\n        lookbehind: true\n      }\n    }\n  },\n  'punctuation': /=/\n};\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Users/ted/Desktop/jbook/packages/local-client/node_modules/prismjs/components/prism-ini.js"],"names":["Prism","languages","ini","pattern","lookbehind","inside","alias"],"mappings":";;;;;AAAAA,KAAK,CAACC,SAAN,CAAgBC,GAAhB,GAAsB;AAErB;AACD;AACA;AACA;AACA;AAEC,aAAW;AACVC,WAAO,EAAE,4BADC;AAEVC,cAAU,EAAE;AAFF,GARU;AAYrB,YAAU;AACTD,WAAO,EAAE,+BADA;AAETC,cAAU,EAAE,IAFH;AAGTC,UAAM,EAAE;AACP,sBAAgB;AACfF,eAAO,EAAE,0DADM;AAEfC,kBAAU,EAAE,IAFG;AAGfE,aAAK,EAAE;AAHQ,OADT;AAMP,qBAAe;AANR;AAHC,GAZW;AAwBrB,SAAO;AACNH,WAAO,EAAE,8EADH;AAENC,cAAU,EAAE,IAFN;AAGNE,SAAK,EAAE;AAHD,GAxBc;AA6BrB,WAAS;AACRH,WAAO,EAAE,4DADD;AAERC,cAAU,EAAE,IAFJ;AAGRE,SAAK,EAAE,YAHC;AAIRD,UAAM,EAAE;AACP,qBAAe;AACdF,eAAO,EAAE,iBADK;AAEdC,kBAAU,EAAE;AAFE;AADR;AAJA,GA7BY;AAwCrB,iBAAe;AAxCM,CAAtB,C","file":"x","sourcesContent":["Prism.languages.ini = {\n\n\t/**\n\t * The component mimics the behavior of the Win32 API parser.\n\t *\n\t * @see {@link https://github.com/PrismJS/prism/issues/2775#issuecomment-787477723}\n\t */\n\n\t'comment': {\n\t\tpattern: /(^[ \\f\\t\\v]*)[#;][^\\n\\r]*/m,\n\t\tlookbehind: true\n\t},\n\t'header': {\n\t\tpattern: /(^[ \\f\\t\\v]*)\\[[^\\n\\r\\]]*\\]?/m,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'section-name': {\n\t\t\t\tpattern: /(^\\[[ \\f\\t\\v]*)[^ \\f\\t\\v\\]]+(?:[ \\f\\t\\v]+[^ \\f\\t\\v\\]]+)*/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'selector'\n\t\t\t},\n\t\t\t'punctuation': /\\[|\\]/\n\t\t}\n\t},\n\t'key': {\n\t\tpattern: /(^[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v=]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v=]+)*(?=[ \\f\\t\\v]*=)/m,\n\t\tlookbehind: true,\n\t\talias: 'attr-name'\n\t},\n\t'value': {\n\t\tpattern: /(=[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v]+)*/,\n\t\tlookbehind: true,\n\t\talias: 'attr-value',\n\t\tinside: {\n\t\t\t'inner-value': {\n\t\t\t\tpattern: /^(\"|').+(?=\\1$)/,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t}\n\t},\n\t'punctuation': /=/\n};\n"]}}