{"code":"(this[\"webpackJsonpcode-editor\"]=this[\"webpackJsonpcode-editor\"]||[]).push([[100],{270:function(e,t){Prism.languages.d=Prism.languages.extend(\"clike\",{comment:[{pattern:/^\\s*#!.+/,greedy:!0},{pattern:RegExp(/(^|[^\\\\])/.source+\"(?:\"+[/\\/\\+(?:\\/\\+(?:[^+]|\\+(?!\\/))*\\+\\/|(?!\\/\\+)[\\s\\S])*?\\+\\//.source,/\\/\\/.*/.source,/\\/\\*[\\s\\S]*?\\*\\//.source].join(\"|\")+\")\"),lookbehind:!0,greedy:!0}],string:[{pattern:RegExp([/\\b[rx]\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"[cwd]?/.source,/\\bq\"(?:\\[[\\s\\S]*?\\]|\\([\\s\\S]*?\\)|<[\\s\\S]*?>|\\{[\\s\\S]*?\\})\"/.source,/\\bq\"((?!\\d)\\w+)$[\\s\\S]*?^\\1\"/.source,/\\bq\"(.)[\\s\\S]*?\\2\"/.source,/'(?:\\\\(?:\\W|\\w+)|[^\\\\])'/.source,/([\"`])(?:\\\\[\\s\\S]|(?!\\3)[^\\\\])*\\3[cwd]?/.source].join(\"|\"),\"m\"),greedy:!0},{pattern:/\\bq\\{(?:\\{[^{}]*\\}|[^{}])*\\}/,greedy:!0,alias:\"token-string\"}],keyword:/\\$|\\b(?:abstract|alias|align|asm|assert|auto|body|bool|break|byte|case|cast|catch|cdouble|cent|cfloat|char|class|const|continue|creal|dchar|debug|default|delegate|delete|deprecated|do|double|else|enum|export|extern|false|final|finally|float|for|foreach|foreach_reverse|function|goto|idouble|if|ifloat|immutable|import|inout|int|interface|invariant|ireal|lazy|long|macro|mixin|module|new|nothrow|null|out|override|package|pragma|private|protected|public|pure|real|ref|return|scope|shared|short|static|struct|super|switch|synchronized|template|this|throw|true|try|typedef|typeid|typeof|ubyte|ucent|uint|ulong|union|unittest|ushort|version|void|volatile|wchar|while|with|__(?:(?:FILE|MODULE|LINE|FUNCTION|PRETTY_FUNCTION|DATE|EOF|TIME|TIMESTAMP|VENDOR|VERSION)__|gshared|traits|vector|parameters)|string|wstring|dstring|size_t|ptrdiff_t)\\b/,number:[/\\b0x\\.?[a-f\\d_]+(?:(?!\\.\\.)\\.[a-f\\d_]*)?(?:p[+-]?[a-f\\d_]+)?[ulfi]{0,4}/i,{pattern:/((?:\\.\\.)?)(?:\\b0b\\.?|\\b|\\.)\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?[ulfi]{0,4}/i,lookbehind:!0}],operator:/\\|[|=]?|&[&=]?|\\+[+=]?|-[-=]?|\\.?\\.\\.|=[>=]?|!(?:i[ns]\\b|<>?=?|>=?|=)?|\\bi[ns]\\b|(?:<[<>]?|>>?>?|\\^\\^|[*\\/%^~])=?/}),Prism.languages.insertBefore(\"d\",\"keyword\",{property:/\\B@\\w*/}),Prism.languages.insertBefore(\"d\",\"function\",{register:{pattern:/\\b(?:[ABCD][LHX]|E[ABCD]X|E?(?:BP|SP|DI|SI)|[ECSDGF]S|CR[0234]|DR[012367]|TR[3-7]|X?MM[0-7]|R[ABCD]X|[BS]PL|R[BS]P|[DS]IL|R[DS]I|R(?:[89]|1[0-5])[BWD]?|XMM(?:[89]|1[0-5])|YMM(?:1[0-5]|\\d))\\b|\\bST(?:\\([0-7]\\)|\\b)/,alias:\"variable\"}})}}]);","name":"static/js/100.dfac10fb.chunk.js","map":{"version":3,"sources":["static/js/100.dfac10fb.chunk.js"],"names":["this","push","module","exports","Prism","languages","d","extend","comment","pattern","greedy","RegExp","source","join","lookbehind","string","alias","keyword","number","operator","insertBefore","property","register"],"mappings":"CAACA,KAAK,2BAA6BA,KAAK,4BAA8B,IAAIC,KAAK,CAAC,CAAC,KAAK,CAEhF,IACA,SAAUC,EAAQC,GAExBC,MAAMC,UAAUC,EAAIF,MAAMC,UAAUE,OAAO,QAAS,CAClDC,QAAW,CAAC,CAEVC,QAAS,WACTC,QAAQ,GACP,CACDD,QAASE,OAAO,YAAYC,OAAS,MAAQ,CAE7C,0DAA0DA,OAC1D,SAASA,OACT,mBAAmBA,QAAQC,KAAK,KAAO,KACvCC,YAAY,EACZJ,QAAQ,IAEVK,OAAU,CAAC,CACTN,QAASE,OAAO,CAChB,qCAAqCC,OACrC,6DAA6DA,OAG7D,+BAA+BA,OAE/B,qBAAqBA,OAErB,2BAA2BA,OAC3B,0CAA0CA,QAAQC,KAAK,KAAM,KAC7DH,QAAQ,GACP,CACDD,QAAS,+BACTC,QAAQ,EACRM,MAAO,iBAGTC,QAAW,u0BACXC,OAAU,CAEV,2EAA4E,CAC1ET,QAAS,2FACTK,YAAY,IAEdK,SAAY,sHAEdf,MAAMC,UAAUe,aAAa,IAAK,UAAW,CAC3CC,SAAY,WAEdjB,MAAMC,UAAUe,aAAa,IAAK,WAAY,CAC5CE,SAAY,CAEVb,QAAS,sNACTO,MAAO"},"input":"(this[\"webpackJsonpcode-editor\"] = this[\"webpackJsonpcode-editor\"] || []).push([[100],{\n\n/***/ 270:\n/***/ (function(module, exports) {\n\nPrism.languages.d = Prism.languages.extend('clike', {\n  'comment': [{\n    // Shebang\n    pattern: /^\\s*#!.+/,\n    greedy: true\n  }, {\n    pattern: RegExp(/(^|[^\\\\])/.source + '(?:' + [// /+ comment +/\n    // Allow one level of nesting\n    /\\/\\+(?:\\/\\+(?:[^+]|\\+(?!\\/))*\\+\\/|(?!\\/\\+)[\\s\\S])*?\\+\\//.source, // // comment\n    /\\/\\/.*/.source, // /* comment */\n    /\\/\\*[\\s\\S]*?\\*\\//.source].join('|') + ')'),\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': [{\n    pattern: RegExp([// r\"\", x\"\"\n    /\\b[rx]\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"[cwd]?/.source, // q\"[]\", q\"()\", q\"<>\", q\"{}\"\n    /\\bq\"(?:\\[[\\s\\S]*?\\]|\\([\\s\\S]*?\\)|<[\\s\\S]*?>|\\{[\\s\\S]*?\\})\"/.source, // q\"IDENT\n    // ...\n    // IDENT\"\n    /\\bq\"((?!\\d)\\w+)$[\\s\\S]*?^\\1\"/.source, // q\"//\", q\"||\", etc.\n    // eslint-disable-next-line regexp/strict\n    /\\bq\"(.)[\\s\\S]*?\\2\"/.source, // Characters\n    // 'a', '\\\\', '\\n', '\\xFF', '\\377', '\\uFFFF', '\\U0010FFFF', '\\quot'\n    /'(?:\\\\(?:\\W|\\w+)|[^\\\\])'/.source, // eslint-disable-next-line regexp/strict\n    /([\"`])(?:\\\\[\\s\\S]|(?!\\3)[^\\\\])*\\3[cwd]?/.source].join('|'), 'm'),\n    greedy: true\n  }, {\n    pattern: /\\bq\\{(?:\\{[^{}]*\\}|[^{}])*\\}/,\n    greedy: true,\n    alias: 'token-string'\n  }],\n  // In order: $, keywords and special tokens, globally defined symbols\n  'keyword': /\\$|\\b(?:abstract|alias|align|asm|assert|auto|body|bool|break|byte|case|cast|catch|cdouble|cent|cfloat|char|class|const|continue|creal|dchar|debug|default|delegate|delete|deprecated|do|double|else|enum|export|extern|false|final|finally|float|for|foreach|foreach_reverse|function|goto|idouble|if|ifloat|immutable|import|inout|int|interface|invariant|ireal|lazy|long|macro|mixin|module|new|nothrow|null|out|override|package|pragma|private|protected|public|pure|real|ref|return|scope|shared|short|static|struct|super|switch|synchronized|template|this|throw|true|try|typedef|typeid|typeof|ubyte|ucent|uint|ulong|union|unittest|ushort|version|void|volatile|wchar|while|with|__(?:(?:FILE|MODULE|LINE|FUNCTION|PRETTY_FUNCTION|DATE|EOF|TIME|TIMESTAMP|VENDOR|VERSION)__|gshared|traits|vector|parameters)|string|wstring|dstring|size_t|ptrdiff_t)\\b/,\n  'number': [// The lookbehind and the negative look-ahead try to prevent bad highlighting of the .. operator\n  // Hexadecimal numbers must be handled separately to avoid problems with exponent \"e\"\n  /\\b0x\\.?[a-f\\d_]+(?:(?!\\.\\.)\\.[a-f\\d_]*)?(?:p[+-]?[a-f\\d_]+)?[ulfi]{0,4}/i, {\n    pattern: /((?:\\.\\.)?)(?:\\b0b\\.?|\\b|\\.)\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?[ulfi]{0,4}/i,\n    lookbehind: true\n  }],\n  'operator': /\\|[|=]?|&[&=]?|\\+[+=]?|-[-=]?|\\.?\\.\\.|=[>=]?|!(?:i[ns]\\b|<>?=?|>=?|=)?|\\bi[ns]\\b|(?:<[<>]?|>>?>?|\\^\\^|[*\\/%^~])=?/\n});\nPrism.languages.insertBefore('d', 'keyword', {\n  'property': /\\B@\\w*/\n});\nPrism.languages.insertBefore('d', 'function', {\n  'register': {\n    // Iasm registers\n    pattern: /\\b(?:[ABCD][LHX]|E[ABCD]X|E?(?:BP|SP|DI|SI)|[ECSDGF]S|CR[0234]|DR[012367]|TR[3-7]|X?MM[0-7]|R[ABCD]X|[BS]PL|R[BS]P|[DS]IL|R[DS]I|R(?:[89]|1[0-5])[BWD]?|XMM(?:[89]|1[0-5])|YMM(?:1[0-5]|\\d))\\b|\\bST(?:\\([0-7]\\)|\\b)/,\n    alias: 'variable'\n  }\n});\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Users/ted/Desktop/jbook/packages/local-client/node_modules/prismjs/components/prism-d.js"],"names":["Prism","languages","d","extend","pattern","greedy","RegExp","source","join","lookbehind","alias","insertBefore"],"mappings":";;;;;AAAAA,KAAK,CAACC,SAAN,CAAgBC,CAAhB,GAAoBF,KAAK,CAACC,SAAN,CAAgBE,MAAhB,CAAuB,OAAvB,EAAgC;AACnD,aAAW,CACV;AACC;AACAC,WAAO,EAAE,UAFV;AAGCC,UAAM,EAAE;AAHT,GADU,EAMV;AACCD,WAAO,EAAEE,MAAM,CAAC,YAAYC,MAAZ,GAAqB,KAArB,GAA6B,CAC5C;AACA;AACA,8DAA0DA,MAHd,EAI5C;AACA,aAASA,MALmC,EAM5C;AACA,uBAAmBA,MAPyB,EAQ3CC,IAR2C,CAQtC,GARsC,CAA7B,GAQF,GARC,CADhB;AAUCC,cAAU,EAAE,IAVb;AAWCJ,UAAM,EAAE;AAXT,GANU,CADwC;AAqBnD,YAAU,CACT;AACCD,WAAO,EAAEE,MAAM,CAAC,CACf;AACA,yCAAqCC,MAFtB,EAIf;AACA,iEAA6DA,MAL9C,EAOf;AACA;AACA;AACA,mCAA+BA,MAVhB,EAYf;AACA;AACA,yBAAqBA,MAdN,EAgBf;AACA;AACA,+BAA2BA,MAlBZ,EAoBf;AACA,8CAA0CA,MArB3B,EAsBdC,IAtBc,CAsBT,GAtBS,CAAD,EAsBF,GAtBE,CADhB;AAwBCH,UAAM,EAAE;AAxBT,GADS,EA2BT;AACCD,WAAO,EAAE,8BADV;AAECC,UAAM,EAAE,IAFT;AAGCK,SAAK,EAAE;AAHR,GA3BS,CArByC;AAuDnD;AACA,aAAW,s0BAxDwC;AA0DnD,YAAU,CACT;AACA;AACA,4EAHS,EAIT;AACCN,WAAO,EAAE,0FADV;AAECK,cAAU,EAAE;AAFb,GAJS,CA1DyC;AAoEnD,cAAY;AApEuC,CAAhC,CAApB;AAuEAT,KAAK,CAACC,SAAN,CAAgBU,YAAhB,CAA6B,GAA7B,EAAkC,SAAlC,EAA6C;AAC5C,cAAY;AADgC,CAA7C;AAIAX,KAAK,CAACC,SAAN,CAAgBU,YAAhB,CAA6B,GAA7B,EAAkC,UAAlC,EAA8C;AAC7C,cAAY;AACX;AACAP,WAAO,EAAE,qNAFE;AAGXM,SAAK,EAAE;AAHI;AADiC,CAA9C,E","file":"x","sourcesContent":["Prism.languages.d = Prism.languages.extend('clike', {\n\t'comment': [\n\t\t{\n\t\t\t// Shebang\n\t\t\tpattern: /^\\s*#!.+/,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: RegExp(/(^|[^\\\\])/.source + '(?:' + [\n\t\t\t\t// /+ comment +/\n\t\t\t\t// Allow one level of nesting\n\t\t\t\t/\\/\\+(?:\\/\\+(?:[^+]|\\+(?!\\/))*\\+\\/|(?!\\/\\+)[\\s\\S])*?\\+\\//.source,\n\t\t\t\t// // comment\n\t\t\t\t/\\/\\/.*/.source,\n\t\t\t\t// /* comment */\n\t\t\t\t/\\/\\*[\\s\\S]*?\\*\\//.source\n\t\t\t].join('|') + ')'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': [\n\t\t{\n\t\t\tpattern: RegExp([\n\t\t\t\t// r\"\", x\"\"\n\t\t\t\t/\\b[rx]\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"[cwd]?/.source,\n\n\t\t\t\t// q\"[]\", q\"()\", q\"<>\", q\"{}\"\n\t\t\t\t/\\bq\"(?:\\[[\\s\\S]*?\\]|\\([\\s\\S]*?\\)|<[\\s\\S]*?>|\\{[\\s\\S]*?\\})\"/.source,\n\n\t\t\t\t// q\"IDENT\n\t\t\t\t// ...\n\t\t\t\t// IDENT\"\n\t\t\t\t/\\bq\"((?!\\d)\\w+)$[\\s\\S]*?^\\1\"/.source,\n\n\t\t\t\t// q\"//\", q\"||\", etc.\n\t\t\t\t// eslint-disable-next-line regexp/strict\n\t\t\t\t/\\bq\"(.)[\\s\\S]*?\\2\"/.source,\n\n\t\t\t\t// Characters\n\t\t\t\t// 'a', '\\\\', '\\n', '\\xFF', '\\377', '\\uFFFF', '\\U0010FFFF', '\\quot'\n\t\t\t\t/'(?:\\\\(?:\\W|\\w+)|[^\\\\])'/.source,\n\n\t\t\t\t// eslint-disable-next-line regexp/strict\n\t\t\t\t/([\"`])(?:\\\\[\\s\\S]|(?!\\3)[^\\\\])*\\3[cwd]?/.source\n\t\t\t].join('|'), 'm'),\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /\\bq\\{(?:\\{[^{}]*\\}|[^{}])*\\}/,\n\t\t\tgreedy: true,\n\t\t\talias: 'token-string'\n\t\t}\n\t],\n\n\t// In order: $, keywords and special tokens, globally defined symbols\n\t'keyword': /\\$|\\b(?:abstract|alias|align|asm|assert|auto|body|bool|break|byte|case|cast|catch|cdouble|cent|cfloat|char|class|const|continue|creal|dchar|debug|default|delegate|delete|deprecated|do|double|else|enum|export|extern|false|final|finally|float|for|foreach|foreach_reverse|function|goto|idouble|if|ifloat|immutable|import|inout|int|interface|invariant|ireal|lazy|long|macro|mixin|module|new|nothrow|null|out|override|package|pragma|private|protected|public|pure|real|ref|return|scope|shared|short|static|struct|super|switch|synchronized|template|this|throw|true|try|typedef|typeid|typeof|ubyte|ucent|uint|ulong|union|unittest|ushort|version|void|volatile|wchar|while|with|__(?:(?:FILE|MODULE|LINE|FUNCTION|PRETTY_FUNCTION|DATE|EOF|TIME|TIMESTAMP|VENDOR|VERSION)__|gshared|traits|vector|parameters)|string|wstring|dstring|size_t|ptrdiff_t)\\b/,\n\n\t'number': [\n\t\t// The lookbehind and the negative look-ahead try to prevent bad highlighting of the .. operator\n\t\t// Hexadecimal numbers must be handled separately to avoid problems with exponent \"e\"\n\t\t/\\b0x\\.?[a-f\\d_]+(?:(?!\\.\\.)\\.[a-f\\d_]*)?(?:p[+-]?[a-f\\d_]+)?[ulfi]{0,4}/i,\n\t\t{\n\t\t\tpattern: /((?:\\.\\.)?)(?:\\b0b\\.?|\\b|\\.)\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?[ulfi]{0,4}/i,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\n\t'operator': /\\|[|=]?|&[&=]?|\\+[+=]?|-[-=]?|\\.?\\.\\.|=[>=]?|!(?:i[ns]\\b|<>?=?|>=?|=)?|\\bi[ns]\\b|(?:<[<>]?|>>?>?|\\^\\^|[*\\/%^~])=?/\n});\n\nPrism.languages.insertBefore('d', 'keyword', {\n\t'property': /\\B@\\w*/\n});\n\nPrism.languages.insertBefore('d', 'function', {\n\t'register': {\n\t\t// Iasm registers\n\t\tpattern: /\\b(?:[ABCD][LHX]|E[ABCD]X|E?(?:BP|SP|DI|SI)|[ECSDGF]S|CR[0234]|DR[012367]|TR[3-7]|X?MM[0-7]|R[ABCD]X|[BS]PL|R[BS]P|[DS]IL|R[DS]I|R(?:[89]|1[0-5])[BWD]?|XMM(?:[89]|1[0-5])|YMM(?:1[0-5]|\\d))\\b|\\bST(?:\\([0-7]\\)|\\b)/,\n\t\talias: 'variable'\n\t}\n});\n"]}}