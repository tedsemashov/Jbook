{"code":"(this[\"webpackJsonpcode-editor\"]=this[\"webpackJsonpcode-editor\"]||[]).push([[418],{588:function(e,n){Prism.languages.smali={comment:/#.*/,string:{pattern:/\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|'(?:[^\\r\\n\\\\']|\\\\(?:.|u[\\da-fA-F]{4}))'/,greedy:!0},\"class-name\":{pattern:/(^|[^L])L(?:(?:\\w+|`[^`\\r\\n]*`)\\/)*(?:[\\w$]+|`[^`\\r\\n]*`)(?=\\s*;)/,lookbehind:!0,inside:{\"class-name\":{pattern:/(^L|\\/)(?:[\\w$]+|`[^`\\r\\n]*`)$/,lookbehind:!0},namespace:{pattern:/^(L)(?:(?:\\w+|`[^`\\r\\n]*`)\\/)+/,lookbehind:!0,inside:{punctuation:/\\//}},builtin:/^L/}},builtin:[{pattern:/([();\\[])[BCDFIJSVZ]+/,lookbehind:!0},{pattern:/([\\w$>]:)[BCDFIJSVZ]/,lookbehind:!0}],keyword:[{pattern:/(\\.end\\s+)[\\w-]+/,lookbehind:!0},{pattern:/(^|[^\\w.-])\\.(?!\\d)[\\w-]+/,lookbehind:!0},{pattern:/(^|[^\\w.-])(?:abstract|annotation|bridge|constructor|enum|final|interface|private|protected|public|runtime|static|synthetic|system|transient)(?![\\w.-])/,lookbehind:!0}],function:{pattern:/(^|[^\\w.-])(?:\\w+|<[\\w$-]+>)(?=\\()/,lookbehind:!0},field:{pattern:/[\\w$]+(?=:)/,alias:\"variable\"},register:{pattern:/(^|[^\\w.-])[vp]\\d(?![\\w.-])/,lookbehind:!0,alias:\"variable\"},boolean:{pattern:/(^|[^\\w.-])(?:true|false)(?![\\w.-])/,lookbehind:!0},number:{pattern:/(^|[^/\\w.-])-?(?:NAN|INFINITY|0x(?:[\\dA-F]+(?:\\.[\\dA-F]*)?|\\.[\\dA-F]+)(?:p[+-]?[\\dA-F]+)?|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?)[dflst]?(?![\\w.-])/i,lookbehind:!0},label:{pattern:/(:)\\w+/,lookbehind:!0,alias:\"property\"},operator:/->|\\.\\.|[\\[=]/,punctuation:/[{}(),;:]/}}}]);","name":"static/js/418.7e600eb4.chunk.js","map":{"version":3,"sources":["static/js/418.7e600eb4.chunk.js"],"names":["this","push","module","exports","Prism","languages","smali","comment","string","pattern","greedy","lookbehind","inside","namespace","punctuation","builtin","keyword","function","field","alias","register","boolean","number","label","operator"],"mappings":"CAACA,KAAK,2BAA6BA,KAAK,4BAA8B,IAAIC,KAAK,CAAC,CAAC,KAAK,CAEhF,IACA,SAAUC,EAAQC,GAIxBC,MAAMC,UAAUC,MAAQ,CACtBC,QAAW,MACXC,OAAU,CACRC,QAAS,gEACTC,QAAQ,GAEV,aAAc,CACZD,QAAS,oEACTE,YAAY,EACZC,OAAQ,CACN,aAAc,CACZH,QAAS,iCACTE,YAAY,GAEdE,UAAa,CACXJ,QAAS,iCACTE,YAAY,EACZC,OAAQ,CACNE,YAAe,OAGnBC,QAAW,OAGfA,QAAW,CAAC,CAEVN,QAAS,wBACTE,YAAY,GACX,CAEDF,QAAS,uBACTE,YAAY,IAEdK,QAAW,CAAC,CACVP,QAAS,mBACTE,YAAY,GACX,CACDF,QAAS,4BACTE,YAAY,GACX,CACDF,QAAS,0JACTE,YAAY,IAEdM,SAAY,CACVR,QAAS,qCACTE,YAAY,GAEdO,MAAS,CACPT,QAAS,cACTU,MAAO,YAETC,SAAY,CACVX,QAAS,8BACTE,YAAY,EACZQ,MAAO,YAETE,QAAW,CACTZ,QAAS,sCACTE,YAAY,GAEdW,OAAU,CACRb,QAAS,sJACTE,YAAY,GAEdY,MAAS,CACPd,QAAS,SACTE,YAAY,EACZQ,MAAO,YAETK,SAAY,gBACZV,YAAe"},"input":"(this[\"webpackJsonpcode-editor\"] = this[\"webpackJsonpcode-editor\"] || []).push([[418],{\n\n/***/ 588:\n/***/ (function(module, exports) {\n\n// Test files for the parser itself:\n// https://github.com/JesusFreke/smali/tree/master/smali/src/test/resources/LexerTest\nPrism.languages.smali = {\n  'comment': /#.*/,\n  'string': {\n    pattern: /\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|'(?:[^\\r\\n\\\\']|\\\\(?:.|u[\\da-fA-F]{4}))'/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(^|[^L])L(?:(?:\\w+|`[^`\\r\\n]*`)\\/)*(?:[\\w$]+|`[^`\\r\\n]*`)(?=\\s*;)/,\n    lookbehind: true,\n    inside: {\n      'class-name': {\n        pattern: /(^L|\\/)(?:[\\w$]+|`[^`\\r\\n]*`)$/,\n        lookbehind: true\n      },\n      'namespace': {\n        pattern: /^(L)(?:(?:\\w+|`[^`\\r\\n]*`)\\/)+/,\n        lookbehind: true,\n        inside: {\n          'punctuation': /\\//\n        }\n      },\n      'builtin': /^L/\n    }\n  },\n  'builtin': [{\n    // Reference: https://github.com/JesusFreke/smali/wiki/TypesMethodsAndFields#types\n    pattern: /([();\\[])[BCDFIJSVZ]+/,\n    lookbehind: true\n  }, {\n    // e.g. .field mWifiOnUid:I\n    pattern: /([\\w$>]:)[BCDFIJSVZ]/,\n    lookbehind: true\n  }],\n  'keyword': [{\n    pattern: /(\\.end\\s+)[\\w-]+/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^\\w.-])\\.(?!\\d)[\\w-]+/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^\\w.-])(?:abstract|annotation|bridge|constructor|enum|final|interface|private|protected|public|runtime|static|synthetic|system|transient)(?![\\w.-])/,\n    lookbehind: true\n  }],\n  'function': {\n    pattern: /(^|[^\\w.-])(?:\\w+|<[\\w$-]+>)(?=\\()/,\n    lookbehind: true\n  },\n  'field': {\n    pattern: /[\\w$]+(?=:)/,\n    alias: 'variable'\n  },\n  'register': {\n    pattern: /(^|[^\\w.-])[vp]\\d(?![\\w.-])/,\n    lookbehind: true,\n    alias: 'variable'\n  },\n  'boolean': {\n    pattern: /(^|[^\\w.-])(?:true|false)(?![\\w.-])/,\n    lookbehind: true\n  },\n  'number': {\n    pattern: /(^|[^/\\w.-])-?(?:NAN|INFINITY|0x(?:[\\dA-F]+(?:\\.[\\dA-F]*)?|\\.[\\dA-F]+)(?:p[+-]?[\\dA-F]+)?|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?)[dflst]?(?![\\w.-])/i,\n    lookbehind: true\n  },\n  'label': {\n    pattern: /(:)\\w+/,\n    lookbehind: true,\n    alias: 'property'\n  },\n  'operator': /->|\\.\\.|[\\[=]/,\n  'punctuation': /[{}(),;:]/\n};\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Users/ted/Desktop/jbook/packages/local-client/node_modules/prismjs/components/prism-smali.js"],"names":["Prism","languages","smali","pattern","greedy","lookbehind","inside","alias"],"mappings":";;;;;AAAA;AACA;AAEAA,KAAK,CAACC,SAAN,CAAgBC,KAAhB,GAAwB;AACvB,aAAW,KADY;AAEvB,YAAU;AACTC,WAAO,EAAE,+DADA;AAETC,UAAM,EAAE;AAFC,GAFa;AAOvB,gBAAc;AACbD,WAAO,EAAE,mEADI;AAEbE,cAAU,EAAE,IAFC;AAGbC,UAAM,EAAE;AACP,oBAAc;AACbH,eAAO,EAAE,gCADI;AAEbE,kBAAU,EAAE;AAFC,OADP;AAKP,mBAAa;AACZF,eAAO,EAAE,gCADG;AAEZE,kBAAU,EAAE,IAFA;AAGZC,cAAM,EAAE;AACP,yBAAe;AADR;AAHI,OALN;AAYP,iBAAW;AAZJ;AAHK,GAPS;AAyBvB,aAAW,CACV;AACC;AACAH,WAAO,EAAE,uBAFV;AAGCE,cAAU,EAAE;AAHb,GADU,EAMV;AACC;AACAF,WAAO,EAAE,sBAFV;AAGCE,cAAU,EAAE;AAHb,GANU,CAzBY;AAqCvB,aAAW,CACV;AACCF,WAAO,EAAE,kBADV;AAECE,cAAU,EAAE;AAFb,GADU,EAKV;AACCF,WAAO,EAAE,2BADV;AAECE,cAAU,EAAE;AAFb,GALU,EASV;AACCF,WAAO,EAAE,yJADV;AAECE,cAAU,EAAE;AAFb,GATU,CArCY;AAmDvB,cAAY;AACXF,WAAO,EAAE,oCADE;AAEXE,cAAU,EAAE;AAFD,GAnDW;AAwDvB,WAAS;AACRF,WAAO,EAAE,aADD;AAERI,SAAK,EAAE;AAFC,GAxDc;AA4DvB,cAAY;AACXJ,WAAO,EAAE,6BADE;AAEXE,cAAU,EAAE,IAFD;AAGXE,SAAK,EAAE;AAHI,GA5DW;AAkEvB,aAAW;AACVJ,WAAO,EAAE,qCADC;AAEVE,cAAU,EAAE;AAFF,GAlEY;AAsEvB,YAAU;AACTF,WAAO,EAAE,qJADA;AAETE,cAAU,EAAE;AAFH,GAtEa;AA2EvB,WAAS;AACRF,WAAO,EAAE,QADD;AAERE,cAAU,EAAE,IAFJ;AAGRE,SAAK,EAAE;AAHC,GA3Ec;AAiFvB,cAAY,eAjFW;AAkFvB,iBAAe;AAlFQ,CAAxB,C","file":"x","sourcesContent":["// Test files for the parser itself:\n// https://github.com/JesusFreke/smali/tree/master/smali/src/test/resources/LexerTest\n\nPrism.languages.smali = {\n\t'comment': /#.*/,\n\t'string': {\n\t\tpattern: /\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|'(?:[^\\r\\n\\\\']|\\\\(?:.|u[\\da-fA-F]{4}))'/,\n\t\tgreedy: true\n\t},\n\n\t'class-name': {\n\t\tpattern: /(^|[^L])L(?:(?:\\w+|`[^`\\r\\n]*`)\\/)*(?:[\\w$]+|`[^`\\r\\n]*`)(?=\\s*;)/,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'class-name': {\n\t\t\t\tpattern: /(^L|\\/)(?:[\\w$]+|`[^`\\r\\n]*`)$/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'namespace': {\n\t\t\t\tpattern: /^(L)(?:(?:\\w+|`[^`\\r\\n]*`)\\/)+/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /\\//\n\t\t\t\t}\n\t\t\t},\n\t\t\t'builtin': /^L/\n\t\t}\n\t},\n\t'builtin': [\n\t\t{\n\t\t\t// Reference: https://github.com/JesusFreke/smali/wiki/TypesMethodsAndFields#types\n\t\t\tpattern: /([();\\[])[BCDFIJSVZ]+/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\t// e.g. .field mWifiOnUid:I\n\t\t\tpattern: /([\\w$>]:)[BCDFIJSVZ]/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /(\\.end\\s+)[\\w-]+/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\w.-])\\.(?!\\d)[\\w-]+/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\w.-])(?:abstract|annotation|bridge|constructor|enum|final|interface|private|protected|public|runtime|static|synthetic|system|transient)(?![\\w.-])/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'function': {\n\t\tpattern: /(^|[^\\w.-])(?:\\w+|<[\\w$-]+>)(?=\\()/,\n\t\tlookbehind: true\n\t},\n\n\t'field': {\n\t\tpattern: /[\\w$]+(?=:)/,\n\t\talias: 'variable'\n\t},\n\t'register': {\n\t\tpattern: /(^|[^\\w.-])[vp]\\d(?![\\w.-])/,\n\t\tlookbehind: true,\n\t\talias: 'variable'\n\t},\n\n\t'boolean': {\n\t\tpattern: /(^|[^\\w.-])(?:true|false)(?![\\w.-])/,\n\t\tlookbehind: true\n\t},\n\t'number': {\n\t\tpattern: /(^|[^/\\w.-])-?(?:NAN|INFINITY|0x(?:[\\dA-F]+(?:\\.[\\dA-F]*)?|\\.[\\dA-F]+)(?:p[+-]?[\\dA-F]+)?|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?)[dflst]?(?![\\w.-])/i,\n\t\tlookbehind: true\n\t},\n\n\t'label': {\n\t\tpattern: /(:)\\w+/,\n\t\tlookbehind: true,\n\t\talias: 'property'\n\t},\n\n\t'operator': /->|\\.\\.|[\\[=]/,\n\t'punctuation': /[{}(),;:]/\n};\n"]}}