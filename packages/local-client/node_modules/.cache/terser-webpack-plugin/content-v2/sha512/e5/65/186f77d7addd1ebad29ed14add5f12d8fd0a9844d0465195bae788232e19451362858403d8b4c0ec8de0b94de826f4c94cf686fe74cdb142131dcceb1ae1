{"code":"(this[\"webpackJsonpcode-editor\"]=this[\"webpackJsonpcode-editor\"]||[]).push([[445],{615:function(e,n){!function(e){var n={pattern:/(\\b\\d+)(?:%|[a-z]+)/,lookbehind:!0},r={pattern:/(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,lookbehind:!0},t={comment:{pattern:/(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,lookbehind:!0},url:{pattern:/\\burl\\(([\"']?).*?\\1\\)/i,greedy:!0},string:{pattern:/(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,greedy:!0},interpolation:null,func:null,important:/\\B!(?:important|optional)\\b/i,keyword:{pattern:/(^|\\s+)(?:(?:if|else|for|return|unless)(?=\\s|$)|@[\\w-]+)/,lookbehind:!0},hexcode:/#[\\da-f]{3,6}/i,color:[/\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i,{pattern:/\\b(?:rgb|hsl)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:rgb|hsl)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,inside:{unit:n,number:r,function:/[\\w-]+(?=\\()/,punctuation:/[(),]/}}],entity:/\\\\[\\da-f]{1,8}/i,unit:n,boolean:/\\b(?:true|false)\\b/,operator:[/~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.{2,3}|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],number:r,punctuation:/[{}()\\[\\];:,]/};t.interpolation={pattern:/\\{[^\\r\\n}:]+\\}/,alias:\"variable\",inside:{delimiter:{pattern:/^\\{|\\}$/,alias:\"punctuation\"},rest:t}},t.func={pattern:/[\\w-]+\\([^)]*\\).*/,inside:{function:/^[^(]+/,rest:t}},e.languages.stylus={\"atrule-declaration\":{pattern:/(^[ \\t]*)@.+/m,lookbehind:!0,inside:{atrule:/^@[\\w-]+/,rest:t}},\"variable-declaration\":{pattern:/(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:\\{[^{}]*\\}|\\S.*|$)/m,lookbehind:!0,inside:{variable:/^\\S+/,rest:t}},statement:{pattern:/(^[ \\t]*)(?:if|else|for|return|unless)[ \\t].+/m,lookbehind:!0,inside:{keyword:/^\\S+/,rest:t}},\"property-declaration\":{pattern:/((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)(?!\\s)[^{\\r\\n]*(?:;|[^{\\r\\n,]$(?!(?:\\r?\\n|\\r)(?:\\{|\\2[ \\t])))/m,lookbehind:!0,inside:{property:{pattern:/^[^\\s:]+/,inside:{interpolation:t.interpolation}},rest:t}},selector:{pattern:/(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t])))/m,lookbehind:!0,inside:{interpolation:t.interpolation,comment:t.comment,punctuation:/[{},]/}},func:t.func,string:t.string,comment:{pattern:/(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,lookbehind:!0,greedy:!0},interpolation:t.interpolation,punctuation:/[{}()\\[\\];:.]/}}(Prism)}}]);","name":"static/js/445.d22f638e.chunk.js","map":{"version":3,"sources":["static/js/445.d22f638e.chunk.js"],"names":["this","push","module","exports","e","n","pattern","lookbehind","r","t","comment","url","greedy","string","interpolation","func","important","keyword","hexcode","color","inside","unit","number","function","punctuation","entity","boolean","operator","alias","delimiter","rest","languages","stylus","atrule","variable","statement","property","selector","Prism"],"mappings":"CAACA,KAAK,2BAA6BA,KAAK,4BAA8B,IAAIC,KAAK,CAAC,CAAC,KAAK,CAEhF,IACA,SAAUC,EAAQC,IAEvB,SAAUC,GACT,IAAIC,EAAI,CACNC,QAAS,sBACTC,YAAY,GAEVC,EAAI,CACNF,QAAS,uCACTC,YAAY,GAEVE,EAAI,CACNC,QAAS,CACPJ,QAAS,uCACTC,YAAY,GAEdI,IAAK,CACHL,QAAS,yBACTM,QAAQ,GAEVC,OAAQ,CACNP,QAAS,gDACTM,QAAQ,GAEVE,cAAe,KACfC,KAAM,KACNC,UAAW,+BACXC,QAAS,CACPX,QAAS,2DACTC,YAAY,GAEdW,QAAS,iBACTC,MAAO,CAAC,q5CAAs5C,CAC55Cb,QAAS,4JACTc,OAAQ,CACNC,KAAMhB,EACNiB,OAAQd,EACRe,SAAU,eACVC,YAAa,WAGjBC,OAAQ,kBACRJ,KAAMhB,EACNqB,QAAS,qBACTC,SAAU,CAAC,wGACXL,OAAQd,EACRgB,YAAa,iBAEff,EAAEK,cAAgB,CAChBR,QAAS,iBACTsB,MAAO,WACPR,OAAQ,CACNS,UAAW,CACTvB,QAAS,UACTsB,MAAO,eAETE,KAAMrB,IAEPA,EAAEM,KAAO,CACVT,QAAS,oBACTc,OAAQ,CACNG,SAAU,SACVO,KAAMrB,IAEPL,EAAE2B,UAAUC,OAAS,CACtB,qBAAsB,CACpB1B,QAAS,gBACTC,YAAY,EACZa,OAAQ,CACNa,OAAQ,WACRH,KAAMrB,IAGV,uBAAwB,CACtBH,QAAS,qDACTC,YAAY,EACZa,OAAQ,CACNc,SAAU,OACVJ,KAAMrB,IAGV0B,UAAW,CACT7B,QAAS,iDACTC,YAAY,EACZa,OAAQ,CACNH,QAAS,OACTa,KAAMrB,IAGV,uBAAwB,CACtBH,QAAS,6HACTC,YAAY,EACZa,OAAQ,CACNgB,SAAU,CACR9B,QAAS,WACTc,OAAQ,CACNN,cAAeL,EAAEK,gBAGrBgB,KAAMrB,IAGV4B,SAAU,CACR/B,QAAS,wOACTC,YAAY,EACZa,OAAQ,CACNN,cAAeL,EAAEK,cACjBJ,QAASD,EAAEC,QACXc,YAAa,UAGjBT,KAAMN,EAAEM,KACRF,OAAQJ,EAAEI,OACVH,QAAS,CACPJ,QAAS,uCACTC,YAAY,EACZK,QAAQ,GAEVE,cAAeL,EAAEK,cACjBU,YAAa,iBArHhB,CAuHCc"},"input":"(this[\"webpackJsonpcode-editor\"] = this[\"webpackJsonpcode-editor\"] || []).push([[445],{\n\n/***/ 615:\n/***/ (function(module, exports) {\n\n!function (e) {\n  var n = {\n    pattern: /(\\b\\d+)(?:%|[a-z]+)/,\n    lookbehind: !0\n  },\n      r = {\n    pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n    lookbehind: !0\n  },\n      t = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: !0\n    },\n    url: {\n      pattern: /\\burl\\(([\"']?).*?\\1\\)/i,\n      greedy: !0\n    },\n    string: {\n      pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: !0\n    },\n    interpolation: null,\n    func: null,\n    important: /\\B!(?:important|optional)\\b/i,\n    keyword: {\n      pattern: /(^|\\s+)(?:(?:if|else|for|return|unless)(?=\\s|$)|@[\\w-]+)/,\n      lookbehind: !0\n    },\n    hexcode: /#[\\da-f]{3,6}/i,\n    color: [/\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i, {\n      pattern: /\\b(?:rgb|hsl)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:rgb|hsl)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n      inside: {\n        unit: n,\n        number: r,\n        function: /[\\w-]+(?=\\()/,\n        punctuation: /[(),]/\n      }\n    }],\n    entity: /\\\\[\\da-f]{1,8}/i,\n    unit: n,\n    boolean: /\\b(?:true|false)\\b/,\n    operator: [/~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.{2,3}|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],\n    number: r,\n    punctuation: /[{}()\\[\\];:,]/\n  };\n  t.interpolation = {\n    pattern: /\\{[^\\r\\n}:]+\\}/,\n    alias: \"variable\",\n    inside: {\n      delimiter: {\n        pattern: /^\\{|\\}$/,\n        alias: \"punctuation\"\n      },\n      rest: t\n    }\n  }, t.func = {\n    pattern: /[\\w-]+\\([^)]*\\).*/,\n    inside: {\n      function: /^[^(]+/,\n      rest: t\n    }\n  }, e.languages.stylus = {\n    \"atrule-declaration\": {\n      pattern: /(^[ \\t]*)@.+/m,\n      lookbehind: !0,\n      inside: {\n        atrule: /^@[\\w-]+/,\n        rest: t\n      }\n    },\n    \"variable-declaration\": {\n      pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:\\{[^{}]*\\}|\\S.*|$)/m,\n      lookbehind: !0,\n      inside: {\n        variable: /^\\S+/,\n        rest: t\n      }\n    },\n    statement: {\n      pattern: /(^[ \\t]*)(?:if|else|for|return|unless)[ \\t].+/m,\n      lookbehind: !0,\n      inside: {\n        keyword: /^\\S+/,\n        rest: t\n      }\n    },\n    \"property-declaration\": {\n      pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)(?!\\s)[^{\\r\\n]*(?:;|[^{\\r\\n,]$(?!(?:\\r?\\n|\\r)(?:\\{|\\2[ \\t])))/m,\n      lookbehind: !0,\n      inside: {\n        property: {\n          pattern: /^[^\\s:]+/,\n          inside: {\n            interpolation: t.interpolation\n          }\n        },\n        rest: t\n      }\n    },\n    selector: {\n      pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t])))/m,\n      lookbehind: !0,\n      inside: {\n        interpolation: t.interpolation,\n        comment: t.comment,\n        punctuation: /[{},]/\n      }\n    },\n    func: t.func,\n    string: t.string,\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: !0,\n      greedy: !0\n    },\n    interpolation: t.interpolation,\n    punctuation: /[{}()\\[\\];:.]/\n  };\n}(Prism);\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Users/ted/Desktop/jbook/packages/local-client/node_modules/prismjs/components/prism-stylus.min.js"],"names":["e","n","pattern","lookbehind","r","t","comment","url","greedy","string","interpolation","func","important","keyword","hexcode","color","inside","unit","number","function","punctuation","entity","boolean","operator","alias","delimiter","rest","languages","stylus","atrule","variable","statement","property","selector","Prism"],"mappings":"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","file":"x","sourcesContent":["!function(e){var n={pattern:/(\\b\\d+)(?:%|[a-z]+)/,lookbehind:!0},r={pattern:/(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,lookbehind:!0},t={comment:{pattern:/(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,lookbehind:!0},url:{pattern:/\\burl\\(([\"']?).*?\\1\\)/i,greedy:!0},string:{pattern:/(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,greedy:!0},interpolation:null,func:null,important:/\\B!(?:important|optional)\\b/i,keyword:{pattern:/(^|\\s+)(?:(?:if|else|for|return|unless)(?=\\s|$)|@[\\w-]+)/,lookbehind:!0},hexcode:/#[\\da-f]{3,6}/i,color:[/\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i,{pattern:/\\b(?:rgb|hsl)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:rgb|hsl)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,inside:{unit:n,number:r,function:/[\\w-]+(?=\\()/,punctuation:/[(),]/}}],entity:/\\\\[\\da-f]{1,8}/i,unit:n,boolean:/\\b(?:true|false)\\b/,operator:[/~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.{2,3}|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],number:r,punctuation:/[{}()\\[\\];:,]/};t.interpolation={pattern:/\\{[^\\r\\n}:]+\\}/,alias:\"variable\",inside:{delimiter:{pattern:/^\\{|\\}$/,alias:\"punctuation\"},rest:t}},t.func={pattern:/[\\w-]+\\([^)]*\\).*/,inside:{function:/^[^(]+/,rest:t}},e.languages.stylus={\"atrule-declaration\":{pattern:/(^[ \\t]*)@.+/m,lookbehind:!0,inside:{atrule:/^@[\\w-]+/,rest:t}},\"variable-declaration\":{pattern:/(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:\\{[^{}]*\\}|\\S.*|$)/m,lookbehind:!0,inside:{variable:/^\\S+/,rest:t}},statement:{pattern:/(^[ \\t]*)(?:if|else|for|return|unless)[ \\t].+/m,lookbehind:!0,inside:{keyword:/^\\S+/,rest:t}},\"property-declaration\":{pattern:/((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)(?!\\s)[^{\\r\\n]*(?:;|[^{\\r\\n,]$(?!(?:\\r?\\n|\\r)(?:\\{|\\2[ \\t])))/m,lookbehind:!0,inside:{property:{pattern:/^[^\\s:]+/,inside:{interpolation:t.interpolation}},rest:t}},selector:{pattern:/(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t])))/m,lookbehind:!0,inside:{interpolation:t.interpolation,comment:t.comment,punctuation:/[{},]/}},func:t.func,string:t.string,comment:{pattern:/(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,lookbehind:!0,greedy:!0},interpolation:t.interpolation,punctuation:/[{}()\\[\\];:.]/}}(Prism);"]}}