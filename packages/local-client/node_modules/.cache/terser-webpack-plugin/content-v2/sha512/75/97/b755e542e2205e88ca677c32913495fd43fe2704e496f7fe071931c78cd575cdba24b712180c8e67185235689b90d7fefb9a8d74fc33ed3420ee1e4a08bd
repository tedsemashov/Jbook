{"code":"(this[\"webpackJsonpcode-editor\"]=this[\"webpackJsonpcode-editor\"]||[]).push([[150],{320:function(e,t){Prism.languages.fsharp=Prism.languages.extend(\"clike\",{comment:[{pattern:/(^|[^\\\\])\\(\\*(?!\\))[\\s\\S]*?\\*\\)/,lookbehind:!0},{pattern:/(^|[^\\\\:])\\/\\/.*/,lookbehind:!0}],string:{pattern:/(?:\"\"\"[\\s\\S]*?\"\"\"|@\"(?:\"\"|[^\"])*\"|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")B?|'(?:[^\\\\']|\\\\(?:.|\\d{3}|x[a-fA-F\\d]{2}|u[a-fA-F\\d]{4}|U[a-fA-F\\d]{8}))'B?/,greedy:!0},\"class-name\":{pattern:/(\\b(?:exception|inherit|interface|new|of|type)\\s+|\\w\\s*:\\s*|\\s:\\??>\\s*)[.\\w]+\\b(?:\\s*(?:->|\\*)\\s*[.\\w]+\\b)*(?!\\s*[:.])/,lookbehind:!0,inside:{operator:/->|\\*/,punctuation:/\\./}},keyword:/\\b(?:let|return|use|yield)(?:!\\B|\\b)|\\b(?:abstract|and|as|assert|base|begin|class|default|delegate|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|fun|function|global|if|in|inherit|inline|interface|internal|lazy|match|member|module|mutable|namespace|new|not|null|of|open|or|override|private|public|rec|select|static|struct|then|to|true|try|type|upcast|val|void|when|while|with|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|include|method|mixin|object|parallel|process|protected|pure|sealed|tailcall|trait|virtual|volatile)\\b/,number:[/\\b0x[\\da-fA-F]+(?:un|lf|LF)?\\b/,/\\b0b[01]+(?:y|uy)?\\b/,/(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[fm]|e[+-]?\\d+)?\\b/i,/\\b\\d+(?:[IlLsy]|u[lsy]?|UL)?\\b/],operator:/([<>~&^])\\1\\1|([*.:<>&])\\2|<-|->|[!=:]=|<?\\|{1,3}>?|\\??(?:<=|>=|<>|[-+*/%=<>])\\??|[!?^&]|~[+~-]|:>|:\\?>?/}),Prism.languages.insertBefore(\"fsharp\",\"keyword\",{preprocessor:{pattern:/(^[\\t ]*)#.*/m,lookbehind:!0,alias:\"property\",inside:{directive:{pattern:/(^#)\\b(?:else|endif|if|light|line|nowarn)\\b/,lookbehind:!0,alias:\"keyword\"}}}}),Prism.languages.insertBefore(\"fsharp\",\"punctuation\",{\"computation-expression\":{pattern:/\\b[_a-z]\\w*(?=\\s*\\{)/i,alias:\"keyword\"}}),Prism.languages.insertBefore(\"fsharp\",\"string\",{annotation:{pattern:/\\[<.+?>\\]/,inside:{punctuation:/^\\[<|>\\]$/,\"class-name\":{pattern:/^\\w+$|(^|;\\s*)[A-Z]\\w*(?=\\()/,lookbehind:!0},\"annotation-content\":{pattern:/[\\s\\S]+/,inside:Prism.languages.fsharp}}}})}}]);","name":"static/js/150.e98e89b7.chunk.js","map":{"version":3,"sources":["static/js/150.e98e89b7.chunk.js"],"names":["this","push","module","exports","Prism","languages","fsharp","extend","comment","pattern","lookbehind","string","greedy","inside","operator","punctuation","keyword","number","insertBefore","preprocessor","alias","directive","annotation"],"mappings":"CAACA,KAAK,2BAA6BA,KAAK,4BAA8B,IAAIC,KAAK,CAAC,CAAC,KAAK,CAEhF,IACA,SAAUC,EAAQC,GAExBC,MAAMC,UAAUC,OAASF,MAAMC,UAAUE,OAAO,QAAS,CACvDC,QAAW,CAAC,CACVC,QAAS,kCACTC,YAAY,GACX,CACDD,QAAS,mBACTC,YAAY,IAEdC,OAAU,CACRF,QAAS,wIACTG,QAAQ,GAEV,aAAc,CACZH,QAAS,yHACTC,YAAY,EACZG,OAAQ,CACNC,SAAY,QACZC,YAAe,OAGnBC,QAAW,ooBACXC,OAAU,CAAC,iCAAkC,uBAAwB,oDAAqD,kCAC1HH,SAAY,6GAEdV,MAAMC,UAAUa,aAAa,SAAU,UAAW,CAChDC,aAAgB,CACdV,QAAS,gBACTC,YAAY,EACZU,MAAO,WACPP,OAAQ,CACNQ,UAAa,CACXZ,QAAS,8CACTC,YAAY,EACZU,MAAO,eAKfhB,MAAMC,UAAUa,aAAa,SAAU,cAAe,CACpD,yBAA0B,CACxBT,QAAS,wBACTW,MAAO,aAGXhB,MAAMC,UAAUa,aAAa,SAAU,SAAU,CAC/CI,WAAc,CACZb,QAAS,YACTI,OAAQ,CACNE,YAAe,YACf,aAAc,CACZN,QAAS,+BACTC,YAAY,GAEd,qBAAsB,CACpBD,QAAS,UACTI,OAAQT,MAAMC,UAAUC"},"input":"(this[\"webpackJsonpcode-editor\"] = this[\"webpackJsonpcode-editor\"] || []).push([[150],{\n\n/***/ 320:\n/***/ (function(module, exports) {\n\nPrism.languages.fsharp = Prism.languages.extend('clike', {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\(\\*(?!\\))[\\s\\S]*?\\*\\)/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true\n  }],\n  'string': {\n    pattern: /(?:\"\"\"[\\s\\S]*?\"\"\"|@\"(?:\"\"|[^\"])*\"|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")B?|'(?:[^\\\\']|\\\\(?:.|\\d{3}|x[a-fA-F\\d]{2}|u[a-fA-F\\d]{4}|U[a-fA-F\\d]{8}))'B?/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:exception|inherit|interface|new|of|type)\\s+|\\w\\s*:\\s*|\\s:\\??>\\s*)[.\\w]+\\b(?:\\s*(?:->|\\*)\\s*[.\\w]+\\b)*(?!\\s*[:.])/,\n    lookbehind: true,\n    inside: {\n      'operator': /->|\\*/,\n      'punctuation': /\\./\n    }\n  },\n  'keyword': /\\b(?:let|return|use|yield)(?:!\\B|\\b)|\\b(?:abstract|and|as|assert|base|begin|class|default|delegate|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|fun|function|global|if|in|inherit|inline|interface|internal|lazy|match|member|module|mutable|namespace|new|not|null|of|open|or|override|private|public|rec|select|static|struct|then|to|true|try|type|upcast|val|void|when|while|with|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|include|method|mixin|object|parallel|process|protected|pure|sealed|tailcall|trait|virtual|volatile)\\b/,\n  'number': [/\\b0x[\\da-fA-F]+(?:un|lf|LF)?\\b/, /\\b0b[01]+(?:y|uy)?\\b/, /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[fm]|e[+-]?\\d+)?\\b/i, /\\b\\d+(?:[IlLsy]|u[lsy]?|UL)?\\b/],\n  'operator': /([<>~&^])\\1\\1|([*.:<>&])\\2|<-|->|[!=:]=|<?\\|{1,3}>?|\\??(?:<=|>=|<>|[-+*/%=<>])\\??|[!?^&]|~[+~-]|:>|:\\?>?/\n});\nPrism.languages.insertBefore('fsharp', 'keyword', {\n  'preprocessor': {\n    pattern: /(^[\\t ]*)#.*/m,\n    lookbehind: true,\n    alias: 'property',\n    inside: {\n      'directive': {\n        pattern: /(^#)\\b(?:else|endif|if|light|line|nowarn)\\b/,\n        lookbehind: true,\n        alias: 'keyword'\n      }\n    }\n  }\n});\nPrism.languages.insertBefore('fsharp', 'punctuation', {\n  'computation-expression': {\n    pattern: /\\b[_a-z]\\w*(?=\\s*\\{)/i,\n    alias: 'keyword'\n  }\n});\nPrism.languages.insertBefore('fsharp', 'string', {\n  'annotation': {\n    pattern: /\\[<.+?>\\]/,\n    inside: {\n      'punctuation': /^\\[<|>\\]$/,\n      'class-name': {\n        pattern: /^\\w+$|(^|;\\s*)[A-Z]\\w*(?=\\()/,\n        lookbehind: true\n      },\n      'annotation-content': {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages.fsharp\n      }\n    }\n  }\n});\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Users/ted/Desktop/jbook/packages/local-client/node_modules/prismjs/components/prism-fsharp.js"],"names":["Prism","languages","fsharp","extend","pattern","lookbehind","greedy","inside","insertBefore","alias"],"mappings":";;;;;AAAAA,KAAK,CAACC,SAAN,CAAgBC,MAAhB,GAAyBF,KAAK,CAACC,SAAN,CAAgBE,MAAhB,CAAuB,OAAvB,EAAgC;AACxD,aAAW,CACV;AACCC,WAAO,EAAE,iCADV;AAECC,cAAU,EAAE;AAFb,GADU,EAKV;AACCD,WAAO,EAAE,kBADV;AAECC,cAAU,EAAE;AAFb,GALU,CAD6C;AAWxD,YAAU;AACTD,WAAO,EAAE,uIADA;AAETE,UAAM,EAAE;AAFC,GAX8C;AAexD,gBAAc;AACbF,WAAO,EAAE,wHADI;AAEbC,cAAU,EAAE,IAFC;AAGbE,UAAM,EAAE;AACP,kBAAY,OADL;AAEP,qBAAe;AAFR;AAHK,GAf0C;AAuBxD,aAAW,moBAvB6C;AAwBxD,YAAU,CACT,gCADS,EAET,sBAFS,EAGT,mDAHS,EAIT,gCAJS,CAxB8C;AA8BxD,cAAY;AA9B4C,CAAhC,CAAzB;AAgCAP,KAAK,CAACC,SAAN,CAAgBO,YAAhB,CAA6B,QAA7B,EAAuC,SAAvC,EAAkD;AACjD,kBAAgB;AACfJ,WAAO,EAAE,eADM;AAEfC,cAAU,EAAE,IAFG;AAGfI,SAAK,EAAE,UAHQ;AAIfF,UAAM,EAAE;AACP,mBAAa;AACZH,eAAO,EAAE,6CADG;AAEZC,kBAAU,EAAE,IAFA;AAGZI,aAAK,EAAE;AAHK;AADN;AAJO;AADiC,CAAlD;AAcAT,KAAK,CAACC,SAAN,CAAgBO,YAAhB,CAA6B,QAA7B,EAAuC,aAAvC,EAAsD;AACrD,4BAA0B;AACzBJ,WAAO,EAAE,uBADgB;AAEzBK,SAAK,EAAE;AAFkB;AAD2B,CAAtD;AAMAT,KAAK,CAACC,SAAN,CAAgBO,YAAhB,CAA6B,QAA7B,EAAuC,QAAvC,EAAiD;AAChD,gBAAc;AACbJ,WAAO,EAAE,WADI;AAEbG,UAAM,EAAE;AACP,qBAAe,WADR;AAEP,oBAAc;AACbH,eAAO,EAAE,8BADI;AAEbC,kBAAU,EAAE;AAFC,OAFP;AAMP,4BAAsB;AACrBD,eAAO,EAAE,SADY;AAErBG,cAAM,EAAEP,KAAK,CAACC,SAAN,CAAgBC;AAFH;AANf;AAFK;AADkC,CAAjD,E","file":"x","sourcesContent":["Prism.languages.fsharp = Prism.languages.extend('clike', {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\(\\*(?!\\))[\\s\\S]*?\\*\\)/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /(?:\"\"\"[\\s\\S]*?\"\"\"|@\"(?:\"\"|[^\"])*\"|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")B?|'(?:[^\\\\']|\\\\(?:.|\\d{3}|x[a-fA-F\\d]{2}|u[a-fA-F\\d]{4}|U[a-fA-F\\d]{8}))'B?/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:exception|inherit|interface|new|of|type)\\s+|\\w\\s*:\\s*|\\s:\\??>\\s*)[.\\w]+\\b(?:\\s*(?:->|\\*)\\s*[.\\w]+\\b)*(?!\\s*[:.])/,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'operator': /->|\\*/,\n\t\t\t'punctuation': /\\./\n\t\t}\n\t},\n\t'keyword': /\\b(?:let|return|use|yield)(?:!\\B|\\b)|\\b(?:abstract|and|as|assert|base|begin|class|default|delegate|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|fun|function|global|if|in|inherit|inline|interface|internal|lazy|match|member|module|mutable|namespace|new|not|null|of|open|or|override|private|public|rec|select|static|struct|then|to|true|try|type|upcast|val|void|when|while|with|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|include|method|mixin|object|parallel|process|protected|pure|sealed|tailcall|trait|virtual|volatile)\\b/,\n\t'number': [\n\t\t/\\b0x[\\da-fA-F]+(?:un|lf|LF)?\\b/,\n\t\t/\\b0b[01]+(?:y|uy)?\\b/,\n\t\t/(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[fm]|e[+-]?\\d+)?\\b/i,\n\t\t/\\b\\d+(?:[IlLsy]|u[lsy]?|UL)?\\b/\n\t],\n\t'operator': /([<>~&^])\\1\\1|([*.:<>&])\\2|<-|->|[!=:]=|<?\\|{1,3}>?|\\??(?:<=|>=|<>|[-+*/%=<>])\\??|[!?^&]|~[+~-]|:>|:\\?>?/\n});\nPrism.languages.insertBefore('fsharp', 'keyword', {\n\t'preprocessor': {\n\t\tpattern: /(^[\\t ]*)#.*/m,\n\t\tlookbehind: true,\n\t\talias: 'property',\n\t\tinside: {\n\t\t\t'directive': {\n\t\t\t\tpattern: /(^#)\\b(?:else|endif|if|light|line|nowarn)\\b/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'keyword'\n\t\t\t}\n\t\t}\n\t}\n});\nPrism.languages.insertBefore('fsharp', 'punctuation', {\n\t'computation-expression': {\n\t\tpattern: /\\b[_a-z]\\w*(?=\\s*\\{)/i,\n\t\talias: 'keyword'\n\t}\n});\nPrism.languages.insertBefore('fsharp', 'string', {\n\t'annotation': {\n\t\tpattern: /\\[<.+?>\\]/,\n\t\tinside: {\n\t\t\t'punctuation': /^\\[<|>\\]$/,\n\t\t\t'class-name': {\n\t\t\t\tpattern: /^\\w+$|(^|;\\s*)[A-Z]\\w*(?=\\()/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'annotation-content': {\n\t\t\t\tpattern: /[\\s\\S]+/,\n\t\t\t\tinside: Prism.languages.fsharp\n\t\t\t}\n\t\t}\n\t}\n});\n"]}}